import * as i from "d3";
import { openBlock as _, createElementBlock as y } from "vue";
const $ = (t) => (l) => {
  let {
    timeScale: a,
    onEventClick: r
  } = t, e = l.selectAll("g.event").data(l.data()[0][0]), o = e.enter().append("g").classed("event", !0).attr("transform", (n) => `translate(${a(n.start)} ${n.position * 22})`).on("click", r);
  o.append("rect").attr("width", (n) => n.end ? a(n.end) - a(n.start) : 10).attr("height", 20).attr("fill", "rgba(85, 187, 238, 0.2)").attr("ry", 6), o.append("text").attr("dy", "1em").style("pointer-events", "none").text((n) => n.name), e.attr("transform", (n) => `translate(${a(n.start)} ${n.position * 22})`).selectAll("rect").attr("width", (n) => n.end ? a(n.end) - a(n.start) : 10);
};
function k(t) {
  return i.timeDay(t) < t ? i.timeFormat("%I:%M")(t) : i.timeMonth(t) < t ? i.timeFormat("%b %d")(t) : i.timeYear(t) < t ? i.timeFormat("%B")(t) : i.timeFormat("%Y")(t);
}
const E = (t) => (l) => {
  let {
    timeScale: a,
    height: r
  } = t, e = l.selectAll(".axe").data((n) => n), o = i.axisBottom().scale(a).tickFormat((n) => k(n));
  e.enter().append("g").attr("transform", `translate(0, ${r + 5})`).classed("axe", !0).call(o), e.call(o);
}, b = (t) => {
  let {
    timeScale: l,
    view: a,
    draw: r
  } = t;
  return i.zoom().on("zoom", (e) => {
    let { k: o, x: n, y: c } = e.transform, m = i.zoomIdentity.translate(n, c).scale(o).rescaleX(l);
    a.call(r(m));
  });
}, z = (t) => (l) => {
  let {
    timeScale: a,
    height: r
  } = t, e = a(Date.now()), o = l.selectAll(".cursor").data((c) => c);
  o.enter().append("g").classed("cursor", !0).attr("transform", `translate(${e})`).append("line").attr("x1", 0).attr("y1", 0).attr("x2", 0).attr("y2", r).attr("stroke", "red"), o.attr("transform", `translate(${e})`);
};
function A(t, l) {
  let a = t.start, r = t.end, e = l.start, o = l.end;
  return !o || !r ? !1 : e < a && a < o || a < e && e < r;
}
const C = {
  generate(t) {
    t.forEach((r) => {
      r.duration = r.end ? r.end - r.start : 0;
    }), t.sort((r, e) => e.duration - r.duration);
    let l = [];
    t.forEach((r) => {
      r.level = 0, l.forEach((e) => {
        A(r, e) && r.level++;
      }), l.push(r);
    });
    let a = 11;
    t.forEach((r) => r.position = a - r.level);
  }
}, F = (t) => {
  function l(e) {
    e.selectAll("svg").remove();
    let o = e.data(), n = o[0];
    C.generate(n);
    let {
      viewWidth: c = 800,
      viewHeight: m = 200,
      widthResizable: v = !0,
      margin: s,
      onEventClick: w,
      showCursor: x = !0
    } = t;
    v && (c = e.node().clientWidth);
    let p = c - s.right - s.left, u = m - s.top - s.bottom, f = e.append("svg").datum(o).attr("width", p + s.right + s.left).attr("height", u + s.top + s.bottom), h = i.scaleTime().domain([
      i.min(n.map((d) => d.start)),
      i.max(n.map((d) => d.end))
    ]).range([0, p]), g = f.append("g").classed("graph", !0).attr("transform", `translate(${s.left},${s.top})`).append("g").classed("view", !0);
    f.call(b({
      timeScale: h,
      view: g,
      draw: r
    })), g.call(r(h, w, u, x));
  }
  function a(e) {
    a._init = () => l(e), a._init(), t.widthResizable && globalThis.addEventListener("resize", a._init, !0);
  }
  function r(e, o, n, c) {
    return (m) => {
      m.data(m.data()).call($({
        timeScale: e,
        onEventClick: o
      })).call(E({
        timeScale: e,
        height: n
      })).call(z({
        showCursor: c,
        timeScale: e,
        height: n
      }));
    };
  }
  return a;
}, B = (t, l) => {
  const a = t.__vccOpts || t;
  for (const [r, e] of l)
    a[r] = e;
  return a;
}, R = {
  props: {
    data: {
      type: Array
    },
    config: {
      type: Object,
      default: () => {
      }
    }
  },
  mounted() {
    var t;
    i.select("#timeline").datum(this.data).call(F({
      widthResizable: !0,
      viewHeight: 300,
      margin: {
        top: 0,
        bottom: 30,
        left: 15,
        right: 15
      },
      onEventClick: (t = this.config) == null ? void 0 : t.onEventClick
    }));
  }
}, S = { id: "timeline" };
function T(t, l, a, r, e, o) {
  return _(), y("div", S);
}
const D = /* @__PURE__ */ B(R, [["render", T]]), H = [D], I = (t, l) => {
  H.forEach((a) => {
    t.component(a.name, a);
  });
}, O = { install: I };
export {
  D as VueTimeline,
  O as default
};
