{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\n/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { METERS_PER_UNIT, getPointResolution } from '../proj.js';\n\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nvar DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nvar ScaleLine = /*#__PURE__*/function (_Control) {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  function ScaleLine(options) {\n    var _this;\n    _classCallCheck(this, ScaleLine);\n    options = options ? options : {};\n    var element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n    _this = _callSuper(this, ScaleLine, [{\n      element: element,\n      render: options.render,\n      target: options.target\n    }]);\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    _this.un;\n    var className = options.className !== undefined ? options.className : options.bar ? 'ol-scale-bar' : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    _this.innerElement_ = document.createElement('div');\n    _this.innerElement_.className = className + '-inner';\n    _this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    _this.element.appendChild(_this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    _this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.renderedHTML_ = '';\n    _this.addChangeListener(UNITS_PROP, _this.handleUnitsChanged_);\n    _this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.dpi_ = options.dpi || undefined;\n    return _this;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  _inherits(ScaleLine, _Control);\n  return _createClass(ScaleLine, [{\n    key: \"getUnits\",\n    value: function getUnits() {\n      return this.get(UNITS_PROP);\n    }\n\n    /**\n     * @private\n     */\n  }, {\n    key: \"handleUnitsChanged_\",\n    value: function handleUnitsChanged_() {\n      this.updateElement_();\n    }\n\n    /**\n     * Set the units to use in the scale line.\n     * @param {Units} units The units to use in the scale line.\n     * @observable\n     * @api\n     */\n  }, {\n    key: \"setUnits\",\n    value: function setUnits(units) {\n      this.set(UNITS_PROP, units);\n    }\n\n    /**\n     * Specify the dpi of output device such as printer.\n     * @param {number|undefined} dpi The dpi of output device.\n     * @api\n     */\n  }, {\n    key: \"setDpi\",\n    value: function setDpi(dpi) {\n      this.dpi_ = dpi;\n    }\n\n    /**\n     * @private\n     */\n  }, {\n    key: \"updateElement_\",\n    value: function updateElement_() {\n      var viewState = this.viewState_;\n      if (!viewState) {\n        if (this.renderedVisible_) {\n          this.element.style.display = 'none';\n          this.renderedVisible_ = false;\n        }\n        return;\n      }\n      var center = viewState.center;\n      var projection = viewState.projection;\n      var units = this.getUnits();\n      var pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n      var pointResolution = getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n      var minWidth = this.minWidth_ * (this.dpi_ || DEFAULT_DPI) / DEFAULT_DPI;\n      var maxWidth = this.maxWidth_ !== undefined ? this.maxWidth_ * (this.dpi_ || DEFAULT_DPI) / DEFAULT_DPI : undefined;\n      var nominalCount = minWidth * pointResolution;\n      var suffix = '';\n      if (units == 'degrees') {\n        var metersPerDegree = METERS_PER_UNIT.degrees;\n        nominalCount *= metersPerDegree;\n        if (nominalCount < metersPerDegree / 60) {\n          suffix = \"\\u2033\"; // seconds\n          pointResolution *= 3600;\n        } else if (nominalCount < metersPerDegree) {\n          suffix = \"\\u2032\"; // minutes\n          pointResolution *= 60;\n        } else {\n          suffix = \"\\xB0\"; // degrees\n        }\n      } else if (units == 'imperial') {\n        if (nominalCount < 0.9144) {\n          suffix = 'in';\n          pointResolution /= 0.0254;\n        } else if (nominalCount < 1609.344) {\n          suffix = 'ft';\n          pointResolution /= 0.3048;\n        } else {\n          suffix = 'mi';\n          pointResolution /= 1609.344;\n        }\n      } else if (units == 'nautical') {\n        pointResolution /= 1852;\n        suffix = 'NM';\n      } else if (units == 'metric') {\n        if (nominalCount < 0.001) {\n          suffix = 'Î¼m';\n          pointResolution *= 1000000;\n        } else if (nominalCount < 1) {\n          suffix = 'mm';\n          pointResolution *= 1000;\n        } else if (nominalCount < 1000) {\n          suffix = 'm';\n        } else {\n          suffix = 'km';\n          pointResolution /= 1000;\n        }\n      } else if (units == 'us') {\n        if (nominalCount < 0.9144) {\n          suffix = 'in';\n          pointResolution *= 39.37;\n        } else if (nominalCount < 1609.344) {\n          suffix = 'ft';\n          pointResolution /= 0.30480061;\n        } else {\n          suffix = 'mi';\n          pointResolution /= 1609.3472;\n        }\n      } else {\n        throw new Error('Invalid units');\n      }\n      var i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n      var count, width, decimalCount;\n      var previousCount, previousWidth, previousDecimalCount;\n      while (true) {\n        decimalCount = Math.floor(i / 3);\n        var decimal = Math.pow(10, decimalCount);\n        count = LEADING_DIGITS[(i % 3 + 3) % 3] * decimal;\n        width = Math.round(count / pointResolution);\n        if (isNaN(width)) {\n          this.element.style.display = 'none';\n          this.renderedVisible_ = false;\n          return;\n        }\n        if (maxWidth !== undefined && width >= maxWidth) {\n          count = previousCount;\n          width = previousWidth;\n          decimalCount = previousDecimalCount;\n          break;\n        } else if (width >= minWidth) {\n          break;\n        }\n        previousCount = count;\n        previousWidth = width;\n        previousDecimalCount = decimalCount;\n        ++i;\n      }\n      var html = this.scaleBar_ ? this.createScaleBar(width, count, suffix) : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n      if (this.renderedHTML_ != html) {\n        this.innerElement_.innerHTML = html;\n        this.renderedHTML_ = html;\n      }\n      if (this.renderedWidth_ != width) {\n        this.innerElement_.style.width = width + 'px';\n        this.renderedWidth_ = width;\n      }\n      if (!this.renderedVisible_) {\n        this.element.style.display = '';\n        this.renderedVisible_ = true;\n      }\n    }\n\n    /**\n     * @private\n     * @param {number} width The current width of the scalebar.\n     * @param {number} scale The current scale.\n     * @param {string} suffix The suffix to append to the scale text.\n     * @return {string} The stringified HTML of the scalebar.\n     */\n  }, {\n    key: \"createScaleBar\",\n    value: function createScaleBar(width, scale, suffix) {\n      var resolutionScale = this.getScaleForResolution();\n      var mapScale = resolutionScale < 1 ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1' : '1 : ' + Math.round(resolutionScale).toLocaleString();\n      var steps = this.scaleBarSteps_;\n      var stepWidth = width / steps;\n      var scaleSteps = [this.createMarker('absolute')];\n      for (var i = 0; i < steps; ++i) {\n        var cls = i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n        scaleSteps.push('<div>' + '<div ' + \"class=\\\"ol-scale-singlebar \".concat(cls, \"\\\" \") + \"style=\\\"width: \".concat(stepWidth, \"px;\\\"\") + '>' + '</div>' + this.createMarker('relative') + (\n        // render text every second step, except when only 2 steps\n        i % 2 === 0 || steps === 2 ? this.createStepText(i, width, false, scale, suffix) : '') + '</div>');\n      }\n      // render text at the end\n      scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n      var scaleBarText = this.scaleBarText_ ? \"<div class=\\\"ol-scale-text\\\" style=\\\"width: \".concat(width, \"px;\\\">\") + mapScale + '</div>' : '';\n      return scaleBarText + scaleSteps.join('');\n    }\n\n    /**\n     * Creates a marker at given position\n     * @param {'absolute'|'relative'} position The position, absolute or relative\n     * @return {string} The stringified div containing the marker\n     */\n  }, {\n    key: \"createMarker\",\n    value: function createMarker(position) {\n      var top = position === 'absolute' ? 3 : -10;\n      return '<div ' + 'class=\"ol-scale-step-marker\" ' + \"style=\\\"position: \".concat(position, \"; top: \").concat(top, \"px;\\\"\") + '></div>';\n    }\n\n    /**\n     * Creates the label for a marker marker at given position\n     * @param {number} i The iterator\n     * @param {number} width The width the scalebar will currently use\n     * @param {boolean} isLast Flag indicating if we add the last step text\n     * @param {number} scale The current scale for the whole scalebar\n     * @param {string} suffix The suffix for the scale\n     * @return {string} The stringified div containing the step text\n     */\n  }, {\n    key: \"createStepText\",\n    value: function createStepText(i, width, isLast, scale, suffix) {\n      var length = i === 0 ? 0 : Math.round(scale / this.scaleBarSteps_ * i * 100) / 100;\n      var lengthString = length + (i === 0 ? '' : ' ' + suffix);\n      var margin = i === 0 ? -3 : width / this.scaleBarSteps_ * -1;\n      var minWidth = i === 0 ? 0 : width / this.scaleBarSteps_ * 2;\n      return '<div ' + 'class=\"ol-scale-step-text\" ' + 'style=\"' + \"margin-left: \".concat(margin, \"px;\") + \"text-align: \".concat(i === 0 ? 'left' : 'center', \";\") + \"min-width: \".concat(minWidth, \"px;\") + \"left: \".concat(isLast ? width + 'px' : 'unset', \";\") + '\">' + lengthString + '</div>';\n    }\n\n    /**\n     * Returns the appropriate scale for the given resolution and units.\n     * @return {number} The appropriate scale.\n     */\n  }, {\n    key: \"getScaleForResolution\",\n    value: function getScaleForResolution() {\n      var resolution = getPointResolution(this.viewState_.projection, this.viewState_.resolution, this.viewState_.center, 'm');\n      var dpi = this.dpi_ || DEFAULT_DPI;\n      var inchesPerMeter = 1000 / 25.4;\n      return resolution * inchesPerMeter * dpi;\n    }\n\n    /**\n     * Update the scale line element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n  }, {\n    key: \"render\",\n    value: function render(mapEvent) {\n      var frameState = mapEvent.frameState;\n      if (!frameState) {\n        this.viewState_ = null;\n      } else {\n        this.viewState_ = frameState.viewState;\n      }\n      this.updateElement_();\n    }\n  }]);\n}(Control);\nexport default ScaleLine;","map":{"version":3,"names":["Control","CLASS_UNSELECTABLE","METERS_PER_UNIT","getPointResolution","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","ScaleLine","_Control","options","_this","_classCallCheck","element","document","createElement","style","pointerEvents","_callSuper","render","target","on","once","un","className","undefined","bar","innerElement_","appendChild","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedVisible_","renderedWidth_","renderedHTML_","addChangeListener","handleUnitsChanged_","setUnits","units","scaleBar_","scaleBarSteps_","steps","scaleBarText_","text","dpi_","dpi","_inherits","_createClass","key","value","getUnits","get","updateElement_","set","setDpi","viewState","display","center","projection","pointResolutionUnits","pointResolution","resolution","nominalCount","suffix","metersPerDegree","degrees","Error","i","Math","floor","log","count","width","decimalCount","previousCount","previousWidth","previousDecimalCount","decimal","pow","round","isNaN","html","createScaleBar","toFixed","innerHTML","scale","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","push","concat","createStepText","scaleBarText","join","position","top","isLast","length","lengthString","margin","inchesPerMeter","mapEvent","frameState"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/control/ScaleLine.js"],"sourcesContent":["/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = 'Î¼m';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      throw new Error('Invalid units');\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}