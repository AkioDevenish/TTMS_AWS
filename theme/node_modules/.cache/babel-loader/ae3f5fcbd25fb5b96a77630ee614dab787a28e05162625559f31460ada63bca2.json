{"ast":null,"code":"import _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\n/**\n * @module ol/events/SnapEvent\n */\nimport Event from './Event.js';\n\n/**\n * @enum {string}\n */\nexport var SnapEventType = {\n  /**\n   * Triggered upon snapping to vertex or edge\n   * @event SnapEvent#snap\n   * @api\n   */\n  SNAP: 'snap'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Snap~Snap} instances are instances of this\n */\nexport var SnapEvent = /*#__PURE__*/function (_Event) {\n  /**\n   * @param {SnapEventType} type Type.\n   * @param {Object} options Options.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertex The snapped vertex.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertexPixel The pixel of the snapped vertex.\n   * @param {import(\"../Feature.js\").default} options.feature The feature being snapped.\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|null} options.segment Segment, or `null` if snapped to a vertex.\n   */\n  function SnapEvent(type, options) {\n    var _this;\n    _classCallCheck(this, SnapEvent);\n    _this = _callSuper(this, SnapEvent, [type]);\n    /**\n     * The Map coordinate of the snapped point.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    _this.vertex = options.vertex;\n    /**\n     * The Map pixel of the snapped point.\n     * @type {Array<number>&Array<number>}\n     * @api\n     */\n    _this.vertexPixel = options.vertexPixel;\n    /**\n     * The feature closest to the snapped point.\n     * @type {import(\"../Feature.js\").default<import(\"../geom/Geometry.js\").default>}\n     * @api\n     */\n    _this.feature = options.feature;\n    /**\n     * The segment closest to the snapped point, if snapped to a segment.\n     * @type {Array<import(\"../coordinate.js\").Coordinate>|null}\n     * @api\n     */\n    _this.segment = options.segment;\n    return _this;\n  }\n  _inherits(SnapEvent, _Event);\n  return _createClass(SnapEvent);\n}(Event);","map":{"version":3,"names":["Event","SnapEventType","SNAP","SnapEvent","_Event","type","options","_this","_classCallCheck","_callSuper","vertex","vertexPixel","feature","segment","_inherits","_createClass"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/events/SnapEvent.js"],"sourcesContent":["/**\n * @module ol/events/SnapEvent\n */\nimport Event from './Event.js';\n\n/**\n * @enum {string}\n */\nexport const SnapEventType = {\n  /**\n   * Triggered upon snapping to vertex or edge\n   * @event SnapEvent#snap\n   * @api\n   */\n  SNAP: 'snap',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Snap~Snap} instances are instances of this\n */\nexport class SnapEvent extends Event {\n  /**\n   * @param {SnapEventType} type Type.\n   * @param {Object} options Options.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertex The snapped vertex.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertexPixel The pixel of the snapped vertex.\n   * @param {import(\"../Feature.js\").default} options.feature The feature being snapped.\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|null} options.segment Segment, or `null` if snapped to a vertex.\n   */\n  constructor(type, options) {\n    super(type);\n    /**\n     * The Map coordinate of the snapped point.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.vertex = options.vertex;\n    /**\n     * The Map pixel of the snapped point.\n     * @type {Array<number>&Array<number>}\n     * @api\n     */\n    this.vertexPixel = options.vertexPixel;\n    /**\n     * The feature closest to the snapped point.\n     * @type {import(\"../Feature.js\").default<import(\"../geom/Geometry.js\").default>}\n     * @api\n     */\n    this.feature = options.feature;\n    /**\n     * The segment closest to the snapped point, if snapped to a segment.\n     * @type {Array<import(\"../coordinate.js\").Coordinate>|null}\n     * @api\n     */\n    this.segment = options.segment;\n  }\n}\n"],"mappings":";;;;AAAA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,YAAY;;AAE9B;AACA;AACA;AACA,OAAO,IAAMC,aAAa,GAAG;EAC3B;AACF;AACA;AACA;AACA;EACEC,IAAI,EAAE;AACR,CAAC;;AAED;AACA;AACA;AACA;AACA,WAAaC,SAAS,0BAAAC,MAAA;EACpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAAD,UAAYE,IAAI,EAAEC,OAAO,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAL,SAAA;IACzBI,KAAA,GAAAE,UAAA,OAAAN,SAAA,GAAME,IAAI;IACV;AACJ;AACA;AACA;AACA;IACIE,KAAA,CAAKG,MAAM,GAAGJ,OAAO,CAACI,MAAM;IAC5B;AACJ;AACA;AACA;AACA;IACIH,KAAA,CAAKI,WAAW,GAAGL,OAAO,CAACK,WAAW;IACtC;AACJ;AACA;AACA;AACA;IACIJ,KAAA,CAAKK,OAAO,GAAGN,OAAO,CAACM,OAAO;IAC9B;AACJ;AACA;AACA;AACA;IACIL,KAAA,CAAKM,OAAO,GAAGP,OAAO,CAACO,OAAO;IAAC,OAAAN,KAAA;EACjC;EAACO,SAAA,CAAAX,SAAA,EAAAC,MAAA;EAAA,OAAAW,YAAA,CAAAZ,SAAA;AAAA,EAnC4BH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}