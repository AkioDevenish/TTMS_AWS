{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n/**\n * @module ol/format/WFS\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport { XML_SCHEMA_INSTANCE_URI, createElementNS, isDocument, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode, pushParseAndPop, pushSerializeAndPop } from '../xml.js';\nimport { and as andFilterFn, bbox as bboxFilterFn } from './filter.js';\nimport { assert } from '../asserts.js';\nimport { get as getProjection } from '../proj.js';\nimport { readNonNegativeIntegerString, readPositiveInteger, writeStringTextNode } from './xsd.js';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(GMLBase.prototype.readExtentElement, 'bounds')\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger)\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(readTransactionSummary, 'transactionSummary'),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds')\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(readTransactionSummary, 'transactionSummary'),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds')\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode)\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative)\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative)\n  }\n};\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * e.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\nvar FEATURE_PREFIX = 'feature';\n\n/**\n * @type {string}\n */\nvar XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * @type {Object<string, string>}\n */\nvar OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc'\n};\n\n/**\n * @type {Object<string, string>}\n */\nvar WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs'\n};\n\n/**\n * @type {Object<string, string>}\n */\nvar FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes'\n};\n\n/**\n * @type {Object<string, string>}\n */\nvar SCHEMA_LOCATIONS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n/**\n * @type {Object<string, object>}\n */\nvar GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2\n};\n\n/**\n * @const\n * @type {string}\n */\nvar DEFAULT_VERSION = '1.1.0';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nvar WFS = /*#__PURE__*/function (_XMLFeature) {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  function WFS(options) {\n    var _this;\n    _classCallCheck(this, WFS);\n    _this = _callSuper(this, WFS);\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.version_ = options.version ? options.version : DEFAULT_VERSION;\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    _this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    _this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    _this.gmlFormat_ = options.gmlFormat ? options.gmlFormat : new GML_FORMATS[_this.version_]();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.schemaLocation_ = options.schemaLocation ? options.schemaLocation : SCHEMA_LOCATIONS[_this.version_];\n    return _this;\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  _inherits(WFS, _XMLFeature);\n  return _createClass(WFS, [{\n    key: \"getFeatureType\",\n    value: function getFeatureType() {\n      return this.featureType_;\n    }\n\n    /**\n     * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n     */\n  }, {\n    key: \"setFeatureType\",\n    value: function setFeatureType(featureType) {\n      this.featureType_ = featureType;\n    }\n\n    /**\n     * @protected\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n  }, {\n    key: \"readFeaturesFromNode\",\n    value: function readFeaturesFromNode(node, options) {\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      var context = {\n        node: node\n      };\n      Object.assign(context, {\n        'featureType': this.featureType_,\n        'featureNS': this.featureNS_\n      });\n      Object.assign(context, this.getReadOptions(node, options ? options : {}));\n      var objectStack = [context];\n      var featuresNS;\n      if (this.version_ === '2.0.0') {\n        featuresNS = FEATURE_COLLECTION_PARSERS;\n      } else {\n        featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n      }\n      var features = pushParseAndPop([], featuresNS, node, objectStack, this.gmlFormat_);\n      if (!features) {\n        features = [];\n      }\n      return features;\n    }\n\n    /**\n     * Read transaction response of the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {TransactionResponse|undefined} Transaction response.\n     * @api\n     */\n  }, {\n    key: \"readTransactionResponse\",\n    value: function readTransactionResponse(source) {\n      if (!source) {\n        return undefined;\n      }\n      if (typeof source === 'string') {\n        var doc = parse(source);\n        return this.readTransactionResponseFromDocument(doc);\n      }\n      if (isDocument(source)) {\n        return this.readTransactionResponseFromDocument(/** @type {Document} */source);\n      }\n      return this.readTransactionResponseFromNode(/** @type {Element} */source);\n    }\n\n    /**\n     * Read feature collection metadata of the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     * @api\n     */\n  }, {\n    key: \"readFeatureCollectionMetadata\",\n    value: function readFeatureCollectionMetadata(source) {\n      if (!source) {\n        return undefined;\n      }\n      if (typeof source === 'string') {\n        var doc = parse(source);\n        return this.readFeatureCollectionMetadataFromDocument(doc);\n      }\n      if (isDocument(source)) {\n        return this.readFeatureCollectionMetadataFromDocument(/** @type {Document} */source);\n      }\n      return this.readFeatureCollectionMetadataFromNode(/** @type {Element} */source);\n    }\n\n    /**\n     * @param {Document} doc Document.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     */\n  }, {\n    key: \"readFeatureCollectionMetadataFromDocument\",\n    value: function readFeatureCollectionMetadataFromDocument(doc) {\n      for (var n = /** @type {Node} */doc.firstChild; n; n = n.nextSibling) {\n        if (n.nodeType == Node.ELEMENT_NODE) {\n          return this.readFeatureCollectionMetadataFromNode(/** @type {Element} */n);\n        }\n      }\n      return undefined;\n    }\n\n    /**\n     * @param {Element} node Node.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     */\n  }, {\n    key: \"readFeatureCollectionMetadataFromNode\",\n    value: function readFeatureCollectionMetadataFromNode(node) {\n      var result = {};\n      var value = readNonNegativeIntegerString(node.getAttribute('numberOfFeatures'));\n      result['numberOfFeatures'] = value;\n      return pushParseAndPop(/** @type {FeatureCollectionMetadata} */result, FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\n    }\n\n    /**\n     * @param {Document} doc Document.\n     * @return {TransactionResponse|undefined} Transaction response.\n     */\n  }, {\n    key: \"readTransactionResponseFromDocument\",\n    value: function readTransactionResponseFromDocument(doc) {\n      for (var n = /** @type {Node} */doc.firstChild; n; n = n.nextSibling) {\n        if (n.nodeType == Node.ELEMENT_NODE) {\n          return this.readTransactionResponseFromNode(/** @type {Element} */n);\n        }\n      }\n      return undefined;\n    }\n\n    /**\n     * @param {Element} node Node.\n     * @return {TransactionResponse|undefined} Transaction response.\n     */\n  }, {\n    key: \"readTransactionResponseFromNode\",\n    value: function readTransactionResponseFromNode(node) {\n      return pushParseAndPop(/** @type {TransactionResponse} */{}, TRANSACTION_RESPONSE_PARSERS, node, []);\n    }\n\n    /**\n     * Encode format as WFS `GetFeature` and return the Node.\n     *\n     * @param {WriteGetFeatureOptions} options Options.\n     * @return {Node} Result.\n     * @api\n     */\n  }, {\n    key: \"writeGetFeature\",\n    value: function writeGetFeature(options) {\n      var _this2 = this;\n      var node = createElementNS(WFSNS[this.version_], 'GetFeature');\n      node.setAttribute('service', 'WFS');\n      node.setAttribute('version', this.version_);\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n      if (options.outputFormat) {\n        node.setAttribute('outputFormat', options.outputFormat);\n      }\n      if (options.maxFeatures !== undefined) {\n        node.setAttribute('maxFeatures', String(options.maxFeatures));\n      }\n      if (options.resultType) {\n        node.setAttribute('resultType', options.resultType);\n      }\n      if (options.startIndex !== undefined) {\n        node.setAttribute('startIndex', String(options.startIndex));\n      }\n      if (options.count !== undefined) {\n        node.setAttribute('count', String(options.count));\n      }\n      if (options.viewParams !== undefined) {\n        node.setAttribute('viewParams', options.viewParams);\n      }\n      node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      var context = {\n        node: node\n      };\n      Object.assign(context, {\n        'version': this.version_,\n        'srsName': options.srsName,\n        'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n        'featurePrefix': options.featurePrefix,\n        'propertyNames': options.propertyNames ? options.propertyNames : []\n      });\n      assert(Array.isArray(options.featureTypes), '`options.featureTypes` must be an Array');\n      if (typeof options.featureTypes[0] === 'string') {\n        var filter = options.filter;\n        if (options.bbox) {\n          assert(options.geometryName, '`options.geometryName` must also be provided when `options.bbox` is set');\n          filter = this.combineBboxAndFilter(options.geometryName, options.bbox, options.srsName, filter);\n        }\n        Object.assign(context, {\n          'geometryName': options.geometryName,\n          'filter': filter\n        });\n        _writeGetFeature(node, /** @type {!Array<string>} */options.featureTypes, [context]);\n      } else {\n        // Write one query node per element in featuresType.\n        options.featureTypes.forEach(function (/** @type {FeatureType} */featureType) {\n          var completeFilter = _this2.combineBboxAndFilter(featureType.geometryName, featureType.bbox, options.srsName, options.filter);\n          Object.assign(context, {\n            'geometryName': featureType.geometryName,\n            'filter': completeFilter\n          });\n          _writeGetFeature(node, [featureType.name], [context]);\n        });\n      }\n      return node;\n    }\n\n    /**\n     * Create a bbox filter and combine it with another optional filter.\n     *\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../extent.js\").Extent} extent Extent.\n     * @param {string} [srsName] SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     * @param {import(\"./filter/Filter.js\").default} [filter] Filter condition.\n     * @return {import(\"./filter/Filter.js\").default} The filter.\n     */\n  }, {\n    key: \"combineBboxAndFilter\",\n    value: function combineBboxAndFilter(geometryName, extent, srsName, filter) {\n      var bboxFilter = bboxFilterFn(geometryName, extent, srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        return andFilterFn(filter, bboxFilter);\n      }\n      return bboxFilter;\n    }\n\n    /**\n     * Encode format as WFS `Transaction` and return the Node.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n     * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n     * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n     * @param {WriteTransactionOptions} options Write options.\n     * @return {Node} Result.\n     * @api\n     */\n  }, {\n    key: \"writeTransaction\",\n    value: function writeTransaction(inserts, updates, deletes, options) {\n      var objectStack = [];\n      var version = options.version ? options.version : this.version_;\n      var node = createElementNS(WFSNS[version], 'Transaction');\n      node.setAttribute('service', 'WFS');\n      node.setAttribute('version', version);\n      var baseObj;\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      if (options) {\n        baseObj = options.gmlOptions ? options.gmlOptions : {};\n        if (options.handle) {\n          node.setAttribute('handle', options.handle);\n        }\n      }\n      node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATIONS[version]);\n      var request = createTransactionRequest(node, baseObj, version, options);\n      if (inserts) {\n        serializeTransactionRequest('Insert', inserts, objectStack, request);\n      }\n      if (updates) {\n        serializeTransactionRequest('Update', updates, objectStack, request);\n      }\n      if (deletes) {\n        serializeTransactionRequest('Delete', deletes, objectStack, request);\n      }\n      if (options.nativeElements) {\n        serializeTransactionRequest('Native', options.nativeElements, objectStack, request);\n      }\n      return node;\n    }\n\n    /**\n     * @param {Document} doc Document.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n  }, {\n    key: \"readProjectionFromDocument\",\n    value: function readProjectionFromDocument(doc) {\n      for (var n = doc.firstChild; n; n = n.nextSibling) {\n        if (n.nodeType == Node.ELEMENT_NODE) {\n          return this.readProjectionFromNode(/** @type {Element} */n);\n        }\n      }\n      return null;\n    }\n\n    /**\n     * @param {Element} node Node.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n  }, {\n    key: \"readProjectionFromNode\",\n    value: function readProjectionFromNode(node) {\n      if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n        node = node.firstElementChild.firstElementChild;\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n          if (!(n.childNodes.length === 0 || n.childNodes.length === 1 && n.firstChild.nodeType === 3)) {\n            var objectStack = [{}];\n            this.gmlFormat_.readGeometryElement(n, objectStack);\n            return getProjection(objectStack.pop().srsName);\n          }\n        }\n      }\n      return null;\n    }\n  }]);\n}(XMLFeature);\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n  var featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\n  var gmlVersion;\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n  var obj = Object.assign({\n    node: node\n  }, {\n    version: version,\n    'featureNS': options.featureNS,\n    'featureType': options.featureType,\n    'featurePrefix': featurePrefix,\n    'gmlVersion': gmlVersion,\n    'hasZ': options.hasZ,\n    'srsName': options.srsName\n  }, baseObj);\n  return obj;\n}\n\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(request, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory(type), features, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser\n  }\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var featureType = context['featureType'];\n  var featureNS = context['featureNS'];\n  var gmlVersion = context['gmlVersion'];\n  var child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var version = context['version'];\n  var ns = OGCNS[version];\n  var filter = createElementNS(ns, 'Filter');\n  var child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */fid);\n  node.appendChild(filter);\n}\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  var prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.startsWith(prefix)) {\n    return featureType;\n  }\n  return prefix + featureType;\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  var version = context['version'];\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = getTypeName(featurePrefix, featureType);\n  var geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    var keys = feature.getKeys();\n    var values = [];\n    for (var i = 0, ii = keys.length; i < ii; i++) {\n      var value = feature.get(keys[i]);\n      if (value !== undefined) {\n        var name = keys[i];\n        if (value && typeof (/** @type {?} */value.getSimplifiedGeometry) === 'function') {\n          name = geometryName;\n        }\n        values.push({\n          name: name,\n          value: value\n        });\n      }\n    }\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */{\n      version: version,\n      'gmlVersion': context['gmlVersion'],\n      node: node,\n      'hasZ': context['hasZ'],\n      'srsName': context['srsName']\n    }, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Property'), values, objectStack);\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var version = context['version'];\n  var ns = WFSNS[version];\n  var tagName = version === '2.0.0' ? 'ValueReference' : 'Name';\n  var name = createElementNS(ns, tagName);\n  var gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    var value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n    if (pair.value && typeof (/** @type {?} */pair.value.getSimplifiedGeometry) === 'function') {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery)\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n  }\n};\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  var context = /** @type {Object} */objectStack[objectStack.length - 1];\n  var version = context['version'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var propertyNames = context['propertyNames'];\n  var srsName = context['srsName'];\n  var typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  var typeNameAttr;\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n  node.setAttribute(typeNameAttr, typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  var item = /** @type {import(\"../xml.js\").NodeStackItem} */\n  Object.assign({}, context);\n  item.node = node;\n  pushSerializeAndPop(item, QUERY_SERIALIZERS, makeSimpleNodeFactory('PropertyName'), propertyNames, objectStack);\n  var filter = context['filter'];\n  if (filter) {\n    var child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  var context = /** @type {Object} */objectStack[objectStack.length - 1];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var item = {\n    node: node\n  };\n  Object.assign(item, {\n    context: context\n  });\n  pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(filter.getTagName()), [filter], objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  var parent = /** @type {Object} */objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  parent['srsName'] = filter.srsName;\n  var format = GML_FORMATS[version];\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', /** @type {string} */filter.rid);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n  var parent = /** @type {Object} */objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  parent['srsName'] = filter.srsName;\n  var format = GML_FORMATS[version];\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n  var parent = /** @type {Object} */objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  var distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n  node.appendChild(distance);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n  var parent = /** @type {Object} */objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  var timePeriod = createElementNS(GMLNS, 'TimePeriod');\n  node.appendChild(timePeriod);\n  var begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n  var end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  var parent = /** @type {Object} */objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var item = {\n    node: node\n  };\n  Object.assign(item, {\n    context: context\n  });\n  var conditions = filter.conditions;\n  for (var i = 0, ii = conditions.length; i < ii; ++i) {\n    var condition = conditions[i];\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  var parent = /** @type {Object} */objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var item = {\n    node: node\n  };\n  Object.assign(item, {\n    context: context\n  });\n  var condition = filter.condition;\n  pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  var parent = /** @type {Object} */objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  var parent = /** @type {Object} */objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  var parent = /** @type {Object} */objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  var ns = getFilterNS(version);\n  writePropertyName(version, node, filter.propertyName);\n  var lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n  var upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  var parent = /** @type {Object} */objectStack[objectStack.length - 1];\n  var context = parent['context'];\n  var version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n  var property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  var timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n  var timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, version) {\n  version = version || '1.1.0';\n  var child = createElementNS(getFilterNS(version), 'Filter');\n  var context = {\n    node: child\n  };\n  Object.assign(context, {\n    'version': version,\n    'filter': filter\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction _writeGetFeature(node, featureTypes, objectStack) {\n  var context = /** @type {Object} */objectStack[objectStack.length - 1];\n  var item = /** @type {import(\"../xml.js\").NodeStackItem} */\n  Object.assign({}, context);\n  item.node = node;\n  pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory('Query'), featureTypes, objectStack);\n}\nfunction getFilterNS(version) {\n  var ns;\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n  return ns;\n}\nexport default WFS;","map":{"version":3,"names":["GML2","GML3","GML32","GMLBase","GMLNS","XMLFeature","XML_SCHEMA_INSTANCE_URI","createElementNS","isDocument","makeArrayPusher","makeChildAppender","makeObjectPropertySetter","makeSimpleNodeFactory","parse","parseNode","pushParseAndPop","pushSerializeAndPop","and","andFilterFn","bbox","bboxFilterFn","assert","get","getProjection","readNonNegativeIntegerString","readPositiveInteger","writeStringTextNode","FEATURE_COLLECTION_PARSERS","prototype","readExtentElement","readFeaturesInternal","TRANSACTION_SUMMARY_PARSERS","TRANSACTION_RESPONSE_PARSERS","readTransactionSummary","readInsertResults","QUERY_SERIALIZERS","TRANSACTION_SERIALIZERS","writeFeature","writeUpdate","writeDelete","writeProperty","writeNative","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","SCHEMA_LOCATIONS","GML_FORMATS","DEFAULT_VERSION","WFS","_XMLFeature","options","_this","_classCallCheck","_callSuper","version_","version","featureType_","featureType","featureNS_","featureNS","gmlFormat_","gmlFormat","schemaLocation_","schemaLocation","_inherits","_createClass","key","value","getFeatureType","setFeatureType","readFeaturesFromNode","node","context","Object","assign","getReadOptions","objectStack","featuresNS","features","readTransactionResponse","source","undefined","doc","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","n","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","result","getAttribute","writeGetFeature","_this2","setAttribute","handle","outputFormat","maxFeatures","String","resultType","startIndex","count","viewParams","setAttributeNS","srsName","featurePrefix","propertyNames","Array","isArray","featureTypes","filter","geometryName","combineBboxAndFilter","forEach","completeFilter","name","extent","bboxFilter","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","request","createTransactionRequest","serializeTransactionRequest","nativeElements","readProjectionFromDocument","readProjectionFromNode","firstElementChild","nextElementSibling","childNodes","length","readGeometryElement","pop","gmlVersion","obj","hasZ","type","OGC_FID_PARSERS","fidParser","INSERT_RESULTS_PARSERS","feature","child","appendChild","writeFeatureElement","writeOgcFidFilter","fid","ns","getTypeName","prefix","startsWith","getId","typeName","getGeometryName","keys","getKeys","values","i","ii","getSimplifiedGeometry","push","pair","tagName","writeGeometryElement","nativeElement","vendorId","safeToIgnore","GETFEATURE_SERIALIZERS","writeQuery","writeDuringFilter","writeLogicalFilter","writeNotFilter","writeBboxFilter","writeSpatialFilter","writeDWithinFilter","writeComparisonFilter","writeIsNullFilter","writeIsBetweenFilter","writeIsLikeFilter","writeResourceIdFilter","typeNameAttr","item","getFilterNS","writeFilterCondition","getTagName","parent","format","writePropertyName","rid","geometry","distance","toString","unit","writeExpression","propertyName","timePeriod","begin","writeTimeInstant","end","conditions","condition","matchCase","writeLiteral","expression","lowerBoundary","upperBoundary","wildCard","singleChar","escapeChar","pattern","property","time","timeInstant","timePosition","writeFilter"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/format/WFS.js"],"sourcesContent":["/**\n * @module ol/format/WFS\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSimpleNodeFactory,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {and as andFilterFn, bbox as bboxFilterFn} from './filter.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readExtentElement,\n      'bounds'\n    ),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * e.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * @type {Object<string, string>}\n */\nconst OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '2.0.0':\n    'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd',\n};\n\n/**\n * @type {Object<string, object>}\n */\nconst GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2,\n};\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version ? options.version : DEFAULT_VERSION;\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat\n      ? options.gmlFormat\n      : new GML_FORMATS[this.version_]();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation\n      ? options.schemaLocation\n      : SCHEMA_LOCATIONS[this.version_];\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_,\n    });\n\n    Object.assign(context, this.getReadOptions(node, options ? options : {}));\n    const objectStack = [context];\n    let featuresNS;\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n    let features = pushParseAndPop(\n      [],\n      featuresNS,\n      node,\n      objectStack,\n      this.gmlFormat_\n    );\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source)\n      );\n    }\n    return this.readTransactionResponseFromNode(\n      /** @type {Element} */ (source)\n    );\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source)\n      );\n    }\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Element} */ (source)\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(\n          /** @type {Element} */ (n)\n        );\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures')\n    );\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS,\n      node,\n      [],\n      this.gmlFormat_\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */ ({}),\n      TRANSACTION_RESPONSE_PARSERS,\n      node,\n      []\n    );\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation_\n    );\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : [],\n    });\n    assert(\n      Array.isArray(options.featureTypes),\n      '`options.featureTypes` must be an Array'\n    );\n    if (typeof options.featureTypes[0] === 'string') {\n      let filter = options.filter;\n      if (options.bbox) {\n        assert(\n          options.geometryName,\n          '`options.geometryName` must also be provided when `options.bbox` is set'\n        );\n        filter = this.combineBboxAndFilter(\n          options.geometryName,\n          options.bbox,\n          options.srsName,\n          filter\n        );\n      }\n      Object.assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter,\n      });\n      writeGetFeature(\n        node,\n        /** @type {!Array<string>} */ (options.featureTypes),\n        [context]\n      );\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach((/** @type {FeatureType} */ featureType) => {\n        const completeFilter = this.combineBboxAndFilter(\n          featureType.geometryName,\n          featureType.bbox,\n          options.srsName,\n          options.filter\n        );\n        Object.assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter,\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n    return node;\n  }\n\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n  combineBboxAndFilter(geometryName, extent, srsName, filter) {\n    const bboxFilter = bboxFilterFn(geometryName, extent, srsName);\n    if (filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(filter, bboxFilter);\n    }\n    return bboxFilter;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const version = options.version ? options.version : this.version_;\n    const node = createElementNS(WFSNS[version], 'Transaction');\n\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATIONS[version]\n    );\n\n    const request = createTransactionRequest(node, baseObj, version, options);\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n    if (options.nativeElements) {\n      serializeTransactionRequest(\n        'Native',\n        options.nativeElements,\n        objectStack,\n        request\n      );\n    }\n    return node;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (\n          !(\n            n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 && n.firstChild.nodeType === 3)\n          )\n        ) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n  const featurePrefix = options.featurePrefix\n    ? options.featurePrefix\n    : FEATURE_PREFIX;\n  let gmlVersion;\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n  const obj = Object.assign(\n    {node},\n    {\n      version,\n      'featureNS': options.featureNS,\n      'featureType': options.featureType,\n      'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion,\n      'hasZ': options.hasZ,\n      'srsName': options.srsName,\n    },\n    baseObj\n  );\n  return obj;\n}\n\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(\n    request,\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory(type),\n    features,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser,\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser,\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = OGCNS[version];\n  const filter = createElementNS(ns, 'Filter');\n  const child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.startsWith(prefix)) {\n    return featureType;\n  }\n  return prefix + featureType;\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const version = context['version'];\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (\n          value &&\n          typeof (/** @type {?} */ (value).getSimplifiedGeometry) === 'function'\n        ) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */ ({\n        version,\n        'gmlVersion': context['gmlVersion'],\n        node,\n        'hasZ': context['hasZ'],\n        'srsName': context['srsName'],\n      }),\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Property'),\n      values,\n      objectStack\n    );\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = WFSNS[version];\n  const tagName = version === '2.0.0' ? 'ValueReference' : 'Name';\n  const name = createElementNS(ns, tagName);\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n    if (\n      pair.value &&\n      typeof (/** @type {?} */ (pair.value).getSimplifiedGeometry) ===\n        'function'\n    ) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const version = context['version'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  let typeNameAttr;\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n  node.setAttribute(typeNameAttr, typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'),\n    propertyNames,\n    objectStack\n  );\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter],\n    objectStack\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', /** @type {string} */ (filter.rid));\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  const distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n  node.appendChild(distance);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(\n      item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition],\n      objectStack\n    );\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const condition = filter.condition;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition],\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  const ns = getFilterNS(version);\n\n  writePropertyName(version, node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n  const property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, version) {\n  version = version || '1.1.0';\n  const child = createElementNS(getFilterNS(version), 'Filter');\n  const context = {\n    node: child,\n  };\n  Object.assign(context, {\n    'version': version,\n    'filter': filter,\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'),\n    featureTypes,\n    objectStack\n  );\n}\n\nfunction getFilterNS(version) {\n  let ns;\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n  return ns;\n}\n\nexport default WFS;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}