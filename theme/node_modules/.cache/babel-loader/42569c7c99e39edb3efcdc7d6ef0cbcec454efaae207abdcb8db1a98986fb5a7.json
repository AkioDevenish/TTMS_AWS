{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.string.includes.js\";\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*#__PURE__*/function (_Disposable) {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  function Target(target) {\n    var _this;\n    _classCallCheck(this, Target);\n    _this = _callSuper(this, Target);\n\n    /**\n     * @private\n     * @type {*}\n     */\n    _this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    _this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    _this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    _this.listeners_ = null;\n    return _this;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  _inherits(Target, _Disposable);\n  return _createClass(Target, [{\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener) {\n      if (!type || !listener) {\n        return;\n      }\n      var listeners = this.listeners_ || (this.listeners_ = {});\n      var listenersForType = listeners[type] || (listeners[type] = []);\n      if (!listenersForType.includes(listener)) {\n        listenersForType.push(listener);\n      }\n    }\n\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event) {\n      var isString = typeof event === 'string';\n      var type = isString ? event : event.type;\n      var listeners = this.listeners_ && this.listeners_[type];\n      if (!listeners) {\n        return;\n      }\n      var evt = isString ? new Event(event) : (/** @type {Event} */event);\n      if (!evt.target) {\n        evt.target = this.eventTarget_ || this;\n      }\n      var dispatching = this.dispatching_ || (this.dispatching_ = {});\n      var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      var propagate;\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */listeners[i].handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */listeners[i].call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      if (--dispatching[type] === 0) {\n        var pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n\n    /**\n     * Clean up.\n     */\n  }, {\n    key: \"disposeInternal\",\n    value: function disposeInternal() {\n      this.listeners_ && clear(this.listeners_);\n    }\n\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n  }, {\n    key: \"getListeners\",\n    value: function getListeners(type) {\n      return this.listeners_ && this.listeners_[type] || undefined;\n    }\n\n    /**\n     * @param {string} [type] Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n  }, {\n    key: \"hasListener\",\n    value: function hasListener(type) {\n      if (!this.listeners_) {\n        return false;\n      }\n      return type ? type in this.listeners_ : Object.keys(this.listeners_).length > 0;\n    }\n\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, listener) {\n      if (!this.listeners_) {\n        return;\n      }\n      var listeners = this.listeners_[type];\n      if (!listeners) {\n        return;\n      }\n      var index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }]);\n}(Disposable);\nexport default Target;","map":{"version":3,"names":["Disposable","Event","VOID","clear","Target","_Disposable","target","_this","_classCallCheck","_callSuper","eventTarget_","pendingRemovals_","dispatching_","listeners_","_inherits","_createClass","key","value","addEventListener","type","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","evt","dispatching","pendingRemovals","propagate","i","ii","length","handleEvent","call","propagationStopped","pr","removeEventListener","disposeInternal","getListeners","undefined","hasListener","Object","keys","index","indexOf","splice"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/events/Target.js"],"sourcesContent":["/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}