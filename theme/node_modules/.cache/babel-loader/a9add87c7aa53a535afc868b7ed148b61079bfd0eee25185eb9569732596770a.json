{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _superPropGet from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/superPropGet.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.function.bind.js\";\n/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport { compose as composeTransform, create as createTransform } from '../../transform.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nvar WebGLLayerRenderer = /*#__PURE__*/function (_LayerRenderer) {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  function WebGLLayerRenderer(layer, options) {\n    var _this;\n    _classCallCheck(this, WebGLLayerRenderer);\n    _this = _callSuper(this, WebGLLayerRenderer, [layer]);\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    _this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    _this.pixelContext_ = null;\n\n    /**\n     * @private\n     */\n    _this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    _this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    _this.helper;\n    layer.addChangeListener(LayerProperty.MAP, _this.removeHelper.bind(_this));\n    _this.dispatchPreComposeEvent = _this.dispatchPreComposeEvent.bind(_this);\n    _this.dispatchPostComposeEvent = _this.dispatchPostComposeEvent.bind(_this);\n    return _this;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  _inherits(WebGLLayerRenderer, _LayerRenderer);\n  return _createClass(WebGLLayerRenderer, [{\n    key: \"dispatchPreComposeEvent\",\n    value: function dispatchPreComposeEvent(context, frameState) {\n      var layer = this.getLayer();\n      if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n        var event = new RenderEvent(RenderEventType.PRECOMPOSE, undefined, frameState, context);\n        layer.dispatchEvent(event);\n      }\n    }\n\n    /**\n     * @param {WebGLRenderingContext} context The WebGL rendering context.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n  }, {\n    key: \"dispatchPostComposeEvent\",\n    value: function dispatchPostComposeEvent(context, frameState) {\n      var layer = this.getLayer();\n      if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n        var event = new RenderEvent(RenderEventType.POSTCOMPOSE, undefined, frameState, context);\n        layer.dispatchEvent(event);\n      }\n    }\n\n    /**\n     * Reset options (only handles uniforms).\n     * @param {Options} options Options.\n     */\n  }, {\n    key: \"reset\",\n    value: function reset(options) {\n      this.uniforms_ = options.uniforms;\n      if (this.helper) {\n        this.helper.setUniforms(this.uniforms_);\n      }\n    }\n\n    /**\n     * @protected\n     */\n  }, {\n    key: \"removeHelper\",\n    value: function removeHelper() {\n      if (this.helper) {\n        this.helper.dispose();\n        delete this.helper;\n      }\n    }\n\n    /**\n     * Determine whether renderFrame should be called.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n  }, {\n    key: \"prepareFrame\",\n    value: function prepareFrame(frameState) {\n      if (this.getLayer().getRenderSource()) {\n        var incrementGroup = true;\n        var groupNumber = -1;\n        var className;\n        for (var i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n          var layer = frameState.layerStatesArray[i].layer;\n          var renderer = layer.getRenderer();\n          if (!(renderer instanceof WebGLLayerRenderer)) {\n            incrementGroup = true;\n            continue;\n          }\n          var layerClassName = layer.getClassName();\n          if (incrementGroup || layerClassName !== className) {\n            groupNumber += 1;\n            incrementGroup = false;\n          }\n          className = layerClassName;\n          if (renderer === this) {\n            break;\n          }\n        }\n        var canvasCacheKey = 'map/' + frameState.mapId + '/group/' + groupNumber;\n        if (!this.helper || !this.helper.canvasCacheKeyMatches(canvasCacheKey) || this.helper.needsToBeRecreated()) {\n          this.removeHelper();\n          this.helper = new WebGLHelper({\n            postProcesses: this.postProcesses_,\n            uniforms: this.uniforms_,\n            canvasCacheKey: canvasCacheKey\n          });\n          if (className) {\n            this.helper.getCanvas().className = className;\n          }\n          this.afterHelperCreated();\n        }\n      }\n      return this.prepareFrameInternal(frameState);\n    }\n\n    /**\n     * @protected\n     */\n  }, {\n    key: \"afterHelperCreated\",\n    value: function afterHelperCreated() {}\n\n    /**\n     * Determine whether renderFrame should be called.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     * @protected\n     */\n  }, {\n    key: \"prepareFrameInternal\",\n    value: function prepareFrameInternal(frameState) {\n      return true;\n    }\n\n    /**\n     * Clean up.\n     */\n  }, {\n    key: \"disposeInternal\",\n    value: function disposeInternal() {\n      this.removeHelper();\n      _superPropGet(WebGLLayerRenderer, \"disposeInternal\", this, 3)([]);\n    }\n\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {WebGLRenderingContext} context The rendering context.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     * @private\n     */\n  }, {\n    key: \"dispatchRenderEvent_\",\n    value: function dispatchRenderEvent_(type, context, frameState) {\n      var layer = this.getLayer();\n      if (layer.hasListener(type)) {\n        composeTransform(this.inversePixelTransform_, 0, 0, frameState.pixelRatio, -frameState.pixelRatio, 0, 0, -frameState.size[1]);\n        var event = new RenderEvent(type, this.inversePixelTransform_, frameState, context);\n        layer.dispatchEvent(event);\n      }\n    }\n\n    /**\n     * @param {WebGLRenderingContext} context The rendering context.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n  }, {\n    key: \"preRender\",\n    value: function preRender(context, frameState) {\n      this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    }\n\n    /**\n     * @param {WebGLRenderingContext} context The rendering context.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n  }, {\n    key: \"postRender\",\n    value: function postRender(context, frameState) {\n      this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    }\n  }]);\n}(LayerRenderer);\nexport default WebGLLayerRenderer;","map":{"version":3,"names":["LayerProperty","LayerRenderer","RenderEvent","RenderEventType","WebGLHelper","compose","composeTransform","create","createTransform","WebGLLayerRenderer","_LayerRenderer","layer","options","_this","_classCallCheck","_callSuper","inversePixelTransform_","pixelContext_","postProcesses_","postProcesses","uniforms_","uniforms","helper","addChangeListener","MAP","removeHelper","bind","dispatchPreComposeEvent","dispatchPostComposeEvent","_inherits","_createClass","key","value","context","frameState","getLayer","hasListener","PRECOMPOSE","event","undefined","dispatchEvent","POSTCOMPOSE","reset","setUniforms","dispose","prepareFrame","getRenderSource","incrementGroup","groupNumber","className","i","ii","layerStatesArray","length","renderer","getRenderer","layerClassName","getClassName","canvasCacheKey","mapId","canvasCacheKeyMatches","needsToBeRecreated","getCanvas","afterHelperCreated","prepareFrameInternal","disposeInternal","_superPropGet","dispatchRenderEvent_","type","pixelRatio","size","preRender","PRERENDER","postRender","POSTRENDER"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/renderer/webgl/Layer.js"],"sourcesContent":["/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    layer.addChangeListener(LayerProperty.MAP, this.removeHelper.bind(this));\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (\n        !this.helper ||\n        !this.helper.canvasCacheKeyMatches(canvasCacheKey) ||\n        this.helper.needsToBeRecreated()\n      ) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.removeHelper();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1]\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}