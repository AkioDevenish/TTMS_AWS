{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.slice.js\";\n/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /*#__PURE__*/function (_RegularShape) {\n  /**\n   * @param {Options} [options] Options.\n   */\n  function CircleStyle(options) {\n    _classCallCheck(this, CircleStyle);\n    options = options ? options : {\n      radius: 5\n    };\n    return _callSuper(this, CircleStyle, [{\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView: options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode\n    }]);\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  _inherits(CircleStyle, _RegularShape);\n  return _createClass(CircleStyle, [{\n    key: \"clone\",\n    value: function clone() {\n      var scale = this.getScale();\n      var style = new CircleStyle({\n        fill: this.getFill() ? this.getFill().clone() : undefined,\n        stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n        radius: this.getRadius(),\n        scale: Array.isArray(scale) ? scale.slice() : scale,\n        rotation: this.getRotation(),\n        rotateWithView: this.getRotateWithView(),\n        displacement: this.getDisplacement().slice(),\n        declutterMode: this.getDeclutterMode()\n      });\n      style.setOpacity(this.getOpacity());\n      return style;\n    }\n\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n  }, {\n    key: \"setRadius\",\n    value: function setRadius(radius) {\n      this.radius_ = radius;\n      this.render();\n    }\n  }]);\n}(RegularShape);\nexport default CircleStyle;","map":{"version":3,"names":["RegularShape","CircleStyle","_RegularShape","options","_classCallCheck","radius","_callSuper","points","Infinity","fill","stroke","scale","undefined","rotation","rotateWithView","displacement","declutterMode","_inherits","_createClass","key","value","clone","getScale","style","getFill","getStroke","getRadius","Array","isArray","slice","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","setOpacity","getOpacity","setRadius","radius_","render"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/style/Circle.js"],"sourcesContent":["/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n"],"mappings":";;;;;;;AAAA;AACA;AACA;;AAEA,OAAOA,YAAY,MAAM,mBAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA,IAKMC,WAAW,0BAAAC,aAAA;EACf;AACF;AACA;EACE,SAAAD,YAAYE,OAAO,EAAE;IAAAC,eAAA,OAAAH,WAAA;IACnBE,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG;MAACE,MAAM,EAAE;IAAC,CAAC;IAAC,OAAAC,UAAA,OAAAL,WAAA,GAEpC;MACJM,MAAM,EAAEC,QAAQ;MAChBC,IAAI,EAAEN,OAAO,CAACM,IAAI;MAClBJ,MAAM,EAAEF,OAAO,CAACE,MAAM;MACtBK,MAAM,EAAEP,OAAO,CAACO,MAAM;MACtBC,KAAK,EAAER,OAAO,CAACQ,KAAK,KAAKC,SAAS,GAAGT,OAAO,CAACQ,KAAK,GAAG,CAAC;MACtDE,QAAQ,EAAEV,OAAO,CAACU,QAAQ,KAAKD,SAAS,GAAGT,OAAO,CAACU,QAAQ,GAAG,CAAC;MAC/DC,cAAc,EACZX,OAAO,CAACW,cAAc,KAAKF,SAAS,GAAGT,OAAO,CAACW,cAAc,GAAG,KAAK;MACvEC,YAAY,EACVZ,OAAO,CAACY,YAAY,KAAKH,SAAS,GAAGT,OAAO,CAACY,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MACpEC,aAAa,EAAEb,OAAO,CAACa;IACzB,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EAJEC,SAAA,CAAAhB,WAAA,EAAAC,aAAA;EAAA,OAAAgB,YAAA,CAAAjB,WAAA;IAAAkB,GAAA;IAAAC,KAAA,EAKA,SAAAC,KAAKA,CAAA,EAAG;MACN,IAAMV,KAAK,GAAG,IAAI,CAACW,QAAQ,CAAC,CAAC;MAC7B,IAAMC,KAAK,GAAG,IAAItB,WAAW,CAAC;QAC5BQ,IAAI,EAAE,IAAI,CAACe,OAAO,CAAC,CAAC,GAAG,IAAI,CAACA,OAAO,CAAC,CAAC,CAACH,KAAK,CAAC,CAAC,GAAGT,SAAS;QACzDF,MAAM,EAAE,IAAI,CAACe,SAAS,CAAC,CAAC,GAAG,IAAI,CAACA,SAAS,CAAC,CAAC,CAACJ,KAAK,CAAC,CAAC,GAAGT,SAAS;QAC/DP,MAAM,EAAE,IAAI,CAACqB,SAAS,CAAC,CAAC;QACxBf,KAAK,EAAEgB,KAAK,CAACC,OAAO,CAACjB,KAAK,CAAC,GAAGA,KAAK,CAACkB,KAAK,CAAC,CAAC,GAAGlB,KAAK;QACnDE,QAAQ,EAAE,IAAI,CAACiB,WAAW,CAAC,CAAC;QAC5BhB,cAAc,EAAE,IAAI,CAACiB,iBAAiB,CAAC,CAAC;QACxChB,YAAY,EAAE,IAAI,CAACiB,eAAe,CAAC,CAAC,CAACH,KAAK,CAAC,CAAC;QAC5Cb,aAAa,EAAE,IAAI,CAACiB,gBAAgB,CAAC;MACvC,CAAC,CAAC;MACFV,KAAK,CAACW,UAAU,CAAC,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC;MACnC,OAAOZ,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAJ,GAAA;IAAAC,KAAA,EAMA,SAAAgB,SAASA,CAAC/B,MAAM,EAAE;MAChB,IAAI,CAACgC,OAAO,GAAGhC,MAAM;MACrB,IAAI,CAACiC,MAAM,CAAC,CAAC;IACf;EAAC;AAAA,EApDuBtC,YAAY;AAuDtC,eAAeC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}