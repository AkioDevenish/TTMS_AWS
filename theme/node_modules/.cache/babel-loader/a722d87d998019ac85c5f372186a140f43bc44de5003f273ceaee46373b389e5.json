{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.function.bind.js\";\n/**\n * @module ol/source/OGCMapTile\n */\nimport TileImage from './TileImage.js';\nimport { getTileSetInfo } from './ogcTileUtil.js';\nimport { error as logError } from '../console.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} url URL to the OGC Map Tileset endpoint.\n * @property {Object} [context] A lookup of values to use in the tile URL template.  The `{tileMatrix}`\n * (zoom level), `{tileRow}`, and `{tileCol}` variables in the URL will always be provided by the source.\n * @property {string} [mediaType] The content type for the tiles (e.g. \"image/png\").  If not provided,\n * the source will try to find a link with rel=\"item\" that uses a supported image type.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. By default, the projection\n * will be derived from the `crs` of the `tileMatrixSet`.  You can override this by supplying\n * a projection to the constructor.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(tile, src) {\n *   tile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for map tiles from an [OGC API - Tiles](https://ogcapi.ogc.org/tiles/) service that provides \"map\" type tiles.\n * The service must conform to at least the core (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/core)\n * and tileset (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tileset) conformance classes.\n * @api\n */\nvar OGCMapTile = /*#__PURE__*/function (_TileImage) {\n  /**\n   * @param {Options} options OGC map tile options.\n   */\n  function OGCMapTile(options) {\n    var _this;\n    _classCallCheck(this, OGCMapTile);\n    _this = _callSuper(this, OGCMapTile, [{\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    }]);\n    var sourceInfo = {\n      url: options.url,\n      projection: _this.getProjection(),\n      mediaType: options.mediaType,\n      context: options.context || null\n    };\n    getTileSetInfo(sourceInfo).then(_this.handleTileSetInfo_.bind(_this))[\"catch\"](_this.handleError_.bind(_this));\n    return _this;\n  }\n\n  /**\n   * @param {import(\"./ogcTileUtil.js\").TileSetInfo} tileSetInfo Tile set info.\n   * @private\n   */\n  _inherits(OGCMapTile, _TileImage);\n  return _createClass(OGCMapTile, [{\n    key: \"handleTileSetInfo_\",\n    value: function handleTileSetInfo_(tileSetInfo) {\n      this.tileGrid = tileSetInfo.grid;\n      this.setTileUrlFunction(tileSetInfo.urlFunction, tileSetInfo.urlTemplate);\n      this.setState('ready');\n    }\n\n    /**\n     * @private\n     * @param {Error} error The error.\n     */\n  }, {\n    key: \"handleError_\",\n    value: function handleError_(error) {\n      logError(error);\n      this.setState('error');\n    }\n  }]);\n}(TileImage);\nexport default OGCMapTile;","map":{"version":3,"names":["TileImage","getTileSetInfo","error","logError","OGCMapTile","_TileImage","options","_this","_classCallCheck","_callSuper","attributions","cacheSize","crossOrigin","interpolate","projection","reprojectionErrorThreshold","state","tileLoadFunction","wrapX","undefined","transition","sourceInfo","url","getProjection","mediaType","context","then","handleTileSetInfo_","bind","handleError_","_inherits","_createClass","key","value","tileSetInfo","tileGrid","grid","setTileUrlFunction","urlFunction","urlTemplate","setState"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/source/OGCMapTile.js"],"sourcesContent":["/**\n * @module ol/source/OGCMapTile\n */\nimport TileImage from './TileImage.js';\nimport {getTileSetInfo} from './ogcTileUtil.js';\nimport {error as logError} from '../console.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} url URL to the OGC Map Tileset endpoint.\n * @property {Object} [context] A lookup of values to use in the tile URL template.  The `{tileMatrix}`\n * (zoom level), `{tileRow}`, and `{tileCol}` variables in the URL will always be provided by the source.\n * @property {string} [mediaType] The content type for the tiles (e.g. \"image/png\").  If not provided,\n * the source will try to find a link with rel=\"item\" that uses a supported image type.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. By default, the projection\n * will be derived from the `crs` of the `tileMatrixSet`.  You can override this by supplying\n * a projection to the constructor.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(tile, src) {\n *   tile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for map tiles from an [OGC API - Tiles](https://ogcapi.ogc.org/tiles/) service that provides \"map\" type tiles.\n * The service must conform to at least the core (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/core)\n * and tileset (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tileset) conformance classes.\n * @api\n */\nclass OGCMapTile extends TileImage {\n  /**\n   * @param {Options} options OGC map tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    const sourceInfo = {\n      url: options.url,\n      projection: this.getProjection(),\n      mediaType: options.mediaType,\n      context: options.context || null,\n    };\n\n    getTileSetInfo(sourceInfo)\n      .then(this.handleTileSetInfo_.bind(this))\n      .catch(this.handleError_.bind(this));\n  }\n\n  /**\n   * @param {import(\"./ogcTileUtil.js\").TileSetInfo} tileSetInfo Tile set info.\n   * @private\n   */\n  handleTileSetInfo_(tileSetInfo) {\n    this.tileGrid = tileSetInfo.grid;\n    this.setTileUrlFunction(tileSetInfo.urlFunction, tileSetInfo.urlTemplate);\n    this.setState('ready');\n  }\n\n  /**\n   * @private\n   * @param {Error} error The error.\n   */\n  handleError_(error) {\n    logError(error);\n    this.setState('error');\n  }\n}\n\nexport default OGCMapTile;\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA,OAAOA,SAAS,MAAM,gBAAgB;AACtC,SAAQC,cAAc,QAAO,kBAAkB;AAC/C,SAAQC,KAAK,IAAIC,QAAQ,QAAO,eAAe;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAOMC,UAAU,0BAAAC,UAAA;EACd;AACF;AACA;EACE,SAAAD,WAAYE,OAAO,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAJ,UAAA;IACnBG,KAAA,GAAAE,UAAA,OAAAL,UAAA,GAAM;MACJM,YAAY,EAAEJ,OAAO,CAACI,YAAY;MAClCC,SAAS,EAAEL,OAAO,CAACK,SAAS;MAC5BC,WAAW,EAAEN,OAAO,CAACM,WAAW;MAChCC,WAAW,EAAEP,OAAO,CAACO,WAAW;MAChCC,UAAU,EAAER,OAAO,CAACQ,UAAU;MAC9BC,0BAA0B,EAAET,OAAO,CAACS,0BAA0B;MAC9DC,KAAK,EAAE,SAAS;MAChBC,gBAAgB,EAAEX,OAAO,CAACW,gBAAgB;MAC1CC,KAAK,EAAEZ,OAAO,CAACY,KAAK,KAAKC,SAAS,GAAGb,OAAO,CAACY,KAAK,GAAG,IAAI;MACzDE,UAAU,EAAEd,OAAO,CAACc;IACtB,CAAC;IAED,IAAMC,UAAU,GAAG;MACjBC,GAAG,EAAEhB,OAAO,CAACgB,GAAG;MAChBR,UAAU,EAAEP,KAAA,CAAKgB,aAAa,CAAC,CAAC;MAChCC,SAAS,EAAElB,OAAO,CAACkB,SAAS;MAC5BC,OAAO,EAAEnB,OAAO,CAACmB,OAAO,IAAI;IAC9B,CAAC;IAEDxB,cAAc,CAACoB,UAAU,CAAC,CACvBK,IAAI,CAACnB,KAAA,CAAKoB,kBAAkB,CAACC,IAAI,CAAArB,KAAK,CAAC,CAAC,SACnC,CAACA,KAAA,CAAKsB,YAAY,CAACD,IAAI,CAAArB,KAAK,CAAC,CAAC;IAAC,OAAAA,KAAA;EACzC;;EAEA;AACF;AACA;AACA;EAHEuB,SAAA,CAAA1B,UAAA,EAAAC,UAAA;EAAA,OAAA0B,YAAA,CAAA3B,UAAA;IAAA4B,GAAA;IAAAC,KAAA,EAIA,SAAAN,kBAAkBA,CAACO,WAAW,EAAE;MAC9B,IAAI,CAACC,QAAQ,GAAGD,WAAW,CAACE,IAAI;MAChC,IAAI,CAACC,kBAAkB,CAACH,WAAW,CAACI,WAAW,EAAEJ,WAAW,CAACK,WAAW,CAAC;MACzE,IAAI,CAACC,QAAQ,CAAC,OAAO,CAAC;IACxB;;IAEA;AACF;AACA;AACA;EAHE;IAAAR,GAAA;IAAAC,KAAA,EAIA,SAAAJ,YAAYA,CAAC3B,KAAK,EAAE;MAClBC,QAAQ,CAACD,KAAK,CAAC;MACf,IAAI,CAACsC,QAAQ,CAAC,OAAO,CAAC;IACxB;EAAC;AAAA,EA/CsBxC,SAAS;AAkDlC,eAAeI,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}