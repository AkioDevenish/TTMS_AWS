{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\n/**\n * @module ol/source/CartoDB\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * https://carto.com/developers/maps-api/guides/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See https://carto.com/developers/maps-api/guides/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See https://carto.com/developers/maps-api/guides/named-maps/\n * for more detail.\n * @property {string} [account] Username as used to access public Carto dashboard at https://{username}.carto.com/.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @typedef {Object} CartoDBLayerInfo\n * @property {string} layergroupid The layer group ID\n * @property {{https: string}} cdn_url The CDN URL\n */\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nvar CartoDB = /*#__PURE__*/function (_XYZ) {\n  /**\n   * @param {Options} options CartoDB options.\n   */\n  function CartoDB(options) {\n    var _this;\n    _classCallCheck(this, CartoDB);\n    _this = _callSuper(this, CartoDB, [{\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n      minZoom: options.minZoom,\n      projection: options.projection,\n      transition: options.transition,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection\n    }]);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    _this.account_ = options.account;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    _this.mapId_ = options.map || '';\n\n    /**\n     * @type {!Object}\n     * @private\n     */\n    _this.config_ = options.config || {};\n\n    /**\n     * @type {!Object<string, CartoDBLayerInfo>}\n     * @private\n     */\n    _this.templateCache_ = {};\n    _this.initializeMap_();\n    return _this;\n  }\n\n  /**\n   * Returns the current config.\n   * @return {!Object} The current configuration.\n   * @api\n   */\n  _inherits(CartoDB, _XYZ);\n  return _createClass(CartoDB, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      return this.config_;\n    }\n\n    /**\n     * Updates the carto db config.\n     * @param {Object} config a key-value lookup. Values will replace current values\n     *     in the config.\n     * @api\n     */\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {\n      Object.assign(this.config_, config);\n      this.initializeMap_();\n    }\n\n    /**\n     * Sets the CartoDB config\n     * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n     *     object.\n     * If using named maps, a key-value lookup with the template parameters.\n     * @api\n     */\n  }, {\n    key: \"setConfig\",\n    value: function setConfig(config) {\n      this.config_ = config || {};\n      this.initializeMap_();\n    }\n\n    /**\n     * Issue a request to initialize the CartoDB map.\n     * @private\n     */\n  }, {\n    key: \"initializeMap_\",\n    value: function initializeMap_() {\n      var paramHash = JSON.stringify(this.config_);\n      if (this.templateCache_[paramHash]) {\n        this.applyTemplate_(this.templateCache_[paramHash]);\n        return;\n      }\n      var mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n      if (this.mapId_) {\n        mapUrl += '/named/' + this.mapId_;\n      }\n      var client = new XMLHttpRequest();\n      client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n      client.addEventListener('error', this.handleInitError_.bind(this));\n      client.open('POST', mapUrl);\n      client.setRequestHeader('Content-type', 'application/json');\n      client.send(JSON.stringify(this.config_));\n    }\n\n    /**\n     * Handle map initialization response.\n     * @param {string} paramHash a hash representing the parameter set that was used\n     *     for the request\n     * @param {Event} event Event.\n     * @private\n     */\n  }, {\n    key: \"handleInitResponse_\",\n    value: function handleInitResponse_(paramHash, event) {\n      var client = /** @type {XMLHttpRequest} */event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || client.status >= 200 && client.status < 300) {\n        var response;\n        try {\n          response = /** @type {CartoDBLayerInfo} */\n          JSON.parse(client.responseText);\n        } catch (err) {\n          this.setState('error');\n          return;\n        }\n        this.applyTemplate_(response);\n        this.templateCache_[paramHash] = response;\n        this.setState('ready');\n      } else {\n        this.setState('error');\n      }\n    }\n\n    /**\n     * @private\n     * @param {Event} event Event.\n     */\n  }, {\n    key: \"handleInitError_\",\n    value: function handleInitError_(event) {\n      this.setState('error');\n    }\n\n    /**\n     * Apply the new tile urls returned by carto db\n     * @param {CartoDBLayerInfo} data Result of carto db call.\n     * @private\n     */\n  }, {\n    key: \"applyTemplate_\",\n    value: function applyTemplate_(data) {\n      var tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ + '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n      this.setUrl(tilesUrl);\n    }\n  }]);\n}(XYZ);\nexport default CartoDB;","map":{"version":3,"names":["XYZ","CartoDB","_XYZ","options","_this","_classCallCheck","_callSuper","attributions","cacheSize","crossOrigin","maxZoom","undefined","minZoom","projection","transition","wrapX","zDirection","account_","account","mapId_","map","config_","config","templateCache_","initializeMap_","_inherits","_createClass","key","value","getConfig","updateConfig","Object","assign","setConfig","paramHash","JSON","stringify","applyTemplate_","mapUrl","client","XMLHttpRequest","addEventListener","handleInitResponse_","bind","handleInitError_","open","setRequestHeader","send","event","target","status","response","parse","responseText","err","setState","data","tilesUrl","cdn_url","https","layergroupid","setUrl"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/source/CartoDB.js"],"sourcesContent":["/**\n * @module ol/source/CartoDB\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * https://carto.com/developers/maps-api/guides/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See https://carto.com/developers/maps-api/guides/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See https://carto.com/developers/maps-api/guides/named-maps/\n * for more detail.\n * @property {string} [account] Username as used to access public Carto dashboard at https://{username}.carto.com/.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @typedef {Object} CartoDBLayerInfo\n * @property {string} layergroupid The layer group ID\n * @property {{https: string}} cdn_url The CDN URL\n */\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nclass CartoDB extends XYZ {\n  /**\n   * @param {Options} options CartoDB options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n      minZoom: options.minZoom,\n      projection: options.projection,\n      transition: options.transition,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.account_ = options.account;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.mapId_ = options.map || '';\n\n    /**\n     * @type {!Object}\n     * @private\n     */\n    this.config_ = options.config || {};\n\n    /**\n     * @type {!Object<string, CartoDBLayerInfo>}\n     * @private\n     */\n    this.templateCache_ = {};\n\n    this.initializeMap_();\n  }\n\n  /**\n   * Returns the current config.\n   * @return {!Object} The current configuration.\n   * @api\n   */\n  getConfig() {\n    return this.config_;\n  }\n\n  /**\n   * Updates the carto db config.\n   * @param {Object} config a key-value lookup. Values will replace current values\n   *     in the config.\n   * @api\n   */\n  updateConfig(config) {\n    Object.assign(this.config_, config);\n    this.initializeMap_();\n  }\n\n  /**\n   * Sets the CartoDB config\n   * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n   *     object.\n   * If using named maps, a key-value lookup with the template parameters.\n   * @api\n   */\n  setConfig(config) {\n    this.config_ = config || {};\n    this.initializeMap_();\n  }\n\n  /**\n   * Issue a request to initialize the CartoDB map.\n   * @private\n   */\n  initializeMap_() {\n    const paramHash = JSON.stringify(this.config_);\n    if (this.templateCache_[paramHash]) {\n      this.applyTemplate_(this.templateCache_[paramHash]);\n      return;\n    }\n    let mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n    if (this.mapId_) {\n      mapUrl += '/named/' + this.mapId_;\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener(\n      'load',\n      this.handleInitResponse_.bind(this, paramHash)\n    );\n    client.addEventListener('error', this.handleInitError_.bind(this));\n    client.open('POST', mapUrl);\n    client.setRequestHeader('Content-type', 'application/json');\n    client.send(JSON.stringify(this.config_));\n  }\n\n  /**\n   * Handle map initialization response.\n   * @param {string} paramHash a hash representing the parameter set that was used\n   *     for the request\n   * @param {Event} event Event.\n   * @private\n   */\n  handleInitResponse_(paramHash, event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {CartoDBLayerInfo} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.setState('error');\n        return;\n      }\n      this.applyTemplate_(response);\n      this.templateCache_[paramHash] = response;\n      this.setState('ready');\n    } else {\n      this.setState('error');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event Event.\n   */\n  handleInitError_(event) {\n    this.setState('error');\n  }\n\n  /**\n   * Apply the new tile urls returned by carto db\n   * @param {CartoDBLayerInfo} data Result of carto db call.\n   * @private\n   */\n  applyTemplate_(data) {\n    const tilesUrl =\n      'https://' +\n      data.cdn_url.https +\n      '/' +\n      this.account_ +\n      '/api/v1/map/' +\n      data.layergroupid +\n      '/{z}/{x}/{y}.png';\n    this.setUrl(tilesUrl);\n  }\n}\n\nexport default CartoDB;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}