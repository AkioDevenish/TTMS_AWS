{"ast":null,"code":"import _typeof from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _toConsumableArray from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.substr.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\n/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport Icon from '../style/Icon.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport { OBJECT_PROPERTY_NODE_FACTORY, XML_SCHEMA_INSTANCE_URI, createElementNS, getAllTextContent, isDocument, makeArrayExtender, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS, parse, parseNode, pushParseAndPop, pushSerializeAndPop } from '../xml.js';\nimport { asArray } from '../color.js';\nimport { extend } from '../array.js';\nimport { get as getProjection } from '../proj.js';\nimport { readBoolean, readDecimal, readString, writeBooleanTextNode, writeCDATASection, writeDecimalTextNode, writeStringTextNode } from './xsd.js';\nimport { toRadians } from '../math.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [null, 'http://earth.google.com/kml/2.0', 'http://earth.google.com/kml/2.1', 'http://earth.google.com/kml/2.2', 'http://www.opengis.net/kml/2.2'];\n\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' + 'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */\nvar ICON_ANCHOR_UNITS_MAP = {\n  'fraction': 'fraction',\n  'pixels': 'pixels',\n  'insetPixels': 'pixels'\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PLACEMARK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n  'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n  'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n  'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n  'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n  'Style': makeObjectPropertySetter(readStyle),\n  'StyleMap': placemarkStyleMapParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n  'visibility': makeObjectPropertySetter(readBoolean)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n  'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n  'Track': makeObjectPropertySetter(readGxTrack, 'geometry')\n}));\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar CAMERA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  Altitude: makeObjectPropertySetter(readDecimal),\n  Longitude: makeObjectPropertySetter(readDecimal),\n  Latitude: makeObjectPropertySetter(readDecimal),\n  Tilt: makeObjectPropertySetter(readDecimal),\n  AltitudeMode: makeObjectPropertySetter(readString),\n  Heading: makeObjectPropertySetter(readDecimal),\n  Roll: makeObjectPropertySetter(readDecimal)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark)\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nvar DEFAULT_COLOR;\n\n/**\n * @type {Fill|null}\n */\nvar DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nvar DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nvar DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nvar DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke|null}\n */\nvar DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nvar DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text|null}\n */\nvar DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style|null}\n */\nvar DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nvar DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR\n  });\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n  DEFAULT_IMAGE_STYLE_SRC = 'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: 'bottom-left',\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC\n  });\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1\n  });\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8\n  });\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0\n  });\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nvar TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */\nvar KML = /*#__PURE__*/function (_XMLFeature) {\n  /**\n   * @param {Options} [options] Options.\n   */\n  function KML(options) {\n    var _this;\n    _classCallCheck(this, KML);\n    _this = _callSuper(this, KML);\n    options = options ? options : {};\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    _this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    _this.defaultStyle_ = options.defaultStyle ? options.defaultStyle : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.extractStyles_ = options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    _this.writeStyles_ = options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    _this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.showPointNames_ = options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    _this.crossOrigin_ = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    _this.iconUrlFunction_ = options.iconUrlFunction ? options.iconUrlFunction : defaultIconUrlFunction;\n    _this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n    return _this;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  _inherits(KML, _XMLFeature);\n  return _createClass(KML, [{\n    key: \"readDocumentOrFolder_\",\n    value: function readDocumentOrFolder_(node, objectStack) {\n      // FIXME use scope somehow\n      var parsersNS = makeStructureNS(NAMESPACE_URIS, {\n        'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Placemark': makeArrayPusher(this.readPlacemark_, this),\n        'Style': this.readSharedStyle_.bind(this),\n        'StyleMap': this.readSharedStyleMap_.bind(this)\n      });\n      /** @type {Array<Feature>} */\n      // @ts-ignore\n      var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n      if (features) {\n        return features;\n      }\n      return undefined;\n    }\n\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Feature|undefined} Feature.\n     */\n  }, {\n    key: \"readPlacemark_\",\n    value: function readPlacemark_(node, objectStack) {\n      var object = pushParseAndPop({\n        'geometry': null\n      }, PLACEMARK_PARSERS, node, objectStack, this);\n      if (!object) {\n        return undefined;\n      }\n      var feature = new Feature();\n      var id = node.getAttribute('id');\n      if (id !== null) {\n        feature.setId(id);\n      }\n      var options = /** @type {import(\"./Feature.js\").ReadOptions} */\n      objectStack[0];\n      var geometry = object['geometry'];\n      if (geometry) {\n        transformGeometryWithOptions(geometry, false, options);\n      }\n      feature.setGeometry(geometry);\n      delete object['geometry'];\n      if (this.extractStyles_) {\n        var style = object['Style'];\n        var styleUrl = object['styleUrl'];\n        var styleFunction = createFeatureStyleFunction(style, styleUrl, this.defaultStyle_, this.sharedStyles_, this.showPointNames_);\n        feature.setStyle(styleFunction);\n      }\n      delete object['Style'];\n      // we do not remove the styleUrl property from the object, so it\n      // gets stored on feature when setProperties is called\n\n      feature.setProperties(object, true);\n      return feature;\n    }\n\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n  }, {\n    key: \"readSharedStyle_\",\n    value: function readSharedStyle_(node, objectStack) {\n      var id = node.getAttribute('id');\n      if (id !== null) {\n        var style = readStyle.call(this, node, objectStack);\n        if (style) {\n          var styleUri;\n          var baseURI = node.baseURI;\n          if (!baseURI || baseURI == 'about:blank') {\n            baseURI = window.location.href;\n          }\n          if (baseURI) {\n            var url = new URL('#' + id, baseURI);\n            styleUri = url.href;\n          } else {\n            styleUri = '#' + id;\n          }\n          this.sharedStyles_[styleUri] = style;\n        }\n      }\n    }\n\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n  }, {\n    key: \"readSharedStyleMap_\",\n    value: function readSharedStyleMap_(node, objectStack) {\n      var id = node.getAttribute('id');\n      if (id === null) {\n        return;\n      }\n      var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n      if (!styleMapValue) {\n        return;\n      }\n      var styleUri;\n      var baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        var url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = styleMapValue;\n    }\n\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n  }, {\n    key: \"readFeatureFromNode\",\n    value: function readFeatureFromNode(node, options) {\n      if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n        return null;\n      }\n      var feature = this.readPlacemark_(node, [this.getReadOptions(node, options)]);\n      if (feature) {\n        return feature;\n      }\n      return null;\n    }\n\n    /**\n     * @protected\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n  }, {\n    key: \"readFeaturesFromNode\",\n    value: function readFeaturesFromNode(node, options) {\n      if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n        return [];\n      }\n      var features;\n      var localName = node.localName;\n      if (localName == 'Document' || localName == 'Folder') {\n        features = this.readDocumentOrFolder_(node, [this.getReadOptions(node, options)]);\n        if (features) {\n          return features;\n        }\n        return [];\n      }\n      if (localName == 'Placemark') {\n        var feature = this.readPlacemark_(node, [this.getReadOptions(node, options)]);\n        if (feature) {\n          return [feature];\n        }\n        return [];\n      }\n      if (localName == 'kml') {\n        features = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n          var fs = this.readFeaturesFromNode(n, options);\n          if (fs) {\n            extend(features, fs);\n          }\n        }\n        return features;\n      }\n      return [];\n    }\n\n    /**\n     * Read the name of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {string|undefined} Name.\n     * @api\n     */\n  }, {\n    key: \"readName\",\n    value: function readName(source) {\n      if (!source) {\n        return undefined;\n      }\n      if (typeof source === 'string') {\n        var doc = parse(source);\n        return this.readNameFromDocument(doc);\n      }\n      if (isDocument(source)) {\n        return this.readNameFromDocument(/** @type {Document} */source);\n      }\n      return this.readNameFromNode(/** @type {Element} */source);\n    }\n\n    /**\n     * @param {Document} doc Document.\n     * @return {string|undefined} Name.\n     */\n  }, {\n    key: \"readNameFromDocument\",\n    value: function readNameFromDocument(doc) {\n      for (var n = /** @type {Node} */doc.firstChild; n; n = n.nextSibling) {\n        if (n.nodeType == Node.ELEMENT_NODE) {\n          var name = this.readNameFromNode(/** @type {Element} */n);\n          if (name) {\n            return name;\n          }\n        }\n      }\n      return undefined;\n    }\n\n    /**\n     * @param {Element} node Node.\n     * @return {string|undefined} Name.\n     */\n  }, {\n    key: \"readNameFromNode\",\n    value: function readNameFromNode(node) {\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') {\n          return readString(n);\n        }\n      }\n      for (var _n = node.firstElementChild; _n; _n = _n.nextElementSibling) {\n        var localName = _n.localName;\n        if (NAMESPACE_URIS.includes(_n.namespaceURI) && (localName == 'Document' || localName == 'Folder' || localName == 'Placemark' || localName == 'kml')) {\n          var name = this.readNameFromNode(_n);\n          if (name) {\n            return name;\n          }\n        }\n      }\n      return undefined;\n    }\n\n    /**\n     * Read the network links of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Network links.\n     * @api\n     */\n  }, {\n    key: \"readNetworkLinks\",\n    value: function readNetworkLinks(source) {\n      var networkLinks = [];\n      if (typeof source === 'string') {\n        var doc = parse(source);\n        extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n      } else if (isDocument(source)) {\n        extend(networkLinks, this.readNetworkLinksFromDocument(/** @type {Document} */source));\n      } else {\n        extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */source));\n      }\n      return networkLinks;\n    }\n\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Network links.\n     */\n  }, {\n    key: \"readNetworkLinksFromDocument\",\n    value: function readNetworkLinksFromDocument(doc) {\n      var networkLinks = [];\n      for (var n = /** @type {Node} */doc.firstChild; n; n = n.nextSibling) {\n        if (n.nodeType == Node.ELEMENT_NODE) {\n          extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */n));\n        }\n      }\n      return networkLinks;\n    }\n\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Network links.\n     */\n  }, {\n    key: \"readNetworkLinksFromNode\",\n    value: function readNetworkLinksFromNode(node) {\n      var networkLinks = [];\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'NetworkLink') {\n          var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n          networkLinks.push(obj);\n        }\n      }\n      for (var _n2 = node.firstElementChild; _n2; _n2 = _n2.nextElementSibling) {\n        var localName = _n2.localName;\n        if (NAMESPACE_URIS.includes(_n2.namespaceURI) && (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n          extend(networkLinks, this.readNetworkLinksFromNode(_n2));\n        }\n      }\n      return networkLinks;\n    }\n\n    /**\n     * Read the regions of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Regions.\n     * @api\n     */\n  }, {\n    key: \"readRegion\",\n    value: function readRegion(source) {\n      var regions = [];\n      if (typeof source === 'string') {\n        var doc = parse(source);\n        extend(regions, this.readRegionFromDocument(doc));\n      } else if (isDocument(source)) {\n        extend(regions, this.readRegionFromDocument(/** @type {Document} */source));\n      } else {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */source));\n      }\n      return regions;\n    }\n\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Region.\n     */\n  }, {\n    key: \"readRegionFromDocument\",\n    value: function readRegionFromDocument(doc) {\n      var regions = [];\n      for (var n = /** @type {Node} */doc.firstChild; n; n = n.nextSibling) {\n        if (n.nodeType == Node.ELEMENT_NODE) {\n          extend(regions, this.readRegionFromNode(/** @type {Element} */n));\n        }\n      }\n      return regions;\n    }\n\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Region.\n     * @api\n     */\n  }, {\n    key: \"readRegionFromNode\",\n    value: function readRegionFromNode(node) {\n      var regions = [];\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n          var obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n          regions.push(obj);\n        }\n      }\n      for (var _n3 = node.firstElementChild; _n3; _n3 = _n3.nextElementSibling) {\n        var localName = _n3.localName;\n        if (NAMESPACE_URIS.includes(_n3.namespaceURI) && (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n          extend(regions, this.readRegionFromNode(_n3));\n        }\n      }\n      return regions;\n    }\n\n    /**\n     * @typedef {Object} KMLCamera Specifies the observer's viewpoint and associated view parameters.\n     * @property {number} [Latitude] Latitude of the camera.\n     * @property {number} [Longitude] Longitude of the camera.\n     * @property {number} [Altitude] Altitude of the camera.\n     * @property {string} [AltitudeMode] Floor-related altitude mode.\n     * @property {number} [Heading] Horizontal camera rotation.\n     * @property {number} [Tilt] Lateral camera rotation.\n     * @property {number} [Roll] Vertical camera rotation.\n     */\n\n    /**\n     * Read the cameras of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<KMLCamera>} Cameras.\n     * @api\n     */\n  }, {\n    key: \"readCamera\",\n    value: function readCamera(source) {\n      var cameras = [];\n      if (typeof source === 'string') {\n        var doc = parse(source);\n        extend(cameras, this.readCameraFromDocument(doc));\n      } else if (isDocument(source)) {\n        extend(cameras, this.readCameraFromDocument(/** @type {Document} */source));\n      } else {\n        extend(cameras, this.readCameraFromNode(/** @type {Element} */source));\n      }\n      return cameras;\n    }\n\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<KMLCamera>} Cameras.\n     */\n  }, {\n    key: \"readCameraFromDocument\",\n    value: function readCameraFromDocument(doc) {\n      var cameras = [];\n      for (var n = /** @type {Node} */doc.firstChild; n; n = n.nextSibling) {\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          extend(cameras, this.readCameraFromNode(/** @type {Element} */n));\n        }\n      }\n      return cameras;\n    }\n\n    /**\n     * @param {Element} node Node.\n     * @return {Array<KMLCamera>} Cameras.\n     * @api\n     */\n  }, {\n    key: \"readCameraFromNode\",\n    value: function readCameraFromNode(node) {\n      var cameras = [];\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName === 'Camera') {\n          var obj = pushParseAndPop({}, CAMERA_PARSERS, n, []);\n          cameras.push(obj);\n        }\n      }\n      for (var _n4 = node.firstElementChild; _n4; _n4 = _n4.nextElementSibling) {\n        var localName = _n4.localName;\n        if (NAMESPACE_URIS.includes(_n4.namespaceURI) && (localName === 'Document' || localName === 'Folder' || localName === 'Placemark' || localName === 'kml')) {\n          extend(cameras, this.readCameraFromNode(_n4));\n        }\n      }\n      return cameras;\n    }\n\n    /**\n     * Encode an array of features in the KML format as an XML node. GeometryCollections,\n     * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n     * @return {Node} Node.\n     * @api\n     */\n  }, {\n    key: \"writeFeaturesNode\",\n    value: function writeFeaturesNode(features, options) {\n      options = this.adaptOptions(options);\n      var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n      var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n      kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n      kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n      kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n      var /** @type {import(\"../xml.js\").NodeStackItem} */context = {\n        node: kml\n      };\n      /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n      var properties = {};\n      if (features.length > 1) {\n        properties['Document'] = features;\n      } else if (features.length == 1) {\n        properties['Placemark'] = features[0];\n      }\n      var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n      var values = makeSequence(properties, orderedKeys);\n      pushSerializeAndPop(context, KML_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, [options], orderedKeys, this);\n      return kml;\n    }\n  }]);\n}(XMLFeature);\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  var textOffset = [0, 0];\n  /** @type {CanvasTextAlign} */\n  var textAlign = 'start';\n  var imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    var imageSize = imageStyle.getSize();\n    if (imageSize && imageSize.length == 2) {\n      var imageScale = imageStyle.getScaleArray();\n      var anchor = imageStyle.getAnchor();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n  var textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n  var nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      var drawName = showPointNames;\n      var name = '';\n      var multiGeometryPoints = [];\n      if (drawName) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n          if (geometry instanceof GeometryCollection) {\n            multiGeometryPoints = geometry.getGeometriesArrayRecursive().filter(function (geometry) {\n              var type = geometry.getType();\n              return type === 'Point' || type === 'MultiPoint';\n            });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            var type = geometry.getType();\n            drawName = type === 'Point' || type === 'MultiPoint';\n          }\n        }\n      }\n      if (drawName) {\n        name = /** @type {string} */feature.get('name');\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && /&[^&]+;/.test(name)) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n      var featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        var nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          var baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  }\n  if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  }\n  return defaultStyle;\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  var s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    var hexColor = m[1];\n    return [parseInt(hexColor.substr(6, 2), 16), parseInt(hexColor.substr(4, 2), 16), parseInt(hexColor.substr(2, 2), 16), parseInt(hexColor.substr(0, 2), 16) / 255];\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  var s = getAllTextContent(node, false);\n  var flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  var m;\n  while (m = re.exec(s)) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  var s = getAllTextContent(node, false).trim();\n  var baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    var url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  var s = getAllTextContent(node, false).trim().replace(/^(?!.*#)/, '#');\n  var baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    var url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  var xunits = node.getAttribute('xunits');\n  var yunits = node.getAttribute('yunits');\n  /** @type {import('../style/Icon.js').IconOrigin} */\n  var origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-left';\n    } else {\n      origin = 'top-left';\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-right';\n    } else {\n      origin = 'top-right';\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale)\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  var object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  var IconObject = 'Icon' in object ? object['Icon'] : {};\n  var drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  var src;\n  var href = /** @type {string|undefined} */IconObject['href'];\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  var anchor, anchorXUnits, anchorYUnits;\n  /** @type {import('../style/Icon.js').IconOrigin|undefined} */\n  var anchorOrigin = 'bottom-left';\n  var hotSpot = /** @type {Vec2|undefined} */object['hotSpot'];\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (src.includes('pushpin')) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('arrow-reverse')) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('paddle')) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n  var offset;\n  var x = /** @type {number|undefined} */IconObject['x'];\n  var y = /** @type {number|undefined} */IconObject['y'];\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n  var size;\n  var w = /** @type {number|undefined} */IconObject['w'];\n  var h = /** @type {number|undefined} */IconObject['h'];\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n  var rotation;\n  var heading = /** @type {number} */object['heading'];\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n  var scale = /** @type {number|undefined} */object['scale'];\n  var color = /** @type {Array<number>|undefined} */object['color'];\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    var imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: 'bottom-left',\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color\n    });\n    var imageScale = imageStyle.getScaleArray()[0];\n    var imageSize = imageStyle.getSize();\n    if (imageSize === null) {\n      var imageState = imageStyle.getImageState();\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        var _listener = function listener() {\n          var imageState = imageStyle.getImageState();\n          if (!(imageState === ImageState.IDLE || imageState === ImageState.LOADING)) {\n            var _imageSize = imageStyle.getSize();\n            if (_imageSize && _imageSize.length == 2) {\n              var resizeScale = scaleForSize(_imageSize);\n              imageStyle.setScale(imageScale * resizeScale);\n            }\n            imageStyle.unlistenImageChange(_listener);\n          }\n        };\n        imageStyle.listenImageChange(_listener);\n        if (imageState === ImageState.IDLE) {\n          imageStyle.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      var resizeScale = scaleForSize(imageSize);\n      imageStyle.setScale(imageScale * resizeScale);\n    }\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  var object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var textStyle = new Text({\n    fill: new Fill({\n      color: (/** @type {import(\"../color.js\").Color} */\n      'color' in object ? object['color'] : DEFAULT_COLOR)\n    }),\n    scale: (/** @type {number|undefined} */object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  var object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var strokeStyle = new Stroke({\n    color: (/** @type {import(\"../color.js\").Color} */\n    'color' in object ? object['color'] : DEFAULT_COLOR),\n    width: (/** @type {number} */'width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  var object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var fillStyle = new Fill({\n    color: (/** @type {import(\"../color.js\").Color} */\n    'color' in object ? object['color'] : DEFAULT_COLOR)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  var fill = /** @type {boolean|undefined} */object['fill'];\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  var outline = /** @type {boolean|undefined} */object['outline'];\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  var gxTrackObject = /** @type {GxTrackObject} */\n  objectStack[objectStack.length - 1];\n  var coordinates = gxTrackObject.coordinates;\n  var s = getAllTextContent(node, false);\n  var re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  var m = re.exec(s);\n  if (m) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  var lineStrings = pushParseAndPop([], GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GX_TRACK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'when': whenParser\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n  'coord': gxCoordParser\n}));\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  var gxTrackObject = pushParseAndPop(/** @type {GxTrackObject} */{\n    coordinates: [],\n    whens: []\n  }, GX_TRACK_PARSERS, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  var flatCoordinates = [];\n  var coordinates = gxTrackObject.coordinates;\n  var whens = gxTrackObject.whens;\n  for (var i = 0, ii = Math.min(coordinates.length, whens.length); i < ii; ++i) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(coordinates[i][0], coordinates[i][1], coordinates[i][2], whens[i]);\n    }\n  }\n  return new LineString(flatCoordinates, 'XYZM');\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ICON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n  'x': makeObjectPropertySetter(readDecimal),\n  'y': makeObjectPropertySetter(readDecimal),\n  'w': makeObjectPropertySetter(readDecimal),\n  'h': makeObjectPropertySetter(readDecimal)\n}));\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  var iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  }\n  return null;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(null, GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n  var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    var lineString = new LineString(flatCoordinates, 'XYZ');\n    lineString.setProperties(properties, true);\n    return lineString;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n  var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    var polygon = new Polygon(flatCoordinates, 'XYZ', [flatCoordinates.length]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  var geometries = pushParseAndPop([], MULTI_GEOMETRY_PARSERS, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  var multiGeometry;\n  var homogeneous = true;\n  var type = geometries[0].getType();\n  var geometry;\n  for (var i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    var layout;\n    var flatCoordinates;\n    if (type == 'Point') {\n      var point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (var _i = 1, _ii = geometries.length; _i < _ii; ++_i) {\n        geometry = geometries[_i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'LineString') {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'Polygon') {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'GeometryCollection') {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      throw new Error('Unknown geometry type found');\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */multiGeometry;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n  var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    var point = new Point(flatCoordinates, 'XYZ');\n    point.setProperties(properties, true);\n    return point;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  var properties = pushParseAndPop(/** @type {Object<string,*>} */{}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n  var flatLinearRings = pushParseAndPop([null], FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    var flatCoordinates = flatLinearRings[0];\n    var ends = [flatCoordinates.length];\n    for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    var polygon = new Polygon(flatCoordinates, 'XYZ', ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  var styleObject = pushParseAndPop({}, STYLE_PARSERS, node, objectStack, this);\n  if (!styleObject) {\n    return null;\n  }\n  var fillStyle = /** @type {Fill} */\n\n  'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE;\n  var fill = /** @type {boolean|undefined} */styleObject['fill'];\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  var imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = /** @type {import(\"../style/Image.js\").default} */\n      styleObject['imageStyle'];\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  var textStyle = /** @type {Text} */\n\n  'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE;\n  var strokeStyle = /** @type {Stroke} */\n\n  'strokeStyle' in styleObject ? styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE;\n  var outline = /** @type {boolean|undefined} */styleObject['outline'];\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [new Style({\n      geometry: function geometry(feature) {\n        var geometry = feature.getGeometry();\n        var type = geometry.getType();\n        if (type === 'GeometryCollection') {\n          var collection = /** @type {import(\"../geom/GeometryCollection\").default} */\n          geometry;\n          return new GeometryCollection(collection.getGeometriesArrayRecursive().filter(function (geometry) {\n            var type = geometry.getType();\n            return type !== 'Polygon' && type !== 'MultiPolygon';\n          }));\n        }\n        if (type !== 'Polygon' && type !== 'MultiPolygon') {\n          return geometry;\n        }\n      },\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined // FIXME\n    }), new Style({\n      geometry: function geometry(feature) {\n        var geometry = feature.getGeometry();\n        var type = geometry.getType();\n        if (type === 'GeometryCollection') {\n          var collection = /** @type {import(\"../geom/GeometryCollection\").default} */\n          geometry;\n          return new GeometryCollection(collection.getGeometriesArrayRecursive().filter(function (geometry) {\n            var type = geometry.getType();\n            return type === 'Polygon' || type === 'MultiPolygon';\n          }));\n        }\n        if (type === 'Polygon' || type === 'MultiPolygon') {\n          return geometry;\n        }\n      },\n      fill: fillStyle,\n      stroke: null,\n      zIndex: undefined // FIXME\n    })];\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  var ii = geometries.length;\n  var extrudes = new Array(geometries.length);\n  var tessellates = new Array(geometries.length);\n  var altitudeModes = new Array(geometries.length);\n  var hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (var i = 0; i < ii; ++i) {\n    var geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  var name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  var featureObject = /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function toString() {\n        return featureObject.value;\n      }\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  var pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  var key = /** @type {string|undefined} */pairObject['key'];\n  if (key && key == 'normal') {\n    var styleUrl = /** @type {string|undefined} */pairObject['styleUrl'];\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    var style = /** @type {Style} */pairObject['Style'];\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  var placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    throw new Error('`styleMapValue` has an unknown type');\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (name !== null) {\n    var data = readString(node);\n    var featureObject = /** @type {Object} */\n    objectStack[objectStack.length - 1];\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var regionObject = /** @type {Object} */\n  objectStack[objectStack.length - 1];\n  var extent = [parseFloat(object['west']), parseFloat(object['south']), parseFloat(object['east']), parseFloat(object['north'])];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var lodObject = /** @type {Object} */objectStack[objectStack.length - 1];\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  var innerBoundaryFlatLinearRings = pushParseAndPop(/** @type {Array<Array<number>>} */[], INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    var flatLinearRings = /** @type {Array<Array<number>>} */\n    objectStack[objectStack.length - 1];\n    flatLinearRings.push.apply(flatLinearRings, _toConsumableArray(innerBoundaryFlatLinearRings));\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  var flatLinearRing = pushParseAndPop(undefined, OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array<Array<number>>} */\n    objectStack[objectStack.length - 1];\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  var gxTrackObject = /** @type {GxTrackObject} */\n  objectStack[objectStack.length - 1];\n  var whens = gxTrackObject.whens;\n  var s = getAllTextContent(node, false);\n  var when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  var rgba = asArray(color);\n  var opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (var i = 0; i < 4; ++i) {\n    var hex = Math.floor(/** @type {number} */abgr[i]).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var layout = context['layout'];\n  var stride = context['stride'];\n  var dimension;\n  if (layout == 'XY' || layout == 'XYM') {\n    dimension = 2;\n  } else if (layout == 'XYZ' || layout == 'XYZM') {\n    dimension = 3;\n  } else {\n    throw new Error('Invalid geometry layout');\n  }\n  var ii = coordinates.length;\n  var text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (var d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (var i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (var _d = 1; _d < dimension; ++_d) {\n        text += ',' + coordinates[i + _d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName)\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  var /** @type {import(\"../xml.js\").NodeStackItem} */context = {\n    node: node\n  };\n  var value = pair.value;\n  if (_typeof(value) == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n    if (value !== null && value.value) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark)\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nvar DOCUMENT_NODE_FACTORY = function DOCUMENT_NODE_FACTORY(value, objectStack, nodeName) {\n  var parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */context = {\n    node: node\n  };\n  pushSerializeAndPop(context, DOCUMENT_SERIALIZERS, DOCUMENT_NODE_FACTORY, features, objectStack, undefined, this);\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */context = {\n    node: node\n  };\n  var names = namesAndValues.names;\n  var values = namesAndValues.values;\n  var length = names.length;\n  for (var i = 0; i < length; i++) {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, DATA_NODE_FACTORY, [{\n      name: names[i],\n      value: values[i]\n    }], objectStack);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar ICON_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['href'], makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h']));\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar ICON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeChildAppender(writeStringTextNode)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n  'x': makeChildAppender(writeDecimalTextNode),\n  'y': makeChildAppender(writeDecimalTextNode),\n  'w': makeChildAppender(writeDecimalTextNode),\n  'h': makeChildAppender(writeDecimalTextNode)\n}));\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nvar GX_NODE_FACTORY = function GX_NODE_FACTORY(value, objectStack, nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */context = {\n    node: node\n  };\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS, GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['scale', 'heading', 'Icon', 'color', 'hotSpot']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode)\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */context = {\n    node: node\n  };\n  var /** @type {Object<string, any>} */properties = {};\n  var src = style.getSrc();\n  var size = style.getSize();\n  var iconImageSize = style.getImageSize();\n  var iconProperties = {\n    'href': src\n  };\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    var anchor = style.getAnchor(); // top-left\n    var origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      var /** @type {Vec2} */hotSpot = {\n        x: anchor[0],\n        xunits: 'pixels',\n        y: size[1] - anchor[1],\n        yunits: 'pixels'\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n  properties['Icon'] = iconProperties;\n  var scale = style.getScaleArray()[0];\n  var imageSize = size;\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n  if (imageSize.length == 2) {\n    var resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n  var rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n  var color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'scale']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */context = {\n    node: node\n  };\n  var properties = {};\n  var fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  var scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */context = {\n    node: node\n  };\n  var properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1\n  };\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nvar GEOMETRY_NODE_FACTORY = function GEOMETRY_NODE_FACTORY(value, objectStack, nodeName) {\n  if (value) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI, GEOMETRY_TYPE_TO_NODENAME[/** @type {import(\"../geom/Geometry.js\").default} */value.getType()]);\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry)\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var context = {\n    node: node\n  };\n  var type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  var geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  var factory;\n  if (type === 'GeometryCollection') {\n    /** @type {GeometryCollection} */geometry.getGeometriesArrayRecursive().forEach(function (geometry) {\n      var type = geometry.getType();\n      if (type === 'MultiPoint') {\n        geometries = geometries.concat(/** @type {MultiPoint} */geometry.getPoints());\n      } else if (type === 'MultiLineString') {\n        geometries = geometries.concat(/** @type {MultiLineString} */geometry.getLineStrings());\n      } else if (type === 'MultiPolygon') {\n        geometries = geometries.concat(/** @type {MultiPolygon} */geometry.getPolygons());\n      } else if (type === 'Point' || type === 'LineString' || type === 'Polygon') {\n        geometries.push(geometry);\n      } else {\n        throw new Error('Unknown geometry type');\n      }\n    });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === 'MultiPoint') {\n    geometries = /** @type {MultiPoint} */geometry.getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === 'MultiLineString') {\n    geometries = /** @type {MultiLineString} */geometry.getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === 'MultiPolygon') {\n    geometries = /** @type {MultiPolygon} */geometry.getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    throw new Error('Unknown geometry type');\n  }\n  pushSerializeAndPop(context, MULTI_GEOMETRY_SERIALIZERS, factory, geometries, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry)\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */context = {\n    node: node\n  };\n  pushSerializeAndPop(context, BOUNDARY_IS_SERIALIZERS, LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode)\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['name', 'open', 'visibility', 'address', 'phoneNumber', 'description', 'styleUrl', 'Style']);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */context = {\n    node: node\n  };\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  var filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1\n  };\n  filter[feature.getGeometryName()] = 1;\n  var keys = Object.keys(properties || {}).sort().filter(function (v) {\n    return !filter[v];\n  });\n  var styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    var styles = styleFunction(feature, 0);\n    if (styles) {\n      var styleArray = Array.isArray(styles) ? styles : [styles];\n      var pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          var geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            var type = geometry.getType();\n            if (type === 'GeometryCollection') {\n              return /** @type {GeometryCollection} */geometry.getGeometriesArrayRecursive().filter(function (geometry) {\n                var type = geometry.getType();\n                return type === 'Point' || type === 'MultiPoint';\n              }).length;\n            }\n            return type === 'Point' || type === 'MultiPoint';\n          }\n        });\n        'Point';\n      }\n      if (this.writeStyles_) {\n        var lineStyles = styleArray;\n        var polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            var geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              var type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */geometry.getGeometriesArrayRecursive().filter(function (geometry) {\n                  var type = geometry.getType();\n                  return type === 'LineString' || type === 'MultiLineString';\n                }).length;\n              }\n              return type === 'LineString' || type === 'MultiLineString';\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            var geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              var type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */geometry.getGeometriesArrayRecursive().filter(function (geometry) {\n                  var type = geometry.getType();\n                  return type === 'Polygon' || type === 'MultiPolygon';\n                }).length;\n              }\n              return type === 'Polygon' || type === 'MultiPolygon';\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        var textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n  if (keys.length > 0) {\n    var sequence = makeSequence(properties, keys);\n    var namesAndValues = {\n      names: keys,\n      values: sequence\n    };\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n  }\n\n  // serialize geometry\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */\n  objectStack[0];\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['extrude', 'tessellate', 'altitudeMode', 'coordinates']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode)\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var /** @type {import(\"../xml.js\").NodeStackItem} */context = {\n    node: node\n  };\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'fill', 'outline']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs)\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  var linearRings = polygon.getLinearRings();\n  var outerRing = linearRings.shift();\n  var /** @type {import(\"../xml.js\").NodeStackItem} */context = {\n    node: node\n  };\n  // inner rings\n  pushSerializeAndPop(context, POLYGON_SERIALIZERS, INNER_BOUNDARY_NODE_FACTORY, linearRings, objectStack);\n  // outer ring\n  pushSerializeAndPop(context, POLYGON_SERIALIZERS, OUTER_BOUNDARY_NODE_FACTORY, [outerRing], objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */context = {\n    node: node\n  };\n  var fill = style.getFill();\n  var stroke = style.getStroke();\n  var properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false\n  };\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */context = {\n    node: node\n  };\n  var properties = {};\n  if (styles.pointStyles.length) {\n    var textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    var imageStyle = styles.pointStyles[0].getImage();\n    if (imageStyle && typeof (/** @type {?} */imageStyle.getSrc) === 'function') {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    var strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    var _strokeStyle = styles.polyStyles[0].getStroke();\n    if (_strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = _strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\nexport default KML;","map":{"version":3,"names":["Feature","Fill","GeometryCollection","Icon","ImageState","LineString","MultiLineString","MultiPoint","MultiPolygon","Point","Polygon","Stroke","Style","Text","XMLFeature","OBJECT_PROPERTY_NODE_FACTORY","XML_SCHEMA_INSTANCE_URI","createElementNS","getAllTextContent","isDocument","makeArrayExtender","makeArrayPusher","makeChildAppender","makeObjectPropertySetter","makeReplacer","makeSequence","makeSimpleNodeFactory","makeStructureNS","parse","parseNode","pushParseAndPop","pushSerializeAndPop","asArray","extend","get","getProjection","readBoolean","readDecimal","readString","writeBooleanTextNode","writeCDATASection","writeDecimalTextNode","writeStringTextNode","toRadians","transformGeometryWithOptions","GX_NAMESPACE_URIS","NAMESPACE_URIS","SCHEMA_LOCATION","ICON_ANCHOR_UNITS_MAP","PLACEMARK_PARSERS","extendedDataParser","regionParser","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","placemarkStyleMapParser","readStyleURL","readGxMultiTrack","readGxTrack","NETWORK_LINK_PARSERS","linkParser","LINK_PARSERS","readURI","CAMERA_PARSERS","Altitude","Longitude","Latitude","Tilt","AltitudeMode","Heading","Roll","REGION_PARSERS","latLonAltBoxParser","lodParser","KML_SEQUENCE","KML_SERIALIZERS","writeDocument","writePlacemark","DEFAULT_COLOR","DEFAULT_FILL_STYLE","getDefaultFillStyle","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_STYLE","getDefaultImageStyle","DEFAULT_NO_IMAGE_STYLE","DEFAULT_STROKE_STYLE","getDefaultStrokeStyle","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_TEXT_STYLE","getDefaultTextStyle","DEFAULT_STYLE","getDefaultStyle","DEFAULT_STYLE_ARRAY","getDefaultStyleArray","scaleForSize","size","Math","min","createStyleDefaults","color","anchor","anchorOrigin","anchorXUnits","anchorYUnits","crossOrigin","rotation","scale","src","width","font","fill","stroke","image","text","zIndex","TEXTAREA","defaultIconUrlFunction","href","KML","_XMLFeature","options","_this","_classCallCheck","_callSuper","dataProjection","defaultStyle_","defaultStyle","extractStyles_","extractStyles","undefined","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","crossOrigin_","iconUrlFunction_","iconUrlFunction","supportedMediaTypes","_inherits","_createClass","key","value","readDocumentOrFolder_","node","objectStack","parsersNS","readPlacemark_","readSharedStyle_","bind","readSharedStyleMap_","features","object","feature","id","getAttribute","setId","geometry","setGeometry","style","styleUrl","styleFunction","createFeatureStyleFunction","setStyle","setProperties","call","styleUri","baseURI","window","location","url","URL","styleMapValue","readStyleMapValue","readFeatureFromNode","includes","namespaceURI","getReadOptions","readFeaturesFromNode","localName","n","firstElementChild","nextElementSibling","fs","readName","source","doc","readNameFromDocument","readNameFromNode","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","name","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","obj","push","readRegion","regions","readRegionFromDocument","readRegionFromNode","readCamera","cameras","readCameraFromDocument","readCameraFromNode","writeFeaturesNode","adaptOptions","kml","xmlnsUri","setAttributeNS","context","properties","length","orderedKeys","values","createNameStyleFunction","foundStyle","textOffset","textAlign","imageStyle","getImage","imageSize","getSize","imageScale","getScaleArray","getAnchor","textStyle","getText","clone","setFont","getFont","setScale","getScale","setFill","getFill","setStroke","getStroke","setText","setOffsetX","setOffsetY","setTextAlign","nameStyle","sharedStyles","resolution","drawName","multiGeometryPoints","getGeometry","getGeometriesArrayRecursive","filter","type","getType","test","document","createElement","innerHTML","featureStyle","findStyle","baseStyle","concat","slice","styleValue","Array","isArray","readColor","s","m","exec","hexColor","parseInt","substr","readFlatCoordinates","flatCoordinates","replace","re","x","parseFloat","y","z","trim","readVec2","xunits","yunits","origin","readScale","STYLE_MAP_PARSERS","pairDataParser","ICON_STYLE_PARSERS","readIcon","iconStyleParser","styleObject","IconObject","drawIcon","Object","keys","hotSpot","offset","w","h","heading","offsetOrigin","imageState","getImageState","IDLE","LOADING","listener","resizeScale","unlistenImageChange","listenImageChange","load","LABEL_STYLE_PARSERS","labelStyleParser","LINE_STYLE_PARSERS","lineStyleParser","strokeStyle","POLY_STYLE_PARSERS","polyStyleParser","fillStyle","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","gxCoordParser","gxTrackObject","coordinates","GX_MULTITRACK_GEOMETRY_PARSERS","lineStrings","GX_TRACK_PARSERS","whenParser","whens","i","ii","ICON_PARSERS","iconObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","lineString","polygon","MULTI_GEOMETRY_PARSERS","geometries","multiGeometry","homogeneous","layout","point","getLayout","getFlatCoordinates","setCommonGeometryProperties","Error","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIsParser","outerBoundaryIsParser","flatLinearRings","ends","STYLE_PARSERS","collection","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","set","DATA_PARSERS","dataParser","featureObject","displayName","toString","EXTENDED_DATA_PARSERS","schemaDataParser","PAIR_PARSERS","pairObject","placemarkObject","SCHEMA_DATA_PARSERS","simpleDataParser","data","LAT_LON_ALT_BOX_PARSERS","regionObject","extent","LOD_PARSERS","lodObject","INNER_BOUNDARY_IS_PARSERS","innerBoundaryFlatLinearRings","apply","_toConsumableArray","OUTER_BOUNDARY_IS_PARSERS","flatLinearRing","when","Date","isNaN","writeColorTextNode","rgba","opacity","abgr","hex","floor","join","writeCoordinatesTextNode","stride","dimension","d","EXTENDEDDATA_NODE_SERIALIZERS","writeDataNode","writeDataNodeValue","writeDataNodeName","pair","setAttribute","_typeof","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","nodeName","parentNode","DATA_NODE_FACTORY","writeExtendedData","namesAndValues","names","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","writeIcon","icon","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","writeVec2","writeScaleTextNode","writeIconStyle","getSrc","iconImageSize","getImageSize","iconProperties","getOrigin","getRotation","getColor","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","writeLabelStyle","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","writeLineStyle","Number","getWidth","GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","forEach","getPoints","getLineStrings","getPolygons","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","linearRing","PLACEMARK_SERIALIZERS","writeStyle","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","getId","getProperties","getGeometryName","sort","v","getStyleFunction","styles","styleArray","pointStyles","getGeometryFunction","lineStyles","polyStyles","sequence","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","getStride","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","linearRings","getLinearRings","outerRing","shift","POLY_STYLE_SERIALIZERS","writePolyStyle","round","STYLE_SEQUENCE","STYLE_SERIALIZERS","vec2","String"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/format/KML.js"],"sourcesContent":["/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport Icon from '../style/Icon.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': 'fraction',\n  'pixels': 'pixels',\n  'insetPixels': 'pixels',\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAMERA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  Altitude: makeObjectPropertySetter(readDecimal),\n  Longitude: makeObjectPropertySetter(readDecimal),\n  Latitude: makeObjectPropertySetter(readDecimal),\n  Tilt: makeObjectPropertySetter(readDecimal),\n  AltitudeMode: makeObjectPropertySetter(readString),\n  Heading: makeObjectPropertySetter(readDecimal),\n  Roll: makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill|null}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke|null}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text|null}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style|null}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: 'bottom-left',\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n\n    this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n      objectStack[0]\n    );\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, options),\n    ]);\n    if (feature) {\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        return features;\n      }\n      return [];\n    }\n    if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (feature) {\n        return [feature];\n      }\n      return [];\n    }\n    if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readNameFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source))\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n))\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @typedef {Object} KMLCamera Specifies the observer's viewpoint and associated view parameters.\n   * @property {number} [Latitude] Latitude of the camera.\n   * @property {number} [Longitude] Longitude of the camera.\n   * @property {number} [Altitude] Altitude of the camera.\n   * @property {string} [AltitudeMode] Floor-related altitude mode.\n   * @property {number} [Heading] Horizontal camera rotation.\n   * @property {number} [Tilt] Lateral camera rotation.\n   * @property {number} [Roll] Vertical camera rotation.\n   */\n\n  /**\n   * Read the cameras of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCamera(source) {\n    const cameras = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(cameras, this.readCameraFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        cameras,\n        this.readCameraFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(cameras, this.readCameraFromNode(/** @type {Element} */ (source)));\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<KMLCamera>} Cameras.\n   */\n  readCameraFromDocument(doc) {\n    const cameras = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        extend(cameras, this.readCameraFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCameraFromNode(node) {\n    const cameras = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName === 'Camera') {\n        const obj = pushParseAndPop({}, CAMERA_PARSERS, n, []);\n        cameras.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName === 'Document' ||\n          localName === 'Folder' ||\n          localName === 'Placemark' ||\n          localName === 'kml')\n      ) {\n        extend(cameras, this.readCameraFromNode(n));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [options],\n      orderedKeys,\n      this\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  /** @type {CanvasTextAlign} */\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    const imageSize = imageStyle.getSize();\n    if (imageSize && imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      const anchor = imageStyle.getAnchor();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          if (geometry instanceof GeometryCollection) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return type === 'Point' || type === 'MultiPoint';\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            const type = geometry.getType();\n            drawName = type === 'Point' || type === 'MultiPoint';\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && /&[^&]+;/.test(name)) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  }\n  if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  }\n  return defaultStyle;\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re =\n    /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  /** @type {import('../style/Icon.js').IconOrigin} */\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-left';\n    } else {\n      origin = 'top-left';\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-right';\n    } else {\n      origin = 'top-right';\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  /** @type {import('../style/Icon.js').IconOrigin|undefined} */\n  let anchorOrigin = 'bottom-left';\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (src.includes('pushpin')) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('arrow-reverse')) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('paddle')) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  const scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: 'bottom-left',\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n\n    const imageScale = imageStyle.getScaleArray()[0];\n    const imageSize = imageStyle.getSize();\n    if (imageSize === null) {\n      const imageState = imageStyle.getImageState();\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        const listener = function () {\n          const imageState = imageStyle.getImageState();\n          if (\n            !(\n              imageState === ImageState.IDLE ||\n              imageState === ImageState.LOADING\n            )\n          ) {\n            const imageSize = imageStyle.getSize();\n            if (imageSize && imageSize.length == 2) {\n              const resizeScale = scaleForSize(imageSize);\n              imageStyle.setScale(imageScale * resizeScale);\n            }\n            imageStyle.unlistenImageChange(listener);\n          }\n        };\n        imageStyle.listenImageChange(listener);\n        if (imageState === ImageState.IDLE) {\n          imageStyle.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      const resizeScale = scaleForSize(imageSize);\n      imageStyle.setScale(imageScale * resizeScale);\n    }\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const coordinates = gxTrackObject.coordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n    /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      coordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = [];\n  const coordinates = gxTrackObject.coordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(coordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(\n        coordinates[i][0],\n        coordinates[i][1],\n        coordinates[i][2],\n        whens[i]\n      );\n    }\n  }\n  return new LineString(flatCoordinates, 'XYZM');\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  }\n  return null;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, 'XYZ');\n    lineString.setProperties(properties, true);\n    return lineString;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, 'XYZ', [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == 'Point') {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'LineString') {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'Polygon') {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'GeometryCollection') {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      throw new Error('Unknown geometry type found');\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, 'XYZ');\n    point.setProperties(properties, true);\n    return point;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, 'XYZ', ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    (\n      'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE\n    );\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = /** @type {import(\"../style/Image.js\").default} */ (\n        styleObject['imageStyle']\n      );\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    (\n      'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE\n    );\n  const strokeStyle =\n    /** @type {Stroke} */\n    (\n      'strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE\n    );\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type !== 'Polygon' && type !== 'MultiPolygon';\n                })\n            );\n          }\n          if (type !== 'Polygon' && type !== 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Polygon' || type === 'MultiPolygon';\n                })\n            );\n          }\n          if (type === 'Polygon' || type === 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    throw new Error('`styleMapValue` has an unknown type');\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  const innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]),\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(...innerBoundaryFlatLinearRings);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == 'XY' || layout == 'XYM') {\n    dimension = 2;\n  } else if (layout == 'XYZ' || layout == 'XYZM') {\n    dimension = 3;\n  } else {\n    throw new Error('Invalid geometry layout');\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName']\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value']\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value']\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h'])\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  })\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: 'pixels',\n          y: size[1] - anchor[1],\n          yunits: 'pixels',\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  let scale = style.getScaleArray()[0];\n  let imageSize = size;\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n  if (imageSize.length == 2) {\n    const resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ]\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === 'GeometryCollection') {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === 'MultiPoint') {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints()\n          );\n        } else if (type === 'MultiLineString') {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings()\n          );\n        } else if (type === 'MultiPolygon') {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons()\n          );\n        } else if (\n          type === 'Point' ||\n          type === 'LineString' ||\n          type === 'Polygon'\n        ) {\n          geometries.push(geometry);\n        } else {\n          throw new Error('Unknown geometry type');\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === 'MultiPoint') {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === 'MultiLineString') {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === 'MultiPolygon') {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    throw new Error('Unknown geometry type');\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === 'GeometryCollection') {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Point' || type === 'MultiPoint';\n                }).length;\n            }\n            return type === 'Point' || type === 'MultiPoint';\n          }\n        });\n        ('Point');\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'LineString' || type === 'MultiLineString';\n                  }).length;\n              }\n              return type === 'LineString' || type === 'MultiLineString';\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'Polygon' || type === 'MultiPolygon';\n                  }).length;\n              }\n              return type === 'Polygon' || type === 'MultiPolygon';\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}