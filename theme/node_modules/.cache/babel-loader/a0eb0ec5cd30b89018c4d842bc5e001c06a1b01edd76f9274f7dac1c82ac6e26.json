{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _superPropGet from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/superPropGet.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\n/**\n * @module ol/source/ImageMapGuide\n */\n\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport { createLoader } from './mapguide.js';\nimport { decode } from '../Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object} [params] Additional parameters.\n */\n\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageMapGuide = /*#__PURE__*/function (_ImageSource) {\n  /**\n   * @param {Options} options ImageMapGuide options.\n   */\n  function ImageMapGuide(options) {\n    var _this;\n    _classCallCheck(this, ImageMapGuide);\n    _this = _callSuper(this, ImageMapGuide, [{\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions\n    }]);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    _this.crossOrigin_ = options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.displayDpi_ = options.displayDpi !== undefined ? options.displayDpi : 96;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    _this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    _this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ? options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.metersPerUnit_ = options.metersPerUnit !== undefined ? options.metersPerUnit : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.useOverlay_ = options.useOverlay !== undefined ? options.useOverlay : false;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    _this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    _this.loaderProjection_ = null;\n    return _this;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  _inherits(ImageMapGuide, _ImageSource);\n  return _createClass(ImageMapGuide, [{\n    key: \"getParams\",\n    value: function getParams() {\n      return this.params_;\n    }\n\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../Image.js\").default} Single image.\n     */\n  }, {\n    key: \"getImageInternal\",\n    value: function getImageInternal(extent, resolution, pixelRatio, projection) {\n      var _this2 = this;\n      if (this.url_ === undefined) {\n        return null;\n      }\n      if (!this.loader || this.loaderProjection_ !== projection) {\n        // Lazily create loader to pick up the view projection and to allow `params` updates\n        this.loaderProjection_ = projection;\n        this.loader = createLoader({\n          crossOrigin: this.crossOrigin_,\n          params: this.params_,\n          hidpi: this.hidpi_,\n          metersPerUnit: this.metersPerUnit_,\n          url: this.url_,\n          useOverlay: this.useOverlay_,\n          ratio: this.ratio_,\n          load: function load(image, src) {\n            _this2.image.setImage(image);\n            _this2.imageLoadFunction_(_this2.image, src);\n            return decode(image);\n          }\n        });\n      }\n      return _superPropGet(ImageMapGuide, \"getImageInternal\", this, 3)([extent, resolution, pixelRatio, projection]);\n    }\n\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n  }, {\n    key: \"getImageLoadFunction\",\n    value: function getImageLoadFunction() {\n      return this.imageLoadFunction_;\n    }\n\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n  }, {\n    key: \"updateParams\",\n    value: function updateParams(params) {\n      Object.assign(this.params_, params);\n      this.changed();\n    }\n\n    /**\n     * Set the image load function of the MapGuide source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n  }, {\n    key: \"setImageLoadFunction\",\n    value: function setImageLoadFunction(imageLoadFunction) {\n      this.image_ = null;\n      this.imageLoadFunction_ = imageLoadFunction;\n      this.changed();\n    }\n  }]);\n}(ImageSource);\nexport default ImageMapGuide;","map":{"version":3,"names":["ImageSource","defaultImageLoadFunction","createLoader","decode","ImageMapGuide","_ImageSource","options","_this","_classCallCheck","_callSuper","interpolate","projection","resolutions","crossOrigin_","crossOrigin","undefined","displayDpi_","displayDpi","params_","params","url_","url","imageLoadFunction_","imageLoadFunction","hidpi_","hidpi","metersPerUnit_","metersPerUnit","ratio_","ratio","useOverlay_","useOverlay","image_","renderedRevision_","loaderProjection_","_inherits","_createClass","key","value","getParams","getImageInternal","extent","resolution","pixelRatio","_this2","loader","load","image","src","setImage","_superPropGet","getImageLoadFunction","updateParams","Object","assign","changed","setImageLoadFunction"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/source/ImageMapGuide.js"],"sourcesContent":["/**\n * @module ol/source/ImageMapGuide\n */\n\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {createLoader} from './mapguide.js';\nimport {decode} from '../Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object} [params] Additional parameters.\n */\n\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageMapGuide extends ImageSource {\n  /**\n   * @param {Options} options ImageMapGuide options.\n   */\n  constructor(options) {\n    super({\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.displayDpi_ =\n      options.displayDpi !== undefined ? options.displayDpi : 96;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.metersPerUnit_ =\n      options.metersPerUnit !== undefined ? options.metersPerUnit : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useOverlay_ =\n      options.useOverlay !== undefined ? options.useOverlay : false;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.loaderProjection_ = null;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n    if (!this.loader || this.loaderProjection_ !== projection) {\n      // Lazily create loader to pick up the view projection and to allow `params` updates\n      this.loaderProjection_ = projection;\n      this.loader = createLoader({\n        crossOrigin: this.crossOrigin_,\n        params: this.params_,\n        hidpi: this.hidpi_,\n        metersPerUnit: this.metersPerUnit_,\n        url: this.url_,\n        useOverlay: this.useOverlay_,\n        ratio: this.ratio_,\n        load: (image, src) => {\n          this.image.setImage(image);\n          this.imageLoadFunction_(this.image, src);\n          return decode(image);\n        },\n      });\n    }\n\n    return super.getImageInternal(extent, resolution, pixelRatio, projection);\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.changed();\n  }\n\n  /**\n   * Set the image load function of the MapGuide source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n}\n\nexport default ImageMapGuide;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}