{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _superPropGet from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/superPropGet.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.slice.js\";\n/**\n * @module ol/reproj/Image\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport { fromResolutionLike } from '../resolution.js';\nimport { getCenter, getHeight, getIntersection, getWidth, isEmpty } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /*#__PURE__*/function (_ImageWrapper) {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction, interpolate) {\n    var _this;\n    _classCallCheck(this, ReprojImage);\n    var maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    var maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n    var limitedTargetExtent = maxTargetExtent ? getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    var errorThresholdInPixels = ERROR_THRESHOLD;\n    var triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n    var sourceExtent = triangulation.calculateSourceExtent();\n    var sourceImage = isEmpty(sourceExtent) ? null : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    var state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n    _this = _callSuper(this, ReprojImage, [targetExtent, targetResolution, sourcePixelRatio, state]);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    _this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    _this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    _this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    _this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    _this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    _this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    _this.sourceListenerKey_ = null;\n    return _this;\n  }\n\n  /**\n   * Clean up.\n   */\n  _inherits(ReprojImage, _ImageWrapper);\n  return _createClass(ReprojImage, [{\n    key: \"disposeInternal\",\n    value: function disposeInternal() {\n      if (this.state == ImageState.LOADING) {\n        this.unlistenSource_();\n      }\n      _superPropGet(ReprojImage, \"disposeInternal\", this, 3)([]);\n    }\n\n    /**\n     * @return {HTMLCanvasElement} Image.\n     */\n  }, {\n    key: \"getImage\",\n    value: function getImage() {\n      return this.canvas_;\n    }\n\n    /**\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n  }, {\n    key: \"getProjection\",\n    value: function getProjection() {\n      return this.targetProj_;\n    }\n\n    /**\n     * @private\n     */\n  }, {\n    key: \"reproject_\",\n    value: function reproject_() {\n      var sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED) {\n        var width = getWidth(this.targetExtent_) / this.targetResolution_;\n        var height = getHeight(this.targetExtent_) / this.targetResolution_;\n        this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, fromResolutionLike(this.sourceImage_.getResolution()), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n          extent: this.sourceImage_.getExtent(),\n          image: this.sourceImage_.getImage()\n        }], 0, undefined, this.interpolate_, true);\n      }\n      this.state = sourceState;\n      this.changed();\n    }\n\n    /**\n     * Load not yet loaded URI.\n     */\n  }, {\n    key: \"load\",\n    value: function load() {\n      if (this.state == ImageState.IDLE) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        var sourceState = this.sourceImage_.getState();\n        if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n          this.reproject_();\n        } else {\n          this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          }, this);\n          this.sourceImage_.load();\n        }\n      }\n    }\n\n    /**\n     * @private\n     */\n  }, {\n    key: \"unlistenSource_\",\n    value: function unlistenSource_() {\n      unlistenByKey(/** @type {!import(\"../events.js\").EventsKey} */this.sourceListenerKey_);\n      this.sourceListenerKey_ = null;\n    }\n  }]);\n}(ImageWrapper);\nexport default ReprojImage;","map":{"version":3,"names":["ERROR_THRESHOLD","EventType","ImageState","ImageWrapper","Triangulation","calculateSourceResolution","render","renderReprojected","fromResolutionLike","getCenter","getHeight","getIntersection","getWidth","isEmpty","listen","unlistenByKey","ReprojImage","_ImageWrapper","sourceProj","targetProj","targetExtent","targetResolution","pixelRatio","getImageFunction","interpolate","_this","_classCallCheck","maxSourceExtent","getExtent","canWrapX","slice","Infinity","maxTargetExtent","limitedTargetExtent","targetCenter","sourceResolution","errorThresholdInPixels","triangulation","sourceExtent","calculateSourceExtent","sourceImage","state","IDLE","EMPTY","sourcePixelRatio","getPixelRatio","_callSuper","targetProj_","maxSourceExtent_","triangulation_","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","interpolate_","canvas_","sourceListenerKey_","_inherits","_createClass","key","value","disposeInternal","LOADING","unlistenSource_","_superPropGet","getImage","getProjection","reproject_","sourceState","getState","LOADED","width","height","getResolution","extent","image","undefined","changed","load","ERROR","CHANGE","e"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/reproj/Image.js"],"sourcesContent":["/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_,\n        true\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}