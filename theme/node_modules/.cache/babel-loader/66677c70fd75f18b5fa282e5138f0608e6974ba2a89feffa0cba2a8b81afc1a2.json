{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.slice.js\";\n/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { containsXY, createOrUpdateFromCoordinate } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*#__PURE__*/function (_SimpleGeometry) {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  function Point(coordinates, layout) {\n    var _this;\n    _classCallCheck(this, Point);\n    _this = _callSuper(this, Point);\n    _this.setCoordinates(coordinates, layout);\n    return _this;\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  _inherits(Point, _SimpleGeometry);\n  return _createClass(Point, [{\n    key: \"clone\",\n    value: function clone() {\n      var point = new Point(this.flatCoordinates.slice(), this.layout);\n      point.applyProperties(this);\n      return point;\n    }\n\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n  }, {\n    key: \"closestPointXY\",\n    value: function closestPointXY(x, y, closestPoint, minSquaredDistance) {\n      var flatCoordinates = this.flatCoordinates;\n      var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n      if (squaredDistance < minSquaredDistance) {\n        var stride = this.stride;\n        for (var i = 0; i < stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n        closestPoint.length = stride;\n        return squaredDistance;\n      }\n      return minSquaredDistance;\n    }\n\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @api\n     */\n  }, {\n    key: \"getCoordinates\",\n    value: function getCoordinates() {\n      return this.flatCoordinates.slice();\n    }\n\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n  }, {\n    key: \"computeExtent\",\n    value: function computeExtent(extent) {\n      return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    }\n\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./Geometry.js\").Type} Geometry type.\n     * @api\n     */\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return 'Point';\n    }\n\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n  }, {\n    key: \"intersectsExtent\",\n    value: function intersectsExtent(extent) {\n      return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    }\n\n    /**\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n     * @api\n     */\n  }, {\n    key: \"setCoordinates\",\n    value: function setCoordinates(coordinates, layout) {\n      this.setLayout(layout, coordinates, 0);\n      if (!this.flatCoordinates) {\n        this.flatCoordinates = [];\n      }\n      this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n      this.changed();\n    }\n  }]);\n}(SimpleGeometry);\nexport default Point;","map":{"version":3,"names":["SimpleGeometry","containsXY","createOrUpdateFromCoordinate","deflateCoordinate","squaredDistance","squaredDx","Point","_SimpleGeometry","coordinates","layout","_this","_classCallCheck","_callSuper","setCoordinates","_inherits","_createClass","key","value","clone","point","flatCoordinates","slice","applyProperties","closestPointXY","x","y","closestPoint","minSquaredDistance","stride","i","length","getCoordinates","computeExtent","extent","getType","intersectsExtent","setLayout","changed"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/geom/Point.js"],"sourcesContent":["/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}