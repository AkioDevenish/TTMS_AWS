{"ast":null,"code":"import _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\n/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n * @api\n */\nvar NotEqualTo = /*#__PURE__*/function (_ComparisonBinary) {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean} [matchCase] Case-sensitive?\n   */\n  function NotEqualTo(propertyName, expression, matchCase) {\n    _classCallCheck(this, NotEqualTo);\n    return _callSuper(this, NotEqualTo, ['PropertyIsNotEqualTo', propertyName, expression, matchCase]);\n  }\n  _inherits(NotEqualTo, _ComparisonBinary);\n  return _createClass(NotEqualTo);\n}(ComparisonBinary);\nexport default NotEqualTo;","map":{"version":3,"names":["ComparisonBinary","NotEqualTo","_ComparisonBinary","propertyName","expression","matchCase","_classCallCheck","_callSuper","_inherits","_createClass"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/format/filter/NotEqualTo.js"],"sourcesContent":["/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n * @api\n */\nclass NotEqualTo extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean} [matchCase] Case-sensitive?\n   */\n  constructor(propertyName, expression, matchCase) {\n    super('PropertyIsNotEqualTo', propertyName, expression, matchCase);\n  }\n}\n\nexport default NotEqualTo;\n"],"mappings":";;;;AAAA;AACA;AACA;AACA,OAAOA,gBAAgB,MAAM,uBAAuB;;AAEpD;AACA;AACA;AACA;AACA;AAJA,IAKMC,UAAU,0BAAAC,iBAAA;EACd;AACF;AACA;AACA;AACA;EACE,SAAAD,WAAYE,YAAY,EAAEC,UAAU,EAAEC,SAAS,EAAE;IAAAC,eAAA,OAAAL,UAAA;IAAA,OAAAM,UAAA,OAAAN,UAAA,GACzC,sBAAsB,EAAEE,YAAY,EAAEC,UAAU,EAAEC,SAAS;EACnE;EAACG,SAAA,CAAAP,UAAA,EAAAC,iBAAA;EAAA,OAAAO,YAAA,CAAAR,UAAA;AAAA,EARsBD,gBAAgB;AAWzC,eAAeC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}