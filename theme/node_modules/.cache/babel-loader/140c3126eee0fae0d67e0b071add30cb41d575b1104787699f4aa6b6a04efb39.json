{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _superPropGet from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/superPropGet.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.bind.js\";\n/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport { createCanvasContext2D, releaseCanvas } from './dom.js';\nimport { getUid } from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nvar canvasPool = [];\nvar VectorRenderTile = /*#__PURE__*/function (_Tile) {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  function VectorRenderTile(tileCoord, state, urlTileCoord, getSourceTiles) {\n    var _this;\n    _classCallCheck(this, VectorRenderTile);\n    _this = _callSuper(this, VectorRenderTile, [tileCoord, state, {\n      transition: 0\n    }]);\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    _this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    _this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    _this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    _this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    _this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    _this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    _this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    _this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    _this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    _this.getSourceTiles = getSourceTiles.bind(undefined, _this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    _this.wrappedTileCoord = urlTileCoord;\n    return _this;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  _inherits(VectorRenderTile, _Tile);\n  return _createClass(VectorRenderTile, [{\n    key: \"getContext\",\n    value: function getContext(layer) {\n      var key = getUid(layer);\n      if (!(key in this.context_)) {\n        this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n      }\n      return this.context_[key];\n    }\n\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {boolean} Tile has a rendering context for the given layer.\n     */\n  }, {\n    key: \"hasContext\",\n    value: function hasContext(layer) {\n      return getUid(layer) in this.context_;\n    }\n\n    /**\n     * Get the Canvas for this tile.\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n  }, {\n    key: \"getImage\",\n    value: function getImage(layer) {\n      return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n    }\n\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {ReplayState} The replay state.\n     */\n  }, {\n    key: \"getReplayState\",\n    value: function getReplayState(layer) {\n      var key = getUid(layer);\n      if (!(key in this.replayState_)) {\n        this.replayState_[key] = {\n          dirty: false,\n          renderedRenderOrder: null,\n          renderedResolution: NaN,\n          renderedRevision: -1,\n          renderedTileResolution: NaN,\n          renderedTileRevision: -1,\n          renderedTileZ: -1\n        };\n      }\n      return this.replayState_[key];\n    }\n\n    /**\n     * Load the tile.\n     */\n  }, {\n    key: \"load\",\n    value: function load() {\n      this.getSourceTiles();\n    }\n\n    /**\n     * Remove from the cache due to expiry\n     */\n  }, {\n    key: \"release\",\n    value: function release() {\n      for (var key in this.context_) {\n        var context = this.context_[key];\n        releaseCanvas(context);\n        canvasPool.push(context.canvas);\n        delete this.context_[key];\n      }\n      _superPropGet(VectorRenderTile, \"release\", this, 3)([]);\n    }\n  }]);\n}(Tile);\nexport default VectorRenderTile;","map":{"version":3,"names":["Tile","createCanvasContext2D","releaseCanvas","getUid","canvasPool","VectorRenderTile","_Tile","tileCoord","state","urlTileCoord","getSourceTiles","_this","_classCallCheck","_callSuper","transition","context_","executorGroups","declutterExecutorGroups","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","bind","undefined","wrappedTileCoord","_inherits","_createClass","key","value","getContext","layer","hasContext","getImage","canvas","getReplayState","dirty","renderedRenderOrder","renderedResolution","NaN","renderedRevision","renderedTileResolution","renderedTileRevision","renderedTileZ","load","release","context","push","_superPropGet"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/VectorRenderTile.js"],"sourcesContent":["/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}