{"ast":null,"code":"import _regeneratorRuntime from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\n/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport { addCoordinateTransforms, addEquivalentProjections, addProjection, createSafeCoordinateTransform, get } from '../proj.js';\nimport { get as getTransform } from './transforms.js';\n\n/**\n * @type {import(\"proj4\")|null}\n */\nvar registered = null;\n\n/**\n * @return {boolean} Proj4 has been registered.\n */\nexport function isRegistered() {\n  return !!registered;\n}\n\n/**\n * Unsets the shared proj4 previously set with register.\n */\nexport function unregister() {\n  registered = null;\n}\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {import(\"proj4\")} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  registered = proj4;\n  var projCodes = Object.keys(proj4.defs);\n  var len = projCodes.length;\n  var i, j;\n  for (i = 0; i < len; ++i) {\n    var code = projCodes[i];\n    if (!get(code)) {\n      var def = proj4.defs(code);\n      var units = /** @type {import(\"./Units.js\").Units} */def.units;\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    var code1 = projCodes[i];\n    var proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      var code2 = projCodes[j];\n      var proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          var transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, createSafeCoordinateTransform(proj1, proj2, transform.forward), createSafeCoordinateTransform(proj2, proj1, transform.inverse));\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */\nvar epsgLookup = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(code) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"https://epsg.io/\".concat(code, \".proj4\"));\n        case 2:\n          response = _context.sent;\n          if (response.ok) {\n            _context.next = 5;\n            break;\n          }\n          throw new Error(\"Unexpected response from epsg.io: \".concat(response.status));\n        case 5:\n          return _context.abrupt(\"return\", response.text());\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function epsgLookup(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n/**\n * Set the lookup function for getting proj4 definitions given an EPSG code.\n * By default, the {@link module:ol/proj/proj4.fromEPSGCode} function uses the\n * epsg.io website for proj4 definitions.  This can be changed by providing a\n * different lookup function.\n *\n * @param {function(number):Promise<string>} func The lookup function.\n * @api\n */\nexport function setEPSGLookup(func) {\n  epsgLookup = func;\n}\n\n/**\n * Get the current EPSG lookup function.\n *\n * @return {function(number):Promise<string>} The EPSG lookup function.\n */\nexport function getEPSGLookup() {\n  return epsgLookup;\n}\n\n/**\n * Get a projection from an EPSG code.  This function fetches the projection\n * definition from the epsg.io website, registers this definition for use with\n * proj4, and returns a configured projection.  You must call import proj4 and\n * call {@link module:ol/proj/proj4.register} before using this function.\n *\n * If the projection definition is already registered with proj4, it will not\n * be fetched again (so it is ok to call this function multiple times with the\n * same code).\n *\n * @param {number|string} code The EPSG code (e.g. 4326 or 'EPSG:4326').\n * @return {Promise<Projection>} The projection.\n * @api\n */\nexport function fromEPSGCode(_x2) {\n  return _fromEPSGCode.apply(this, arguments);\n}\n\n/**\n * Generate an EPSG lookup function which uses the MapTiler Coordinates API to find projection\n * definitions which do not require proj4 to be configured to handle `+nadgrids` parameters.\n * Call {@link module:ol/proj/proj4.setEPSGLookup} use the function for lookups\n * `setEPSGLookup(epsgLookupMapTiler('{YOUR_MAPTILER_API_KEY_HERE}'))`.\n *\n * @param {string} key MapTiler API key.  Get your own API key at https://www.maptiler.com/cloud/.\n * @return {function(number):Promise<string>} The EPSG lookup function.\n * @api\n */\nfunction _fromEPSGCode() {\n  _fromEPSGCode = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(code) {\n    var proj4, epsgCode;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          if (typeof code === 'string') {\n            code = parseInt(code.split(':').pop(), 10);\n          }\n          proj4 = registered;\n          if (proj4) {\n            _context3.next = 4;\n            break;\n          }\n          throw new Error('Proj4 must be registered first with register(proj4)');\n        case 4:\n          epsgCode = 'EPSG:' + code;\n          if (!proj4.defs(epsgCode)) {\n            _context3.next = 7;\n            break;\n          }\n          return _context3.abrupt(\"return\", get(epsgCode));\n        case 7:\n          _context3.t0 = proj4;\n          _context3.t1 = epsgCode;\n          _context3.next = 11;\n          return epsgLookup(code);\n        case 11:\n          _context3.t2 = _context3.sent;\n          _context3.t0.defs.call(_context3.t0, _context3.t1, _context3.t2);\n          register(proj4);\n          return _context3.abrupt(\"return\", get(epsgCode));\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _fromEPSGCode.apply(this, arguments);\n}\nexport function epsgLookupMapTiler(key) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(code) {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"https://api.maptiler.com/coordinates/search/code:\".concat(code, \".json?transformations=true&exports=true&key=\").concat(key));\n          case 2:\n            response = _context2.sent;\n            if (response.ok) {\n              _context2.next = 5;\n              break;\n            }\n            throw new Error(\"Unexpected response from maptiler.com: \".concat(response.status));\n          case 5:\n            return _context2.abrupt(\"return\", response.json().then(function (json) {\n              var results = json['results'];\n              if ((results === null || results === void 0 ? void 0 : results.length) > 0) {\n                var result = results.filter(function (r) {\n                  var _r$id, _r$id2;\n                  return ((_r$id = r['id']) === null || _r$id === void 0 ? void 0 : _r$id['authority']) === 'EPSG' && ((_r$id2 = r['id']) === null || _r$id2 === void 0 ? void 0 : _r$id2['code']) === code;\n                })[0];\n                if (result) {\n                  var _result$exports2;\n                  var transforms = result['transformations'];\n                  if ((transforms === null || transforms === void 0 ? void 0 : transforms.length) > 0) {\n                    var _transforms$filter$so;\n                    // use default transform if it does not require grids\n                    var defaultTransform = result['default_transformation'];\n                    if (transforms.filter(function (t) {\n                      var _t$id, _t$id2, _t$grids;\n                      return ((_t$id = t['id']) === null || _t$id === void 0 ? void 0 : _t$id['authority']) === (defaultTransform === null || defaultTransform === void 0 ? void 0 : defaultTransform['authority']) && ((_t$id2 = t['id']) === null || _t$id2 === void 0 ? void 0 : _t$id2['code']) === (defaultTransform === null || defaultTransform === void 0 ? void 0 : defaultTransform['code']) && ((_t$grids = t['grids']) === null || _t$grids === void 0 ? void 0 : _t$grids.length) === 0;\n                    }).length > 0) {\n                      var _result$exports;\n                      return (_result$exports = result['exports']) === null || _result$exports === void 0 ? void 0 : _result$exports['proj4'];\n                    }\n                    // otherwise use most accurate alternative without grids\n                    var transform = (_transforms$filter$so = transforms.filter(function (t) {\n                      var _t$grids2, _t$target_crs, _t$target_crs2;\n                      return ((_t$grids2 = t['grids']) === null || _t$grids2 === void 0 ? void 0 : _t$grids2.length) === 0 && ((_t$target_crs = t['target_crs']) === null || _t$target_crs === void 0 ? void 0 : _t$target_crs['authority']) === 'EPSG' && ((_t$target_crs2 = t['target_crs']) === null || _t$target_crs2 === void 0 ? void 0 : _t$target_crs2['code']) === 4326 && t['deprecated'] === false && t['usable'] === true;\n                    }).sort(function (t1, t2) {\n                      return t1['accuracy'] - t2['accuracy'];\n                    })[0]) === null || _transforms$filter$so === void 0 || (_transforms$filter$so = _transforms$filter$so['exports']) === null || _transforms$filter$so === void 0 ? void 0 : _transforms$filter$so['proj4'];\n                    if (transform) {\n                      return transform;\n                    }\n                  }\n                  // fallback to default\n                  return (_result$exports2 = result['exports']) === null || _result$exports2 === void 0 ? void 0 : _result$exports2['proj4'];\n                }\n              }\n            }));\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function (_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}","map":{"version":3,"names":["Projection","addCoordinateTransforms","addEquivalentProjections","addProjection","createSafeCoordinateTransform","get","getTransform","registered","isRegistered","unregister","register","proj4","projCodes","Object","keys","defs","len","length","i","j","code","def","units","projName","axisOrientation","axis","metersPerUnit","to_meter","code1","proj1","code2","proj2","transform","forward","inverse","epsgLookup","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","fetch","concat","sent","ok","Error","status","abrupt","text","stop","_x","apply","arguments","setEPSGLookup","func","getEPSGLookup","fromEPSGCode","_x2","_fromEPSGCode","_callee3","epsgCode","_callee3$","_context3","parseInt","split","pop","t0","t1","t2","call","epsgLookupMapTiler","key","_ref2","_callee2","_callee2$","_context2","json","then","results","result","filter","r","_r$id","_r$id2","_result$exports2","transforms","_transforms$filter$so","defaultTransform","t","_t$id","_t$id2","_t$grids","_result$exports","_t$grids2","_t$target_crs","_t$target_crs2","sort","_x3"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/proj/proj4.js"],"sourcesContent":["/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n  get,\n} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * @type {import(\"proj4\")|null}\n */\nlet registered = null;\n\n/**\n * @return {boolean} Proj4 has been registered.\n */\nexport function isRegistered() {\n  return !!registered;\n}\n\n/**\n * Unsets the shared proj4 previously set with register.\n */\nexport function unregister() {\n  registered = null;\n}\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {import(\"proj4\")} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  registered = proj4;\n\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      let units = /** @type {import(\"./Units.js\").Units} */ (def.units);\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        })\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse)\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */\nlet epsgLookup = async function (code) {\n  const response = await fetch(`https://epsg.io/${code}.proj4`);\n  if (!response.ok) {\n    throw new Error(`Unexpected response from epsg.io: ${response.status}`);\n  }\n  return response.text();\n};\n\n/**\n * Set the lookup function for getting proj4 definitions given an EPSG code.\n * By default, the {@link module:ol/proj/proj4.fromEPSGCode} function uses the\n * epsg.io website for proj4 definitions.  This can be changed by providing a\n * different lookup function.\n *\n * @param {function(number):Promise<string>} func The lookup function.\n * @api\n */\nexport function setEPSGLookup(func) {\n  epsgLookup = func;\n}\n\n/**\n * Get the current EPSG lookup function.\n *\n * @return {function(number):Promise<string>} The EPSG lookup function.\n */\nexport function getEPSGLookup() {\n  return epsgLookup;\n}\n\n/**\n * Get a projection from an EPSG code.  This function fetches the projection\n * definition from the epsg.io website, registers this definition for use with\n * proj4, and returns a configured projection.  You must call import proj4 and\n * call {@link module:ol/proj/proj4.register} before using this function.\n *\n * If the projection definition is already registered with proj4, it will not\n * be fetched again (so it is ok to call this function multiple times with the\n * same code).\n *\n * @param {number|string} code The EPSG code (e.g. 4326 or 'EPSG:4326').\n * @return {Promise<Projection>} The projection.\n * @api\n */\nexport async function fromEPSGCode(code) {\n  if (typeof code === 'string') {\n    code = parseInt(code.split(':').pop(), 10);\n  }\n\n  const proj4 = registered;\n  if (!proj4) {\n    throw new Error('Proj4 must be registered first with register(proj4)');\n  }\n\n  const epsgCode = 'EPSG:' + code;\n  if (proj4.defs(epsgCode)) {\n    return get(epsgCode);\n  }\n\n  proj4.defs(epsgCode, await epsgLookup(code));\n  register(proj4);\n\n  return get(epsgCode);\n}\n\n/**\n * Generate an EPSG lookup function which uses the MapTiler Coordinates API to find projection\n * definitions which do not require proj4 to be configured to handle `+nadgrids` parameters.\n * Call {@link module:ol/proj/proj4.setEPSGLookup} use the function for lookups\n * `setEPSGLookup(epsgLookupMapTiler('{YOUR_MAPTILER_API_KEY_HERE}'))`.\n *\n * @param {string} key MapTiler API key.  Get your own API key at https://www.maptiler.com/cloud/.\n * @return {function(number):Promise<string>} The EPSG lookup function.\n * @api\n */\nexport function epsgLookupMapTiler(key) {\n  return async function (code) {\n    const response = await fetch(\n      `https://api.maptiler.com/coordinates/search/code:${code}.json?transformations=true&exports=true&key=${key}`\n    );\n    if (!response.ok) {\n      throw new Error(\n        `Unexpected response from maptiler.com: ${response.status}`\n      );\n    }\n    return response.json().then((json) => {\n      const results = json['results'];\n      if (results?.length > 0) {\n        const result = results.filter(\n          (r) => r['id']?.['authority'] === 'EPSG' && r['id']?.['code'] === code\n        )[0];\n        if (result) {\n          const transforms = result['transformations'];\n          if (transforms?.length > 0) {\n            // use default transform if it does not require grids\n            const defaultTransform = result['default_transformation'];\n            if (\n              transforms.filter(\n                (t) =>\n                  t['id']?.['authority'] === defaultTransform?.['authority'] &&\n                  t['id']?.['code'] === defaultTransform?.['code'] &&\n                  t['grids']?.length === 0\n              ).length > 0\n            ) {\n              return result['exports']?.['proj4'];\n            }\n            // otherwise use most accurate alternative without grids\n            const transform = transforms\n              .filter(\n                (t) =>\n                  t['grids']?.length === 0 &&\n                  t['target_crs']?.['authority'] === 'EPSG' &&\n                  t['target_crs']?.['code'] === 4326 &&\n                  t['deprecated'] === false &&\n                  t['usable'] === true\n              )\n              .sort((t1, t2) => t1['accuracy'] - t2['accuracy'])[0]?.[\n              'exports'\n            ]?.['proj4'];\n            if (transform) {\n              return transform;\n            }\n          }\n          // fallback to default\n          return result['exports']?.['proj4'];\n        }\n      }\n    });\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}