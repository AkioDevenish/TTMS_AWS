{"ast":null,"code":"import _slicedToArray from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _superPropGet from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/superPropGet.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport ol_style_Style from 'ol/style/Style.js';\nimport ol_style_Stroke from 'ol/style/Stroke.js';\nimport ol_source_Vector from 'ol/source/Vector.js';\nimport ol_style_Fill from 'ol/style/Fill.js';\nimport ol_layer_Vector from 'ol/layer/Vector.js';\nimport ol_geom_Point from 'ol/geom/Point.js';\nimport ol_Feature from 'ol/Feature.js';\nimport ol_Collection from 'ol/Collection.js';\nimport ol_interaction_Pointer from 'ol/interaction/Pointer.js';\nimport ol_style_RegularShape from 'ol/style/RegularShape.js';\nimport { fromExtent as ol_geom_Polygon_fromExtent } from 'ol/geom/Polygon.js';\nimport { boundingExtent as ol_extent_boundingExtent, buffer as ol_extent_buffer, createEmpty as ol_extent_createEmpty, extend as ol_extent_extend, getCenter as ol_extent_getCenter } from 'ol/extent.js';\nimport { unByKey as ol_Observable_unByKey } from 'ol/Observable.js';\nimport ol_geom_Polygon from 'ol/geom/Polygon.js';\nimport ol_ext_element from '../util/element.js';\n\n/** Interaction rotate\r\n * @constructor\r\n * @extends {ol_interaction_Pointer}\r\n * @fires select | rotatestart | rotating | rotateend | translatestart | translating | translateend | scalestart | scaling | scaleend\r\n * @param {any} options\r\n *  @param {function} options.filter A function that takes a Feature and a Layer and returns true if the feature may be transformed or false otherwise.\r\n *  @param {Array<ol.Layer>} options.layers array of layers to transform,\r\n *  @param {ol.Collection<ol.Feature>} options.features collection of feature to transform,\r\n *\t@param {ol.EventsConditionType|undefined} options.condition A function that takes an ol.MapBrowserEvent and a feature collection and returns a boolean to indicate whether that event should be handled. default: ol.events.condition.always.\r\n *\t@param {ol.EventsConditionType|undefined} options.addCondition A function that takes an ol.MapBrowserEvent and returns a boolean to indicate whether that event should be handled ie. the feature will be added to the transforms features. default: ol.events.condition.never.\r\n *\t@param {number | undefined} options.hitTolerance Tolerance to select feature in pixel, default 0\r\n *\t@param {bool} options.translateFeature Translate when click on feature\r\n *\t@param {bool} options.translate Can translate the feature\r\n *  @param {bool} options.translateBBox Enable translate when the user drags inside the bounding box\r\n *\t@param {bool} options.stretch can stretch the feature\r\n *\t@param {bool} options.scale can scale the feature\r\n *\t@param {bool} options.rotate can rotate the feature\r\n *\t@param {bool} options.noFlip prevent the feature geometry to flip, default false\r\n *\t@param {bool} options.selection the intraction handle selection/deselection, if not use the select prototype to add features to transform, default true\r\n *\t@param {ol.events.ConditionType | undefined} options.keepAspectRatio A function that takes an ol.MapBrowserEvent and returns a boolean to keep aspect ratio, default ol.events.condition.shiftKeyOnly.\r\n *\t@param {ol.events.ConditionType | undefined} options.modifyCenter A function that takes an ol.MapBrowserEvent and returns a boolean to apply scale & strech from the center, default ol.events.condition.metaKey or ol.events.condition.ctrlKey.\r\n *\t@param {boolean} options.enableRotatedTransform Enable transform when map is rotated\r\n *\t@param {boolean} [options.keepRectangle=false] keep rectangle when possible\r\n *  @param {number} [options.buffer] Increase the extent used as bounding box, default 0\r\n *\t@param {*} options.style list of ol.style for handles\r\n *  @param {number|Array<number>|function} [options.pointRadius=0] radius for points or a function that takes a feature and returns the radius (or [radiusX, radiusY]). If not null show handles to transform the points\r\n */\nvar ol_interaction_Transform = /*#__PURE__*/function (_ol_interaction_Point) {\n  function olinteractionTransform(options) {\n    var _this;\n    _classCallCheck(this, olinteractionTransform);\n    options = options || {};\n    // Extend pointer\n    _this = _callSuper(this, olinteractionTransform, [{\n      handleDownEvent: function handleDownEvent(e) {\n        return self.handleDownEvent_(e);\n      },\n      handleDragEvent: function handleDragEvent(e) {\n        return this.handleDragEvent_(e);\n      },\n      handleMoveEvent: function handleMoveEvent(e) {\n        return this.handleMoveEvent_(e);\n      },\n      handleUpEvent: function handleUpEvent(e) {\n        return this.handleUpEvent_(e);\n      }\n    }]);\n    var self = _this;\n    _this.selection_ = new ol_Collection();\n\n    // Create a new overlay layer for the sketch\n    _this.handles_ = new ol_Collection();\n    _this.overlayLayer_ = new ol_layer_Vector({\n      source: new ol_source_Vector({\n        features: _this.handles_,\n        useSpatialIndex: false,\n        wrapX: false // For vector editing across the -180° and 180° meridians to work properly, this should be set to false\n      }),\n      name: 'Transform overlay',\n      displayInLayerSwitcher: false,\n      // Return the style according to the handle type\n      style: function style(feature) {\n        return self.style[(feature.get('handle') || 'default') + (feature.get('constraint') || '') + (feature.get('option') || '')];\n      },\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    // Collection of feature to transform\n    _this.features_ = options.features;\n    // Filter or list of layers to transform\n    if (typeof options.filter === 'function') _this._filter = options.filter;\n    _this.layers_ = options.layers ? options.layers instanceof Array ? options.layers : [options.layers] : null;\n    _this._handleEvent = options.condition || function () {\n      return true;\n    };\n    _this.addFn_ = options.addCondition || function () {\n      return false;\n    };\n    _this.setPointRadius(options.pointRadius);\n    /* Translate when click on feature */\n    _this.set('translateFeature', options.translateFeature !== false);\n    /* Can translate the feature */\n    _this.set('translate', options.translate !== false);\n    /* Translate when click on the bounding box */\n    _this.set('translateBBox', options.translateBBox === true);\n    /* Can stretch the feature */\n    _this.set('stretch', options.stretch !== false);\n    /* Can scale the feature */\n    _this.set('scale', options.scale !== false);\n    /* Can rotate the feature */\n    _this.set('rotate', options.rotate !== false);\n    /* Keep aspect ratio */\n    _this.set('keepAspectRatio', options.keepAspectRatio || function (e) {\n      return e.originalEvent.shiftKey;\n    });\n    /* Modify center */\n    _this.set('modifyCenter', options.modifyCenter || function (e) {\n      return e.originalEvent.metaKey || e.originalEvent.ctrlKey;\n    });\n    /* Prevent flip */\n    _this.set('noFlip', options.noFlip || false);\n    /* Handle selection */\n    _this.set('selection', options.selection !== false);\n    /*  */\n    _this.set('hitTolerance', options.hitTolerance || 0);\n    /* Enable view rotated transforms */\n    _this.set('enableRotatedTransform', options.enableRotatedTransform || false);\n    /* Keep rectangle angles 90 degrees */\n    _this.set('keepRectangle', options.keepRectangle || false);\n    /* Add buffer to the feature's extent */\n    _this.set('buffer', options.buffer || 0);\n\n    // Force redraw when changed\n    _this.on('propertychange', function () {\n      this.drawSketch_();\n    });\n\n    // setstyle\n    _this.setDefaultStyle();\n    return _this;\n  }\n  /**\r\n   * Remove the interaction from its current map, if any,  and attach it to a new\r\n   * map, if any. Pass `null` to just remove the interaction from the current map.\r\n   * @param {ol.Map} map Map.\r\n   * @api stable\r\n   */\n  _inherits(olinteractionTransform, _ol_interaction_Point);\n  return _createClass(olinteractionTransform, [{\n    key: \"setMap\",\n    value: function setMap(map) {\n      var oldMap = this.getMap();\n      if (oldMap) {\n        oldMap.removeLayer(this.overlayLayer_);\n        if (this.previousCursor_) {\n          ol_ext_element.setCursor(oldMap, this.previousCursor_);\n        }\n        this.previousCursor_ = undefined;\n      }\n      _superPropGet(olinteractionTransform, \"setMap\", this, 3)([map]);\n      this.overlayLayer_.setMap(map);\n      if (map === null) {\n        this.select(null);\n      }\n      if (map !== null) {\n        this.isTouch = /touch/.test(map.getViewport().className);\n        this.setDefaultStyle();\n      }\n    }\n    /**\r\n     * Activate/deactivate interaction\r\n     * @param {bool}\r\n     * @api stable\r\n     */\n  }, {\n    key: \"setActive\",\n    value: function setActive(b) {\n      this.select(null);\n      if (this.overlayLayer_) this.overlayLayer_.setVisible(b);\n      _superPropGet(olinteractionTransform, \"setActive\", this, 3)([b]);\n    }\n    /** Set default sketch style\r\n     * @param {Object} [options]\r\n     *  @param {ol_style_Stroke} [stroke] stroke style for selection rectangle, default red dash\r\n     *  @param {ol_style_Fill} [fill] fill style for selection rectangle, default red\r\n     *  @param {ol_style_Stroke} [pointStroke] stroke style for handles, default red\r\n     *  @param {ol_style_Fill} [pointFill] fill style for handles, default white\r\n     */\n  }, {\n    key: \"setDefaultStyle\",\n    value: function setDefaultStyle(options) {\n      options = options || {};\n      // Style\n      var stroke = options.pointStroke || new ol_style_Stroke({\n        color: [255, 0, 0, 1],\n        width: 1\n      });\n      var strokedash = options.stroke || new ol_style_Stroke({\n        color: [255, 0, 0, 1],\n        width: 1,\n        lineDash: [4, 4]\n      });\n      var fill0 = options.fill || new ol_style_Fill({\n        color: [255, 0, 0, 0.01]\n      });\n      var fill = options.pointFill || new ol_style_Fill({\n        color: [255, 255, 255, 0.8]\n      });\n      var circle = new ol_style_RegularShape({\n        fill: fill,\n        stroke: stroke,\n        radius: this.isTouch ? 12 : 6,\n        displacement: this.isTouch ? [24, -24] : [12, -12],\n        points: 15\n      });\n      // Old version with no displacement\n      if (!circle.setDisplacement) circle.getAnchor()[0] = this.isTouch ? -10 : -5;\n      var bigpt = new ol_style_RegularShape({\n        fill: fill,\n        stroke: stroke,\n        radius: this.isTouch ? 16 : 8,\n        points: 4,\n        angle: Math.PI / 4\n      });\n      var smallpt = new ol_style_RegularShape({\n        fill: fill,\n        stroke: stroke,\n        radius: this.isTouch ? 12 : 6,\n        points: 4,\n        angle: Math.PI / 4\n      });\n      function createStyle(img, stroke, fill) {\n        return [new ol_style_Style({\n          image: img,\n          stroke: stroke,\n          fill: fill\n        })];\n      }\n      /** Style for handles */\n      this.style = {\n        'default': createStyle(bigpt, strokedash, fill0),\n        'translate': createStyle(bigpt, stroke, fill),\n        'rotate': createStyle(circle, stroke, fill),\n        'rotate0': createStyle(bigpt, stroke, fill),\n        'scale': createStyle(bigpt, stroke, fill),\n        'scale1': createStyle(bigpt, stroke, fill),\n        'scale2': createStyle(bigpt, stroke, fill),\n        'scale3': createStyle(bigpt, stroke, fill),\n        'scalev': createStyle(smallpt, stroke, fill),\n        'scaleh1': createStyle(smallpt, stroke, fill),\n        'scalev2': createStyle(smallpt, stroke, fill),\n        'scaleh3': createStyle(smallpt, stroke, fill)\n      };\n      this.drawSketch_();\n    }\n    /**\r\n     * Set sketch style.\r\n     * @param {style} style Style name: 'default','translate','rotate','rotate0','scale','scale1','scale2','scale3','scalev','scaleh1','scalev2','scaleh3'\r\n     * @param {ol.style.Style|Array<ol.style.Style>} olstyle\r\n     * @api stable\r\n     */\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(style, olstyle) {\n      if (!olstyle) return;\n      if (olstyle instanceof Array) this.style[style] = olstyle;else this.style[style] = [olstyle];\n      for (var i = 0; i < this.style[style].length; i++) {\n        var im = this.style[style][i].getImage();\n        if (im) {\n          if (style == 'rotate') {\n            im.getAnchor()[0] = -5;\n          }\n          if (this.isTouch) im.setScale(1.8);\n        }\n        var tx = this.style[style][i].getText();\n        if (tx) {\n          if (style == 'rotate') tx.setOffsetX(this.isTouch ? 14 : 7);\n          if (this.isTouch) tx.setScale(1.8);\n        }\n      }\n      this.drawSketch_();\n    }\n    /** Get Feature at pixel\r\n     * @param {ol.Pixel}\r\n     * @return {ol.feature}\r\n     * @private\r\n     */\n  }, {\n    key: \"getFeatureAtPixel_\",\n    value: function getFeatureAtPixel_(pixel) {\n      var self = this;\n      return this.getMap().forEachFeatureAtPixel(pixel, function (feature, layer) {\n        var found = false;\n        // Overlay ?\n        if (!layer) {\n          if (feature === self.bbox_) {\n            if (self.get('translateBBox')) {\n              return {\n                feature: feature,\n                handle: 'translate',\n                constraint: '',\n                option: ''\n              };\n            } else {\n              return false;\n            }\n          }\n          self.handles_.forEach(function (f) {\n            if (f === feature) found = true;\n          });\n          if (found) return {\n            feature: feature,\n            handle: feature.get('handle'),\n            constraint: feature.get('constraint'),\n            option: feature.get('option')\n          };\n        }\n        // No seletion\n        if (!self.get('selection')) {\n          // Return the currently selected feature the user is interacting with.\n          if (self.selection_.getArray().some(function (f) {\n            return feature === f;\n          })) {\n            return {\n              feature: feature\n            };\n          }\n          return null;\n        }\n        // filter condition\n        if (self._filter) {\n          if (self._filter(feature, layer)) return {\n            feature: feature\n          };else return null;\n        }\n\n        // feature belong to a layer\n        else if (self.layers_) {\n          for (var i = 0; i < self.layers_.length; i++) {\n            if (self.layers_[i] === layer) return {\n              feature: feature\n            };\n          }\n          return null;\n        }\n\n        // feature in the collection\n        else if (self.features_) {\n          self.features_.forEach(function (f) {\n            if (f === feature) found = true;\n          });\n          if (found) return {\n            feature: feature\n          };else return null;\n        }\n\n        // Others\n        else return {\n          feature: feature\n        };\n      }, {\n        hitTolerance: this.get('hitTolerance')\n      }) || {};\n    }\n    /** Rotate feature from map view rotation\r\n     * @param {ol.Feature} f the feature\r\n     * @param {boolean} clone clone resulting geom\r\n     * @param {ol.geom.Geometry} rotated geometry\r\n     */\n  }, {\n    key: \"getGeometryRotateToZero_\",\n    value: function getGeometryRotateToZero_(f, clone) {\n      var origGeom = f.getGeometry();\n      var viewRotation = this.getMap().getView().getRotation();\n      if (viewRotation === 0 || !this.get('enableRotatedTransform')) {\n        return clone ? origGeom.clone() : origGeom;\n      }\n      var rotGeom = origGeom.clone();\n      rotGeom.rotate(viewRotation * -1, this.getMap().getView().getCenter());\n      return rotGeom;\n    }\n    /** Test if rectangle\r\n     * @param {ol.Geometry} geom\r\n     * @returns {boolean}\r\n     * @private\r\n     */\n  }, {\n    key: \"_isRectangle\",\n    value: function _isRectangle(geom) {\n      if (this.get('keepRectangle') && geom.getType() === 'Polygon') {\n        var coords = geom.getCoordinates()[0];\n        return coords.length === 5;\n      }\n      return false;\n    }\n    /** Draw transform sketch\r\n    * @param {boolean} draw only the center\r\n    */\n  }, {\n    key: \"drawSketch_\",\n    value: function drawSketch_(center) {\n      var i, f, geom;\n      var keepRectangle = this.selection_.item(0) && this._isRectangle(this.selection_.item(0).getGeometry());\n      this.overlayLayer_.getSource().clear();\n      if (!this.selection_.getLength()) return;\n      var viewRotation = this.getMap().getView().getRotation();\n      var ext = this.getGeometryRotateToZero_(this.selection_.item(0)).getExtent();\n      var coords;\n      if (keepRectangle) {\n        coords = this.getGeometryRotateToZero_(this.selection_.item(0)).getCoordinates()[0].slice(0, 4);\n        coords.unshift(coords[3]);\n      }\n      // Clone and extend\n      ext = ol_extent_buffer(ext, this.get('buffer'));\n      this.selection_.forEach(function (f) {\n        var extendExt = this.getGeometryRotateToZero_(f).getExtent();\n        ol_extent_extend(ext, extendExt);\n      }.bind(this));\n      var ptRadius = this.selection_.getLength() === 1 ? this._pointRadius(this.selection_.item(0)) : 0;\n      if (ptRadius && !(ptRadius instanceof Array)) ptRadius = [ptRadius, ptRadius];\n      if (center === true) {\n        if (!this.ispt_) {\n          this.overlayLayer_.getSource().addFeature(new ol_Feature({\n            geometry: new ol_geom_Point(this.center_),\n            handle: 'rotate0'\n          }));\n          geom = ol_geom_Polygon_fromExtent(ext);\n          if (this.get('enableRotatedTransform') && viewRotation !== 0) {\n            geom.rotate(viewRotation, this.getMap().getView().getCenter());\n          }\n          f = this.bbox_ = new ol_Feature(geom);\n          this.overlayLayer_.getSource().addFeature(f);\n        }\n      } else {\n        if (this.ispt_) {\n          // Calculate extent arround the point\n          var p = this.getMap().getPixelFromCoordinate(ol_extent_getCenter(ext));\n          if (p) {\n            var dx = ptRadius ? ptRadius[0] || 10 : 10;\n            var dy = ptRadius ? ptRadius[1] || 10 : 10;\n            ext = ol_extent_boundingExtent([this.getMap().getCoordinateFromPixel([p[0] - dx, p[1] - dy]), this.getMap().getCoordinateFromPixel([p[0] + dx, p[1] + dy])]);\n          }\n        }\n        geom = keepRectangle ? new ol_geom_Polygon([coords]) : ol_geom_Polygon_fromExtent(ext);\n        if (this.get('enableRotatedTransform') && viewRotation !== 0) {\n          geom.rotate(viewRotation, this.getMap().getView().getCenter());\n        }\n        f = this.bbox_ = new ol_Feature(geom);\n        var features = [];\n        var g = geom.getCoordinates()[0];\n        if (!this.ispt_ || ptRadius) {\n          features.push(f);\n          // Middle\n          if (!this.iscircle_ && !this.ispt_ && this.get('stretch') && this.get('scale')) for (i = 0; i < g.length - 1; i++) {\n            f = new ol_Feature({\n              geometry: new ol_geom_Point([(g[i][0] + g[i + 1][0]) / 2, (g[i][1] + g[i + 1][1]) / 2]),\n              handle: 'scale',\n              constraint: i % 2 ? \"h\" : \"v\",\n              option: i\n            });\n            features.push(f);\n          }\n          // Handles\n          if (this.get('scale')) for (i = 0; i < g.length - 1; i++) {\n            f = new ol_Feature({\n              geometry: new ol_geom_Point(g[i]),\n              handle: 'scale',\n              option: i\n            });\n            features.push(f);\n          }\n          // Center\n          if (this.get('translate') && !this.get('translateFeature')) {\n            f = new ol_Feature({\n              geometry: new ol_geom_Point([(g[0][0] + g[2][0]) / 2, (g[0][1] + g[2][1]) / 2]),\n              handle: 'translate'\n            });\n            features.push(f);\n          }\n        }\n        // Rotate\n        if (!this.iscircle_ && this.get('rotate')) {\n          f = new ol_Feature({\n            geometry: new ol_geom_Point(g[3]),\n            handle: 'rotate'\n          });\n          features.push(f);\n        }\n        // Add sketch\n        this.overlayLayer_.getSource().addFeatures(features);\n      }\n    }\n    /** Select a feature to transform\r\n    * @param {ol.Feature} feature the feature to transform\r\n    * @param {boolean} add true to add the feature to the selection, default false\r\n    */\n  }, {\n    key: \"select\",\n    value: function select(feature, add) {\n      if (!feature) {\n        if (this.selection_) {\n          this.selection_.clear();\n          this.drawSketch_();\n        }\n        return;\n      }\n      if (!feature.getGeometry || !feature.getGeometry()) return;\n      // Add to selection\n      if (add) {\n        this.selection_.push(feature);\n      } else {\n        var index = this.selection_.getArray().indexOf(feature);\n        this.selection_.removeAt(index);\n      }\n      this.ispt_ = this.selection_.getLength() === 1 ? this.selection_.item(0).getGeometry().getType() == \"Point\" : false;\n      this.iscircle_ = this.selection_.getLength() === 1 ? this.selection_.item(0).getGeometry().getType() == \"Circle\" : false;\n      this.drawSketch_();\n      this.watchFeatures_();\n      // select event\n      this.dispatchEvent({\n        type: 'select',\n        feature: feature,\n        features: this.selection_\n      });\n    }\n    /** Update the selection collection.\r\n    * @param {ol.Collection<ol.Feature>} features the features to transform\r\n    */\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(features) {\n      this.selection_.clear();\n      features.forEach(function (feature) {\n        this.selection_.push(feature);\n      }.bind(this));\n      this.ispt_ = this.selection_.getLength() === 1 ? this.selection_.item(0).getGeometry().getType() == \"Point\" : false;\n      this.iscircle_ = this.selection_.getLength() === 1 ? this.selection_.item(0).getGeometry().getType() == \"Circle\" : false;\n      this.drawSketch_();\n      this.watchFeatures_();\n      // select event\n      this.dispatchEvent({\n        type: 'select',\n        features: this.selection_\n      });\n    }\n    /** Watch selected features\r\n     * @private\r\n     */\n  }, {\n    key: \"watchFeatures_\",\n    value: function watchFeatures_() {\n      // Listen to feature modification\n      if (this._featureListeners) {\n        this._featureListeners.forEach(function (l) {\n          ol_Observable_unByKey(l);\n        });\n      }\n      this._featureListeners = [];\n      this.selection_.forEach(function (f) {\n        this._featureListeners.push(f.on('change', function () {\n          if (!this.isUpdating_) {\n            this.drawSketch_();\n          }\n        }.bind(this)));\n      }.bind(this));\n    }\n    /**\r\n     * @param {ol.MapBrowserEvent} evt Map browser event.\r\n     * @return {boolean} `true` to start the drag sequence.\r\n     * @private\r\n     */\n  }, {\n    key: \"handleDownEvent_\",\n    value: function handleDownEvent_(evt) {\n      if (!this._handleEvent(evt, this.selection_)) return;\n      var sel = this.getFeatureAtPixel_(evt.pixel);\n      var feature = sel.feature;\n      if (this.selection_.getLength() && this.selection_.getArray().indexOf(feature) >= 0 && (this.ispt_ && this.get('translate') || this.get('translateFeature'))) {\n        sel.handle = 'translate';\n      }\n      if (sel.handle) {\n        this.mode_ = sel.handle;\n        this.opt_ = sel.option;\n        this.constraint_ = sel.constraint;\n        // Save info\n        var viewRotation = this.getMap().getView().getRotation();\n        // Get coordinate of the handle (for snapping)\n        this.coordinate_ = feature.get('handle') ? feature.getGeometry().getCoordinates() : evt.coordinate;\n        this.pixel_ = this.getMap().getCoordinateFromPixel(this.coordinate_); // evt.pixel;\n        this.geoms_ = [];\n        this.rotatedGeoms_ = [];\n        var extent = ol_extent_createEmpty();\n        var rotExtent = ol_extent_createEmpty();\n        for (var i = 0, f; f = this.selection_.item(i); i++) {\n          this.geoms_.push(f.getGeometry().clone());\n          extent = ol_extent_extend(extent, f.getGeometry().getExtent());\n          if (this.get('enableRotatedTransform') && viewRotation !== 0) {\n            var rotGeom = this.getGeometryRotateToZero_(f, true);\n            this.rotatedGeoms_.push(rotGeom);\n            rotExtent = ol_extent_extend(rotExtent, rotGeom.getExtent());\n          }\n        }\n        this.extent_ = ol_geom_Polygon_fromExtent(extent).getCoordinates()[0];\n        if (this.get('enableRotatedTransform') && viewRotation !== 0) {\n          this.rotatedExtent_ = ol_geom_Polygon_fromExtent(rotExtent).getCoordinates()[0];\n        }\n        if (this.mode_ === 'rotate') {\n          this.center_ = this.getCenter() || ol_extent_getCenter(extent);\n          // we are now rotating (cursor down on rotate mode), so apply the grabbing cursor\n          var element = evt.map.getTargetElement();\n          ol_ext_element.setCursor(element, this.Cursors.rotate0);\n          this.previousCursor_ = element.style.cursor;\n        } else {\n          this.center_ = ol_extent_getCenter(extent);\n        }\n        this.angle_ = Math.atan2(this.center_[1] - evt.coordinate[1], this.center_[0] - evt.coordinate[0]);\n        this.dispatchEvent({\n          type: this.mode_ + 'start',\n          feature: this.selection_.item(0),\n          features: this.selection_,\n          pixel: evt.pixel,\n          coordinate: evt.coordinate\n        });\n        return true;\n      } else if (this.get('selection')) {\n        if (feature) {\n          if (!this.addFn_(evt)) this.selection_.clear();\n          var index = this.selection_.getArray().indexOf(feature);\n          if (index < 0) this.selection_.push(feature);else this.selection_.removeAt(index);\n        } else {\n          this.selection_.clear();\n        }\n        this.ispt_ = this.selection_.getLength() === 1 ? this.selection_.item(0).getGeometry().getType() == \"Point\" : false;\n        this.iscircle_ = this.selection_.getLength() === 1 ? this.selection_.item(0).getGeometry().getType() == \"Circle\" : false;\n        this.drawSketch_();\n        this.watchFeatures_();\n        this.dispatchEvent({\n          type: 'select',\n          feature: feature,\n          features: this.selection_,\n          pixel: evt.pixel,\n          coordinate: evt.coordinate\n        });\n        return false;\n      }\n    }\n    /**\r\n     * Get the rotation center\r\n     * @return {ol.coordinate|undefined}\r\n     */\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      return this.get('center');\n    }\n    /**\r\n     * Set the rotation center\r\n     * @param {ol.coordinate|undefined} c the center point, default center on the objet\r\n     */\n  }, {\n    key: \"setCenter\",\n    value: function setCenter(c) {\n      return this.set('center', c);\n    }\n    /**\r\n     * @param {ol.MapBrowserEvent} evt Map browser event.\r\n     * @private\r\n     */\n  }, {\n    key: \"handleDragEvent_\",\n    value: function handleDragEvent_(evt) {\n      if (!this._handleEvent(evt, this.features_)) return;\n      var viewRotation = this.getMap().getView().getRotation();\n      var i, j, f, geometry;\n      var pt0 = [this.coordinate_[0], this.coordinate_[1]];\n      var pt = [evt.coordinate[0], evt.coordinate[1]];\n      this.isUpdating_ = true;\n      switch (this.mode_) {\n        case 'rotate':\n          {\n            var a = Math.atan2(this.center_[1] - pt[1], this.center_[0] - pt[0]);\n            if (!this.ispt) {\n              // var geometry = this.geom_.clone();\n              // geometry.rotate(a-this.angle_, this.center_);\n              // this.feature_.setGeometry(geometry);\n              for (i = 0, f; f = this.selection_.item(i); i++) {\n                geometry = this.geoms_[i].clone();\n                geometry.rotate(a - this.angle_, this.center_);\n                // bug: ol, bad calculation circle geom extent\n                if (geometry.getType() == 'Circle') geometry.setCenterAndRadius(geometry.getCenter(), geometry.getRadius());\n                f.setGeometry(geometry);\n              }\n            }\n            this.drawSketch_(true);\n            this.dispatchEvent({\n              type: 'rotating',\n              feature: this.selection_.item(0),\n              features: this.selection_,\n              angle: a - this.angle_,\n              pixel: evt.pixel,\n              coordinate: evt.coordinate\n            });\n            break;\n          }\n        case 'translate':\n          {\n            var deltaX = pt[0] - pt0[0];\n            var deltaY = pt[1] - pt0[1];\n\n            //this.feature_.getGeometry().translate(deltaX, deltaY);\n            for (i = 0, f; f = this.selection_.item(i); i++) {\n              f.getGeometry().translate(deltaX, deltaY);\n            }\n            this.handles_.forEach(function (f) {\n              f.getGeometry().translate(deltaX, deltaY);\n            });\n            this.coordinate_ = evt.coordinate;\n            this.dispatchEvent({\n              type: 'translating',\n              feature: this.selection_.item(0),\n              features: this.selection_,\n              delta: [deltaX, deltaY],\n              pixel: evt.pixel,\n              coordinate: evt.coordinate\n            });\n            break;\n          }\n        case 'scale':\n          {\n            var center = this.center_;\n            if (this.get('modifyCenter')(evt)) {\n              var extentCoordinates = this.extent_;\n              if (this.get('enableRotatedTransform') && viewRotation !== 0) {\n                extentCoordinates = this.rotatedExtent_;\n              }\n              center = extentCoordinates[(Number(this.opt_) + 2) % 4];\n            }\n            var keepRectangle = this.geoms_.length == 1 && this._isRectangle(this.geoms_[0]);\n            var stretch = this.constraint_;\n            var opt = this.opt_;\n            var downCoordinate = this.coordinate_;\n            var dragCoordinate = evt.coordinate;\n            if (this.get('enableRotatedTransform') && viewRotation !== 0) {\n              var downPoint = new ol_geom_Point(this.coordinate_);\n              downPoint.rotate(viewRotation * -1, center);\n              downCoordinate = downPoint.getCoordinates();\n              var dragPoint = new ol_geom_Point(evt.coordinate);\n              dragPoint.rotate(viewRotation * -1, center);\n              dragCoordinate = dragPoint.getCoordinates();\n            }\n            var scx = (dragCoordinate[0] - center[0]) / (downCoordinate[0] - center[0]);\n            var scy = (dragCoordinate[1] - center[1]) / (downCoordinate[1] - center[1]);\n            var displacementVector = [dragCoordinate[0] - downCoordinate[0], dragCoordinate[1] - downCoordinate[1]];\n            if (this.get('enableRotatedTransform') && viewRotation !== 0) {\n              var centerPoint = new ol_geom_Point(center);\n              centerPoint.rotate(viewRotation * -1, this.getMap().getView().getCenter());\n              center = centerPoint.getCoordinates();\n            }\n            if (this.get('noFlip')) {\n              if (scx < 0) scx = -scx;\n              if (scy < 0) scy = -scy;\n            }\n            if (this.constraint_) {\n              if (this.constraint_ == \"h\") scx = 1;else scy = 1;\n            } else {\n              if (this.get('keepAspectRatio')(evt)) {\n                scx = scy = Math.min(scx, scy);\n              }\n            }\n            for (i = 0, f; f = this.selection_.item(i); i++) {\n              geometry = viewRotation === 0 || !this.get('enableRotatedTransform') ? this.geoms_[i].clone() : this.rotatedGeoms_[i].clone();\n              geometry.applyTransform(function (g1, g2, dim) {\n                if (dim < 2) return g2;\n                if (!keepRectangle) {\n                  for (j = 0; j < g1.length; j += dim) {\n                    if (scx != 1) g2[j] = center[0] + (g1[j] - center[0]) * scx;\n                    if (scy != 1) g2[j + 1] = center[1] + (g1[j + 1] - center[1]) * scy;\n                  }\n                } else {\n                  var pointArray = [[6], [0, 8], [2], [4]];\n                  var pointA = [g1[0], g1[1]];\n                  var pointB = [g1[2], g1[3]];\n                  var pointC = [g1[4], g1[5]];\n                  var pointD = [g1[6], g1[7]];\n                  var pointA1 = [g1[8], g1[9]];\n                  if (stretch) {\n                    var base = opt % 2 === 0 ? this._countVector(pointA, pointB) : this._countVector(pointD, pointA);\n                    var projectedVector = this._projectVectorOnVector(displacementVector, base);\n                    var nextIndex = opt + 1 < pointArray.length ? opt + 1 : 0;\n                    var coordsToChange = [].concat(_toConsumableArray(pointArray[opt]), _toConsumableArray(pointArray[nextIndex]));\n                    for (j = 0; j < g1.length; j += dim) {\n                      g2[j] = coordsToChange.includes(j) ? g1[j] + projectedVector[0] : g1[j];\n                      g2[j + 1] = coordsToChange.includes(j) ? g1[j + 1] + projectedVector[1] : g1[j + 1];\n                    }\n                  } else {\n                    var projectedLeft, projectedRight;\n                    switch (opt) {\n                      case 0:\n                        displacementVector = this._countVector(pointD, dragCoordinate);\n                        projectedLeft = this._projectVectorOnVector(displacementVector, this._countVector(pointC, pointD));\n                        projectedRight = this._projectVectorOnVector(displacementVector, this._countVector(pointA, pointD));\n                        var _this$_movePoint = this._movePoint(pointA, projectedLeft);\n                        var _this$_movePoint2 = _slicedToArray(_this$_movePoint, 2);\n                        g2[0] = _this$_movePoint2[0];\n                        g2[1] = _this$_movePoint2[1];\n                        var _this$_movePoint3 = this._movePoint(pointC, projectedRight);\n                        var _this$_movePoint4 = _slicedToArray(_this$_movePoint3, 2);\n                        g2[4] = _this$_movePoint4[0];\n                        g2[5] = _this$_movePoint4[1];\n                        var _this$_movePoint5 = this._movePoint(pointD, displacementVector);\n                        var _this$_movePoint6 = _slicedToArray(_this$_movePoint5, 2);\n                        g2[6] = _this$_movePoint6[0];\n                        g2[7] = _this$_movePoint6[1];\n                        var _this$_movePoint7 = this._movePoint(pointA1, projectedLeft);\n                        var _this$_movePoint8 = _slicedToArray(_this$_movePoint7, 2);\n                        g2[8] = _this$_movePoint8[0];\n                        g2[9] = _this$_movePoint8[1];\n                        break;\n                      case 1:\n                        displacementVector = this._countVector(pointA, dragCoordinate);\n                        projectedLeft = this._projectVectorOnVector(displacementVector, this._countVector(pointD, pointA));\n                        projectedRight = this._projectVectorOnVector(displacementVector, this._countVector(pointB, pointA));\n                        var _this$_movePoint9 = this._movePoint(pointA, displacementVector);\n                        var _this$_movePoint10 = _slicedToArray(_this$_movePoint9, 2);\n                        g2[0] = _this$_movePoint10[0];\n                        g2[1] = _this$_movePoint10[1];\n                        var _this$_movePoint11 = this._movePoint(pointB, projectedLeft);\n                        var _this$_movePoint12 = _slicedToArray(_this$_movePoint11, 2);\n                        g2[2] = _this$_movePoint12[0];\n                        g2[3] = _this$_movePoint12[1];\n                        var _this$_movePoint13 = this._movePoint(pointD, projectedRight);\n                        var _this$_movePoint14 = _slicedToArray(_this$_movePoint13, 2);\n                        g2[6] = _this$_movePoint14[0];\n                        g2[7] = _this$_movePoint14[1];\n                        var _this$_movePoint15 = this._movePoint(pointA1, displacementVector);\n                        var _this$_movePoint16 = _slicedToArray(_this$_movePoint15, 2);\n                        g2[8] = _this$_movePoint16[0];\n                        g2[9] = _this$_movePoint16[1];\n                        break;\n                      case 2:\n                        displacementVector = this._countVector(pointB, dragCoordinate);\n                        projectedLeft = this._projectVectorOnVector(displacementVector, this._countVector(pointA, pointB));\n                        projectedRight = this._projectVectorOnVector(displacementVector, this._countVector(pointC, pointB));\n                        var _this$_movePoint17 = this._movePoint(pointA, projectedRight);\n                        var _this$_movePoint18 = _slicedToArray(_this$_movePoint17, 2);\n                        g2[0] = _this$_movePoint18[0];\n                        g2[1] = _this$_movePoint18[1];\n                        var _this$_movePoint19 = this._movePoint(pointB, displacementVector);\n                        var _this$_movePoint20 = _slicedToArray(_this$_movePoint19, 2);\n                        g2[2] = _this$_movePoint20[0];\n                        g2[3] = _this$_movePoint20[1];\n                        var _this$_movePoint21 = this._movePoint(pointC, projectedLeft);\n                        var _this$_movePoint22 = _slicedToArray(_this$_movePoint21, 2);\n                        g2[4] = _this$_movePoint22[0];\n                        g2[5] = _this$_movePoint22[1];\n                        var _this$_movePoint23 = this._movePoint(pointA1, projectedRight);\n                        var _this$_movePoint24 = _slicedToArray(_this$_movePoint23, 2);\n                        g2[8] = _this$_movePoint24[0];\n                        g2[9] = _this$_movePoint24[1];\n                        break;\n                      case 3:\n                        displacementVector = this._countVector(pointC, dragCoordinate);\n                        projectedLeft = this._projectVectorOnVector(displacementVector, this._countVector(pointB, pointC));\n                        projectedRight = this._projectVectorOnVector(displacementVector, this._countVector(pointD, pointC));\n                        var _this$_movePoint25 = this._movePoint(pointB, projectedRight);\n                        var _this$_movePoint26 = _slicedToArray(_this$_movePoint25, 2);\n                        g2[2] = _this$_movePoint26[0];\n                        g2[3] = _this$_movePoint26[1];\n                        var _this$_movePoint27 = this._movePoint(pointC, displacementVector);\n                        var _this$_movePoint28 = _slicedToArray(_this$_movePoint27, 2);\n                        g2[4] = _this$_movePoint28[0];\n                        g2[5] = _this$_movePoint28[1];\n                        var _this$_movePoint29 = this._movePoint(pointD, projectedLeft);\n                        var _this$_movePoint30 = _slicedToArray(_this$_movePoint29, 2);\n                        g2[6] = _this$_movePoint30[0];\n                        g2[7] = _this$_movePoint30[1];\n                        break;\n                    }\n                  }\n                }\n\n                // bug: ol, bad calculation circle geom extent\n                if (geometry.getType() == 'Circle') geometry.setCenterAndRadius(geometry.getCenter(), geometry.getRadius());\n                return g2;\n              }.bind(this));\n              if (this.get('enableRotatedTransform') && viewRotation !== 0) {\n                //geometry.rotate(viewRotation, rotationCenter);\n                geometry.rotate(viewRotation, this.getMap().getView().getCenter());\n              }\n              f.setGeometry(geometry);\n            }\n            this.drawSketch_();\n            this.dispatchEvent({\n              type: 'scaling',\n              feature: this.selection_.item(0),\n              features: this.selection_,\n              scale: [scx, scy],\n              pixel: evt.pixel,\n              coordinate: evt.coordinate\n            });\n            break;\n          }\n        default:\n          break;\n      }\n      this.isUpdating_ = false;\n    }\n    /**\r\n     * @param {ol.MapBrowserEvent} evt Event.\r\n     * @private\r\n     */\n  }, {\n    key: \"handleMoveEvent_\",\n    value: function handleMoveEvent_(evt) {\n      if (!this._handleEvent(evt, this.features_)) return;\n      // console.log(\"handleMoveEvent\");\n      if (!this.mode_) {\n        var sel = this.getFeatureAtPixel_(evt.pixel);\n        var element = evt.map.getTargetElement();\n        if (sel.feature) {\n          var c = sel.handle ? this.Cursors[(sel.handle || 'default') + (sel.constraint || '') + (sel.option || '')] : this.Cursors.select;\n          if (this.previousCursor_ === undefined) {\n            this.previousCursor_ = element.style.cursor;\n          }\n          ol_ext_element.setCursor(element, c);\n        } else {\n          if (this.previousCursor_ !== undefined) {\n            ol_ext_element.setCursor(element, this.previousCursor_);\n          }\n          this.previousCursor_ = undefined;\n        }\n      }\n    }\n    /**\r\n     * @param {ol.MapBrowserEvent} evt Map browser event.\r\n     * @return {boolean} `false` to stop the drag sequence.\r\n     */\n  }, {\n    key: \"handleUpEvent_\",\n    value: function handleUpEvent_(evt) {\n      // remove rotate0 cursor on Up event, otherwise it's stuck on grab/grabbing\n      if (this.mode_ === 'rotate') {\n        var element = evt.map.getTargetElement();\n        ol_ext_element.setCursor(element, this.Cursors[\"default\"]);\n        this.previousCursor_ = undefined;\n      }\n\n      //dispatchEvent\n      this.dispatchEvent({\n        type: this.mode_ + 'end',\n        feature: this.selection_.item(0),\n        features: this.selection_,\n        oldgeom: this.geoms_[0],\n        oldgeoms: this.geoms_\n      });\n      this.drawSketch_();\n      this.mode_ = null;\n      return false;\n    }\n    /** Set the point radius to calculate handles on points\r\n     *  @param {number|Array<number>|function} [pointRadius=0] radius for points or a function that takes a feature and returns the radius (or [radiusX, radiusY]). If not null show handles to transform the points\r\n     */\n  }, {\n    key: \"setPointRadius\",\n    value: function setPointRadius(pointRadius) {\n      if (typeof pointRadius === 'function') {\n        this._pointRadius = pointRadius;\n      } else {\n        this._pointRadius = function () {\n          return pointRadius;\n        };\n      }\n    }\n    /** Get the features that are selected for transform\r\n     * @return ol.Collection\r\n     */\n  }, {\n    key: \"getFeatures\",\n    value: function getFeatures() {\n      return this.selection_;\n    }\n    /**\r\n     * @private\r\n     */\n  }, {\n    key: \"_projectVectorOnVector\",\n    value: function _projectVectorOnVector(displacement_vector, base) {\n      var k = (displacement_vector[0] * base[0] + displacement_vector[1] * base[1]) / (base[0] * base[0] + base[1] * base[1]);\n      return [base[0] * k, base[1] * k];\n    }\n    /**\r\n     * @private\r\n     */\n  }, {\n    key: \"_countVector\",\n    value: function _countVector(start, end) {\n      return [end[0] - start[0], end[1] - start[1]];\n    }\n    /**\r\n     * @private\r\n     */\n  }, {\n    key: \"_movePoint\",\n    value: function _movePoint(point, displacementVector) {\n      return [point[0] + displacementVector[0], point[1] + displacementVector[1]];\n    }\n  }]);\n}(ol_interaction_Pointer);\n\n/** Cursors for transform\r\n*/\nol_interaction_Transform.prototype.Cursors = {\n  'default': 'auto',\n  'select': 'pointer',\n  'translate': 'move',\n  'rotate': 'move',\n  'rotate0': 'move',\n  'scale': 'nesw-resize',\n  'scale1': 'nwse-resize',\n  'scale2': 'nesw-resize',\n  'scale3': 'nwse-resize',\n  'scalev': 'ew-resize',\n  'scaleh1': 'ns-resize',\n  'scalev2': 'ew-resize',\n  'scaleh3': 'ns-resize'\n};\nexport default ol_interaction_Transform;","map":{"version":3,"names":["ol_style_Style","ol_style_Stroke","ol_source_Vector","ol_style_Fill","ol_layer_Vector","ol_geom_Point","ol_Feature","ol_Collection","ol_interaction_Pointer","ol_style_RegularShape","fromExtent","ol_geom_Polygon_fromExtent","boundingExtent","ol_extent_boundingExtent","buffer","ol_extent_buffer","createEmpty","ol_extent_createEmpty","extend","ol_extent_extend","getCenter","ol_extent_getCenter","unByKey","ol_Observable_unByKey","ol_geom_Polygon","ol_ext_element","ol_interaction_Transform","_ol_interaction_Point","olinteractionTransform","options","_this","_classCallCheck","_callSuper","handleDownEvent","e","self","handleDownEvent_","handleDragEvent","handleDragEvent_","handleMoveEvent","handleMoveEvent_","handleUpEvent","handleUpEvent_","selection_","handles_","overlayLayer_","source","features","useSpatialIndex","wrapX","name","displayInLayerSwitcher","style","feature","get","updateWhileAnimating","updateWhileInteracting","features_","filter","_filter","layers_","layers","Array","_handleEvent","condition","addFn_","addCondition","setPointRadius","pointRadius","set","translateFeature","translate","translateBBox","stretch","scale","rotate","keepAspectRatio","originalEvent","shiftKey","modifyCenter","metaKey","ctrlKey","noFlip","selection","hitTolerance","enableRotatedTransform","keepRectangle","on","drawSketch_","setDefaultStyle","_inherits","_createClass","key","value","setMap","map","oldMap","getMap","removeLayer","previousCursor_","setCursor","undefined","_superPropGet","select","isTouch","test","getViewport","className","setActive","b","setVisible","stroke","pointStroke","color","width","strokedash","lineDash","fill0","fill","pointFill","circle","radius","displacement","points","setDisplacement","getAnchor","bigpt","angle","Math","PI","smallpt","createStyle","img","image","setStyle","olstyle","i","length","im","getImage","setScale","tx","getText","setOffsetX","getFeatureAtPixel_","pixel","forEachFeatureAtPixel","layer","found","bbox_","handle","constraint","option","forEach","f","getArray","some","getGeometryRotateToZero_","clone","origGeom","getGeometry","viewRotation","getView","getRotation","rotGeom","_isRectangle","geom","getType","coords","getCoordinates","center","item","getSource","clear","getLength","ext","getExtent","slice","unshift","extendExt","bind","ptRadius","_pointRadius","ispt_","addFeature","geometry","center_","p","getPixelFromCoordinate","dx","dy","getCoordinateFromPixel","g","push","iscircle_","addFeatures","add","index","indexOf","removeAt","watchFeatures_","dispatchEvent","type","setSelection","_featureListeners","l","isUpdating_","evt","sel","mode_","opt_","constraint_","coordinate_","coordinate","pixel_","geoms_","rotatedGeoms_","extent","rotExtent","extent_","rotatedExtent_","element","getTargetElement","Cursors","rotate0","cursor","angle_","atan2","setCenter","c","j","pt0","pt","a","ispt","setCenterAndRadius","getRadius","setGeometry","deltaX","deltaY","delta","extentCoordinates","Number","opt","downCoordinate","dragCoordinate","downPoint","dragPoint","scx","scy","displacementVector","centerPoint","min","applyTransform","g1","g2","dim","pointArray","pointA","pointB","pointC","pointD","pointA1","base","_countVector","projectedVector","_projectVectorOnVector","nextIndex","coordsToChange","concat","_toConsumableArray","includes","projectedLeft","projectedRight","_this$_movePoint","_movePoint","_this$_movePoint2","_slicedToArray","_this$_movePoint3","_this$_movePoint4","_this$_movePoint5","_this$_movePoint6","_this$_movePoint7","_this$_movePoint8","_this$_movePoint9","_this$_movePoint10","_this$_movePoint11","_this$_movePoint12","_this$_movePoint13","_this$_movePoint14","_this$_movePoint15","_this$_movePoint16","_this$_movePoint17","_this$_movePoint18","_this$_movePoint19","_this$_movePoint20","_this$_movePoint21","_this$_movePoint22","_this$_movePoint23","_this$_movePoint24","_this$_movePoint25","_this$_movePoint26","_this$_movePoint27","_this$_movePoint28","_this$_movePoint29","_this$_movePoint30","oldgeom","oldgeoms","getFeatures","displacement_vector","k","start","end","point","prototype"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol-ext/interaction/Transform.js"],"sourcesContent":["import ol_style_Style from 'ol/style/Style.js'\r\nimport ol_style_Stroke from 'ol/style/Stroke.js'\r\nimport ol_source_Vector from 'ol/source/Vector.js'\r\nimport ol_style_Fill from 'ol/style/Fill.js'\r\nimport ol_layer_Vector from 'ol/layer/Vector.js'\r\nimport ol_geom_Point from 'ol/geom/Point.js'\r\nimport ol_Feature from 'ol/Feature.js'\r\nimport ol_Collection from 'ol/Collection.js'\r\nimport ol_interaction_Pointer from 'ol/interaction/Pointer.js'\r\nimport ol_style_RegularShape from 'ol/style/RegularShape.js'\r\nimport {fromExtent as ol_geom_Polygon_fromExtent} from 'ol/geom/Polygon.js'\r\nimport {boundingExtent as ol_extent_boundingExtent, buffer as ol_extent_buffer, createEmpty as ol_extent_createEmpty, extend as ol_extent_extend, getCenter as ol_extent_getCenter} from 'ol/extent.js'\r\nimport {unByKey as ol_Observable_unByKey} from 'ol/Observable.js'\r\nimport ol_geom_Polygon from 'ol/geom/Polygon.js'\r\nimport ol_ext_element from '../util/element.js'\r\n\r\n/** Interaction rotate\r\n * @constructor\r\n * @extends {ol_interaction_Pointer}\r\n * @fires select | rotatestart | rotating | rotateend | translatestart | translating | translateend | scalestart | scaling | scaleend\r\n * @param {any} options\r\n *  @param {function} options.filter A function that takes a Feature and a Layer and returns true if the feature may be transformed or false otherwise.\r\n *  @param {Array<ol.Layer>} options.layers array of layers to transform,\r\n *  @param {ol.Collection<ol.Feature>} options.features collection of feature to transform,\r\n *\t@param {ol.EventsConditionType|undefined} options.condition A function that takes an ol.MapBrowserEvent and a feature collection and returns a boolean to indicate whether that event should be handled. default: ol.events.condition.always.\r\n *\t@param {ol.EventsConditionType|undefined} options.addCondition A function that takes an ol.MapBrowserEvent and returns a boolean to indicate whether that event should be handled ie. the feature will be added to the transforms features. default: ol.events.condition.never.\r\n *\t@param {number | undefined} options.hitTolerance Tolerance to select feature in pixel, default 0\r\n *\t@param {bool} options.translateFeature Translate when click on feature\r\n *\t@param {bool} options.translate Can translate the feature\r\n *  @param {bool} options.translateBBox Enable translate when the user drags inside the bounding box\r\n *\t@param {bool} options.stretch can stretch the feature\r\n *\t@param {bool} options.scale can scale the feature\r\n *\t@param {bool} options.rotate can rotate the feature\r\n *\t@param {bool} options.noFlip prevent the feature geometry to flip, default false\r\n *\t@param {bool} options.selection the intraction handle selection/deselection, if not use the select prototype to add features to transform, default true\r\n *\t@param {ol.events.ConditionType | undefined} options.keepAspectRatio A function that takes an ol.MapBrowserEvent and returns a boolean to keep aspect ratio, default ol.events.condition.shiftKeyOnly.\r\n *\t@param {ol.events.ConditionType | undefined} options.modifyCenter A function that takes an ol.MapBrowserEvent and returns a boolean to apply scale & strech from the center, default ol.events.condition.metaKey or ol.events.condition.ctrlKey.\r\n *\t@param {boolean} options.enableRotatedTransform Enable transform when map is rotated\r\n *\t@param {boolean} [options.keepRectangle=false] keep rectangle when possible\r\n *  @param {number} [options.buffer] Increase the extent used as bounding box, default 0\r\n *\t@param {*} options.style list of ol.style for handles\r\n *  @param {number|Array<number>|function} [options.pointRadius=0] radius for points or a function that takes a feature and returns the radius (or [radiusX, radiusY]). If not null show handles to transform the points\r\n */\r\nvar ol_interaction_Transform = class olinteractionTransform extends ol_interaction_Pointer {\r\n  constructor(options) {\r\n    options = options || {}\r\n    // Extend pointer\r\n    super({\r\n      handleDownEvent: function(e) { return self.handleDownEvent_(e) },\r\n      handleDragEvent: function(e) { return this.handleDragEvent_(e) },\r\n      handleMoveEvent: function(e) { return this.handleMoveEvent_(e) },\r\n      handleUpEvent: function(e) { return this.handleUpEvent_(e) },\r\n    })\r\n    \r\n    var self = this\r\n    this.selection_ = new ol_Collection()\r\n\r\n    // Create a new overlay layer for the sketch\r\n    this.handles_ = new ol_Collection()\r\n    this.overlayLayer_ = new ol_layer_Vector({\r\n      source: new ol_source_Vector({\r\n        features: this.handles_,\r\n        useSpatialIndex: false,\r\n        wrapX: false // For vector editing across the -180° and 180° meridians to work properly, this should be set to false\r\n      }),\r\n      name: 'Transform overlay',\r\n      displayInLayerSwitcher: false,\r\n      // Return the style according to the handle type\r\n      style: function (feature) {\r\n        return (self.style[(feature.get('handle') || 'default') + (feature.get('constraint') || '') + (feature.get('option') || '')])\r\n      },\r\n      updateWhileAnimating: true,\r\n      updateWhileInteracting: true,\r\n    })\r\n\r\n    // Collection of feature to transform\r\n    this.features_ = options.features\r\n    // Filter or list of layers to transform\r\n    if (typeof (options.filter) === 'function')\r\n      this._filter = options.filter\r\n    this.layers_ = options.layers ? (options.layers instanceof Array) ? options.layers : [options.layers] : null\r\n\r\n    this._handleEvent = options.condition || function () { return true }\r\n    this.addFn_ = options.addCondition || function () { return false }\r\n    this.setPointRadius(options.pointRadius)\r\n    /* Translate when click on feature */\r\n    this.set('translateFeature', (options.translateFeature !== false))\r\n    /* Can translate the feature */\r\n    this.set('translate', (options.translate !== false))\r\n    /* Translate when click on the bounding box */\r\n    this.set('translateBBox', (options.translateBBox === true))\r\n    /* Can stretch the feature */\r\n    this.set('stretch', (options.stretch !== false))\r\n    /* Can scale the feature */\r\n    this.set('scale', (options.scale !== false))\r\n    /* Can rotate the feature */\r\n    this.set('rotate', (options.rotate !== false))\r\n    /* Keep aspect ratio */\r\n    this.set('keepAspectRatio', (options.keepAspectRatio || function (e) { return e.originalEvent.shiftKey }))\r\n    /* Modify center */\r\n    this.set('modifyCenter', (options.modifyCenter || function (e) { return e.originalEvent.metaKey || e.originalEvent.ctrlKey }))\r\n    /* Prevent flip */\r\n    this.set('noFlip', (options.noFlip || false))\r\n    /* Handle selection */\r\n    this.set('selection', (options.selection !== false))\r\n    /*  */\r\n    this.set('hitTolerance', (options.hitTolerance || 0))\r\n    /* Enable view rotated transforms */\r\n    this.set('enableRotatedTransform', (options.enableRotatedTransform || false))\r\n    /* Keep rectangle angles 90 degrees */\r\n    this.set('keepRectangle', (options.keepRectangle || false))\r\n    /* Add buffer to the feature's extent */\r\n    this.set('buffer', (options.buffer || 0))\r\n\r\n    // Force redraw when changed\r\n    this.on('propertychange', function () {\r\n      this.drawSketch_()\r\n    })\r\n\r\n    // setstyle\r\n    this.setDefaultStyle()\r\n  }\r\n  /**\r\n   * Remove the interaction from its current map, if any,  and attach it to a new\r\n   * map, if any. Pass `null` to just remove the interaction from the current map.\r\n   * @param {ol.Map} map Map.\r\n   * @api stable\r\n   */\r\n  setMap(map) {\r\n    var oldMap = this.getMap()\r\n    if (oldMap) {\r\n      oldMap.removeLayer(this.overlayLayer_)\r\n      if (this.previousCursor_) {\r\n        ol_ext_element.setCursor(oldMap, this.previousCursor_)\r\n      }\r\n      this.previousCursor_ = undefined\r\n    }\r\n    super.setMap(map)\r\n    this.overlayLayer_.setMap(map)\r\n    if (map === null) {\r\n      this.select(null)\r\n    }\r\n    if (map !== null) {\r\n      this.isTouch = /touch/.test(map.getViewport().className)\r\n      this.setDefaultStyle()\r\n    }\r\n  }\r\n  /**\r\n   * Activate/deactivate interaction\r\n   * @param {bool}\r\n   * @api stable\r\n   */\r\n  setActive(b) {\r\n    this.select(null)\r\n    if (this.overlayLayer_) this.overlayLayer_.setVisible(b)\r\n    super.setActive(b)\r\n  }\r\n  /** Set default sketch style\r\n   * @param {Object} [options]\r\n   *  @param {ol_style_Stroke} [stroke] stroke style for selection rectangle, default red dash\r\n   *  @param {ol_style_Fill} [fill] fill style for selection rectangle, default red\r\n   *  @param {ol_style_Stroke} [pointStroke] stroke style for handles, default red\r\n   *  @param {ol_style_Fill} [pointFill] fill style for handles, default white\r\n   */\r\n  setDefaultStyle(options) {\r\n    options = options || {}\r\n    // Style\r\n    var stroke = options.pointStroke || new ol_style_Stroke({ color: [255, 0, 0, 1], width: 1 })\r\n    var strokedash = options.stroke || new ol_style_Stroke({ color: [255, 0, 0, 1], width: 1, lineDash: [4, 4] })\r\n    var fill0 = options.fill || new ol_style_Fill({ color: [255, 0, 0, 0.01] })\r\n    var fill = options.pointFill || new ol_style_Fill({ color: [255, 255, 255, 0.8] })\r\n    var circle = new ol_style_RegularShape({\r\n      fill: fill,\r\n      stroke: stroke,\r\n      radius: this.isTouch ? 12 : 6,\r\n      displacement: this.isTouch ? [24, -24] : [12, -12],\r\n      points: 15\r\n    })\r\n    // Old version with no displacement\r\n    if (!circle.setDisplacement)\r\n      circle.getAnchor()[0] = this.isTouch ? -10 : -5\r\n    var bigpt = new ol_style_RegularShape({\r\n      fill: fill,\r\n      stroke: stroke,\r\n      radius: this.isTouch ? 16 : 8,\r\n      points: 4,\r\n      angle: Math.PI / 4\r\n    })\r\n    var smallpt = new ol_style_RegularShape({\r\n      fill: fill,\r\n      stroke: stroke,\r\n      radius: this.isTouch ? 12 : 6,\r\n      points: 4,\r\n      angle: Math.PI / 4\r\n    })\r\n    function createStyle(img, stroke, fill) {\r\n      return [new ol_style_Style({ image: img, stroke: stroke, fill: fill })]\r\n    }\r\n    /** Style for handles */\r\n    this.style = {\r\n      'default': createStyle(bigpt, strokedash, fill0),\r\n      'translate': createStyle(bigpt, stroke, fill),\r\n      'rotate': createStyle(circle, stroke, fill),\r\n      'rotate0': createStyle(bigpt, stroke, fill),\r\n      'scale': createStyle(bigpt, stroke, fill),\r\n      'scale1': createStyle(bigpt, stroke, fill),\r\n      'scale2': createStyle(bigpt, stroke, fill),\r\n      'scale3': createStyle(bigpt, stroke, fill),\r\n      'scalev': createStyle(smallpt, stroke, fill),\r\n      'scaleh1': createStyle(smallpt, stroke, fill),\r\n      'scalev2': createStyle(smallpt, stroke, fill),\r\n      'scaleh3': createStyle(smallpt, stroke, fill),\r\n    }\r\n    this.drawSketch_()\r\n  }\r\n  /**\r\n   * Set sketch style.\r\n   * @param {style} style Style name: 'default','translate','rotate','rotate0','scale','scale1','scale2','scale3','scalev','scaleh1','scalev2','scaleh3'\r\n   * @param {ol.style.Style|Array<ol.style.Style>} olstyle\r\n   * @api stable\r\n   */\r\n  setStyle(style, olstyle) {\r\n    if (!olstyle)\r\n      return\r\n    if (olstyle instanceof Array)\r\n      this.style[style] = olstyle\r\n    else\r\n      this.style[style] = [olstyle]\r\n    for (var i = 0; i < this.style[style].length; i++) {\r\n      var im = this.style[style][i].getImage()\r\n      if (im) {\r\n        if (style == 'rotate') {\r\n          im.getAnchor()[0] = -5\r\n        }\r\n        if (this.isTouch)\r\n          im.setScale(1.8)\r\n      }\r\n      var tx = this.style[style][i].getText()\r\n      if (tx) {\r\n        if (style == 'rotate')\r\n          tx.setOffsetX(this.isTouch ? 14 : 7)\r\n        if (this.isTouch)\r\n          tx.setScale(1.8)\r\n      }\r\n    }\r\n    this.drawSketch_()\r\n  }\r\n  /** Get Feature at pixel\r\n   * @param {ol.Pixel}\r\n   * @return {ol.feature}\r\n   * @private\r\n   */\r\n  getFeatureAtPixel_(pixel) {\r\n    var self = this\r\n    return this.getMap().forEachFeatureAtPixel(pixel,\r\n      function (feature, layer) {\r\n        var found = false\r\n        // Overlay ?\r\n        if (!layer) {\r\n          if (feature === self.bbox_) {\r\n            if (self.get('translateBBox')) {\r\n              return { feature: feature, handle: 'translate', constraint: '', option: '' }\r\n            } else {\r\n              return false\r\n            }\r\n          }\r\n          self.handles_.forEach(function (f) {\r\n            if (f === feature)\r\n              found = true\r\n          })\r\n          if (found)\r\n            return { feature: feature, handle: feature.get('handle'), constraint: feature.get('constraint'), option: feature.get('option') }\r\n        }\r\n        // No seletion\r\n        if (!self.get('selection')) {\r\n          // Return the currently selected feature the user is interacting with.\r\n          if (self.selection_.getArray().some(function (f) { return feature === f })) {\r\n            return { feature: feature }\r\n          }\r\n          return null\r\n        }\r\n        // filter condition\r\n        if (self._filter) {\r\n          if (self._filter(feature, layer))\r\n            return { feature: feature }\r\n          else\r\n            return null\r\n        }\r\n\r\n        // feature belong to a layer\r\n        else if (self.layers_) {\r\n          for (var i = 0; i < self.layers_.length; i++) {\r\n            if (self.layers_[i] === layer)\r\n              return { feature: feature }\r\n          }\r\n          return null\r\n        }\r\n\r\n        // feature in the collection\r\n        else if (self.features_) {\r\n          self.features_.forEach(function (f) {\r\n            if (f === feature)\r\n              found = true\r\n          })\r\n          if (found)\r\n            return { feature: feature }\r\n          else\r\n            return null\r\n        }\r\n\r\n        // Others\r\n        else\r\n          return { feature: feature }\r\n      },\r\n      { hitTolerance: this.get('hitTolerance') }\r\n    ) || {}\r\n  }\r\n  /** Rotate feature from map view rotation\r\n   * @param {ol.Feature} f the feature\r\n   * @param {boolean} clone clone resulting geom\r\n   * @param {ol.geom.Geometry} rotated geometry\r\n   */\r\n  getGeometryRotateToZero_(f, clone) {\r\n    var origGeom = f.getGeometry()\r\n    var viewRotation = this.getMap().getView().getRotation()\r\n    if (viewRotation === 0 || !this.get('enableRotatedTransform')) {\r\n      return (clone) ? origGeom.clone() : origGeom\r\n    }\r\n    var rotGeom = origGeom.clone()\r\n    rotGeom.rotate(viewRotation * -1, this.getMap().getView().getCenter())\r\n    return rotGeom\r\n  }\r\n  /** Test if rectangle\r\n   * @param {ol.Geometry} geom\r\n   * @returns {boolean}\r\n   * @private\r\n   */\r\n  _isRectangle(geom) {\r\n    if (this.get('keepRectangle') && geom.getType() === 'Polygon') {\r\n      var coords = geom.getCoordinates()[0]\r\n      return coords.length === 5\r\n    }\r\n    return false\r\n  }\r\n  /** Draw transform sketch\r\n  * @param {boolean} draw only the center\r\n  */\r\n  drawSketch_(center) {\r\n    var i, f, geom\r\n    var keepRectangle = this.selection_.item(0) && this._isRectangle(this.selection_.item(0).getGeometry())\r\n    this.overlayLayer_.getSource().clear()\r\n    if (!this.selection_.getLength())\r\n      return\r\n    var viewRotation = this.getMap().getView().getRotation()\r\n    var ext = this.getGeometryRotateToZero_(this.selection_.item(0)).getExtent()\r\n    var coords\r\n    if (keepRectangle) {\r\n      coords = this.getGeometryRotateToZero_(this.selection_.item(0)).getCoordinates()[0].slice(0, 4)\r\n      coords.unshift(coords[3])\r\n    }\r\n    // Clone and extend\r\n    ext = ol_extent_buffer(ext, this.get('buffer'))\r\n    this.selection_.forEach(function (f) {\r\n      var extendExt = this.getGeometryRotateToZero_(f).getExtent()\r\n      ol_extent_extend(ext, extendExt)\r\n    }.bind(this))\r\n\r\n    var ptRadius = (this.selection_.getLength() === 1 ? this._pointRadius(this.selection_.item(0)) : 0)\r\n    if (ptRadius && !(ptRadius instanceof Array))\r\n      ptRadius = [ptRadius, ptRadius]\r\n\r\n    if (center === true) {\r\n      if (!this.ispt_) {\r\n        this.overlayLayer_.getSource().addFeature(new ol_Feature({ geometry: new ol_geom_Point(this.center_), handle: 'rotate0' }))\r\n        geom = ol_geom_Polygon_fromExtent(ext)\r\n        if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n          geom.rotate(viewRotation, this.getMap().getView().getCenter())\r\n        }\r\n        f = this.bbox_ = new ol_Feature(geom)\r\n        this.overlayLayer_.getSource().addFeature(f)\r\n      }\r\n    } else {\r\n      if (this.ispt_) {\r\n        // Calculate extent arround the point\r\n        var p = this.getMap().getPixelFromCoordinate(ol_extent_getCenter(ext))\r\n        if (p) {\r\n          var dx = ptRadius ? ptRadius[0] || 10 : 10\r\n          var dy = ptRadius ? ptRadius[1] || 10 : 10\r\n          ext = ol_extent_boundingExtent([\r\n            this.getMap().getCoordinateFromPixel([p[0] - dx, p[1] - dy]),\r\n            this.getMap().getCoordinateFromPixel([p[0] + dx, p[1] + dy])\r\n          ])\r\n        }\r\n      }\r\n      geom = keepRectangle ? new ol_geom_Polygon([coords]) : ol_geom_Polygon_fromExtent(ext)\r\n      if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n        geom.rotate(viewRotation, this.getMap().getView().getCenter())\r\n      }\r\n      f = this.bbox_ = new ol_Feature(geom)\r\n      var features = []\r\n      var g = geom.getCoordinates()[0]\r\n      if (!this.ispt_ || ptRadius) {\r\n        features.push(f)\r\n        // Middle\r\n        if (!this.iscircle_ && !this.ispt_ && this.get('stretch') && this.get('scale'))\r\n          for (i = 0; i < g.length - 1; i++) {\r\n            f = new ol_Feature({ geometry: new ol_geom_Point([(g[i][0] + g[i + 1][0]) / 2, (g[i][1] + g[i + 1][1]) / 2]), handle: 'scale', constraint: i % 2 ? \"h\" : \"v\", option: i })\r\n            features.push(f)\r\n          }\r\n        // Handles\r\n        if (this.get('scale'))\r\n          for (i = 0; i < g.length - 1; i++) {\r\n            f = new ol_Feature({ geometry: new ol_geom_Point(g[i]), handle: 'scale', option: i })\r\n            features.push(f)\r\n          }\r\n        // Center\r\n        if (this.get('translate') && !this.get('translateFeature')) {\r\n          f = new ol_Feature({ geometry: new ol_geom_Point([(g[0][0] + g[2][0]) / 2, (g[0][1] + g[2][1]) / 2]), handle: 'translate' })\r\n          features.push(f)\r\n        }\r\n      }\r\n      // Rotate\r\n      if (!this.iscircle_ && this.get('rotate')) {\r\n        f = new ol_Feature({ geometry: new ol_geom_Point(g[3]), handle: 'rotate' })\r\n        features.push(f)\r\n      }\r\n      // Add sketch\r\n      this.overlayLayer_.getSource().addFeatures(features)\r\n    }\r\n\r\n  }\r\n  /** Select a feature to transform\r\n  * @param {ol.Feature} feature the feature to transform\r\n  * @param {boolean} add true to add the feature to the selection, default false\r\n  */\r\n  select(feature, add) {\r\n    if (!feature) {\r\n      if (this.selection_) {\r\n        this.selection_.clear()\r\n        this.drawSketch_()\r\n      }\r\n      return\r\n    }\r\n    if (!feature.getGeometry || !feature.getGeometry()) return\r\n    // Add to selection\r\n    if (add) {\r\n      this.selection_.push(feature)\r\n    } else {\r\n      var index = this.selection_.getArray().indexOf(feature)\r\n      this.selection_.removeAt(index)\r\n    }\r\n    this.ispt_ = (this.selection_.getLength() === 1 ? (this.selection_.item(0).getGeometry().getType() == \"Point\") : false)\r\n    this.iscircle_ = (this.selection_.getLength() === 1 ? (this.selection_.item(0).getGeometry().getType() == \"Circle\") : false)\r\n    this.drawSketch_()\r\n    this.watchFeatures_()\r\n    // select event\r\n    this.dispatchEvent({ type: 'select', feature: feature, features: this.selection_ })\r\n  }\r\n  /** Update the selection collection.\r\n  * @param {ol.Collection<ol.Feature>} features the features to transform\r\n  */\r\n  setSelection(features) {\r\n    this.selection_.clear()\r\n    features.forEach(function (feature) {\r\n      this.selection_.push(feature)\r\n    }.bind(this))\r\n\r\n    this.ispt_ = (this.selection_.getLength() === 1 ? (this.selection_.item(0).getGeometry().getType() == \"Point\") : false)\r\n    this.iscircle_ = (this.selection_.getLength() === 1 ? (this.selection_.item(0).getGeometry().getType() == \"Circle\") : false)\r\n    this.drawSketch_()\r\n    this.watchFeatures_()\r\n    // select event\r\n    this.dispatchEvent({ type: 'select', features: this.selection_ })\r\n  }\r\n  /** Watch selected features\r\n   * @private\r\n   */\r\n  watchFeatures_() {\r\n    // Listen to feature modification\r\n    if (this._featureListeners) {\r\n      this._featureListeners.forEach(function (l) {\r\n        ol_Observable_unByKey(l)\r\n      })\r\n    }\r\n    this._featureListeners = []\r\n    this.selection_.forEach(function (f) {\r\n      this._featureListeners.push(\r\n        f.on('change', function () {\r\n          if (!this.isUpdating_) {\r\n            this.drawSketch_()\r\n          }\r\n        }.bind(this))\r\n      )\r\n    }.bind(this))\r\n  }\r\n  /**\r\n   * @param {ol.MapBrowserEvent} evt Map browser event.\r\n   * @return {boolean} `true` to start the drag sequence.\r\n   * @private\r\n   */\r\n  handleDownEvent_(evt) {\r\n    if (!this._handleEvent(evt, this.selection_))\r\n      return\r\n    var sel = this.getFeatureAtPixel_(evt.pixel)\r\n    var feature = sel.feature\r\n    if (this.selection_.getLength()\r\n      && this.selection_.getArray().indexOf(feature) >= 0\r\n      && ((this.ispt_ && this.get('translate')) || this.get('translateFeature'))) {\r\n      sel.handle = 'translate'\r\n    }\r\n    if (sel.handle) {\r\n      this.mode_ = sel.handle\r\n      this.opt_ = sel.option\r\n      this.constraint_ = sel.constraint\r\n      // Save info\r\n      var viewRotation = this.getMap().getView().getRotation()\r\n      // Get coordinate of the handle (for snapping)\r\n      this.coordinate_ = feature.get('handle') ? feature.getGeometry().getCoordinates() : evt.coordinate;\r\n      this.pixel_ = this.getMap().getCoordinateFromPixel(this.coordinate_) // evt.pixel;\r\n      this.geoms_ = []\r\n      this.rotatedGeoms_ = []\r\n      var extent = ol_extent_createEmpty()\r\n      var rotExtent = ol_extent_createEmpty()\r\n      for (var i = 0, f; f = this.selection_.item(i); i++) {\r\n        this.geoms_.push(f.getGeometry().clone())\r\n        extent = ol_extent_extend(extent, f.getGeometry().getExtent())\r\n        if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n          var rotGeom = this.getGeometryRotateToZero_(f, true)\r\n          this.rotatedGeoms_.push(rotGeom)\r\n          rotExtent = ol_extent_extend(rotExtent, rotGeom.getExtent())\r\n        }\r\n      }\r\n      this.extent_ = (ol_geom_Polygon_fromExtent(extent)).getCoordinates()[0]\r\n      if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n        this.rotatedExtent_ = (ol_geom_Polygon_fromExtent(rotExtent)).getCoordinates()[0]\r\n      }\r\n      if (this.mode_ === 'rotate') {\r\n        this.center_ = this.getCenter() || ol_extent_getCenter(extent)\r\n        // we are now rotating (cursor down on rotate mode), so apply the grabbing cursor\r\n        var element = evt.map.getTargetElement()\r\n        ol_ext_element.setCursor(element, this.Cursors.rotate0)\r\n        this.previousCursor_ = element.style.cursor\r\n      } else {\r\n        this.center_ = ol_extent_getCenter(extent)\r\n      }\r\n      this.angle_ = Math.atan2(this.center_[1] - evt.coordinate[1], this.center_[0] - evt.coordinate[0])\r\n\r\n      this.dispatchEvent({\r\n        type: this.mode_ + 'start',\r\n        feature: this.selection_.item(0),\r\n        features: this.selection_,\r\n        pixel: evt.pixel,\r\n        coordinate: evt.coordinate\r\n      })\r\n      return true\r\n    }\r\n    else if (this.get('selection')) {\r\n      if (feature) {\r\n        if (!this.addFn_(evt))\r\n          this.selection_.clear()\r\n        var index = this.selection_.getArray().indexOf(feature)\r\n        if (index < 0)\r\n          this.selection_.push(feature)\r\n        else\r\n          this.selection_.removeAt(index)\r\n      } else {\r\n        this.selection_.clear()\r\n      }\r\n      this.ispt_ = this.selection_.getLength() === 1 ? (this.selection_.item(0).getGeometry().getType() == \"Point\") : false\r\n      this.iscircle_ = (this.selection_.getLength() === 1 ? (this.selection_.item(0).getGeometry().getType() == \"Circle\") : false)\r\n      this.drawSketch_()\r\n      this.watchFeatures_()\r\n      this.dispatchEvent({ type: 'select', feature: feature, features: this.selection_, pixel: evt.pixel, coordinate: evt.coordinate })\r\n      return false\r\n    }\r\n  }\r\n  /**\r\n   * Get the rotation center\r\n   * @return {ol.coordinate|undefined}\r\n   */\r\n  getCenter() {\r\n    return this.get('center')\r\n  }\r\n  /**\r\n   * Set the rotation center\r\n   * @param {ol.coordinate|undefined} c the center point, default center on the objet\r\n   */\r\n  setCenter(c) {\r\n    return this.set('center', c)\r\n  }\r\n  /**\r\n   * @param {ol.MapBrowserEvent} evt Map browser event.\r\n   * @private\r\n   */\r\n  handleDragEvent_(evt) {\r\n    if (!this._handleEvent(evt, this.features_))\r\n      return\r\n    var viewRotation = this.getMap().getView().getRotation()\r\n    var i, j, f, geometry\r\n    var pt0 = [this.coordinate_[0], this.coordinate_[1]]\r\n    var pt = [evt.coordinate[0], evt.coordinate[1]]\r\n    this.isUpdating_ = true\r\n    switch (this.mode_) {\r\n      case 'rotate': {\r\n        var a = Math.atan2(this.center_[1] - pt[1], this.center_[0] - pt[0])\r\n        if (!this.ispt) {\r\n          // var geometry = this.geom_.clone();\r\n          // geometry.rotate(a-this.angle_, this.center_);\r\n          // this.feature_.setGeometry(geometry);\r\n          for (i = 0, f; f = this.selection_.item(i); i++) {\r\n            geometry = this.geoms_[i].clone()\r\n            geometry.rotate(a - this.angle_, this.center_)\r\n            // bug: ol, bad calculation circle geom extent\r\n            if (geometry.getType() == 'Circle')\r\n              geometry.setCenterAndRadius(geometry.getCenter(), geometry.getRadius())\r\n            f.setGeometry(geometry)\r\n          }\r\n        }\r\n        this.drawSketch_(true)\r\n        this.dispatchEvent({\r\n          type: 'rotating',\r\n          feature: this.selection_.item(0),\r\n          features: this.selection_,\r\n          angle: a - this.angle_,\r\n          pixel: evt.pixel,\r\n          coordinate: evt.coordinate\r\n        })\r\n        break\r\n      }\r\n      case 'translate': {\r\n        var deltaX = pt[0] - pt0[0]\r\n        var deltaY = pt[1] - pt0[1]\r\n\r\n        //this.feature_.getGeometry().translate(deltaX, deltaY);\r\n        for (i = 0, f; f = this.selection_.item(i); i++) {\r\n          f.getGeometry().translate(deltaX, deltaY)\r\n        }\r\n        this.handles_.forEach(function (f) {\r\n          f.getGeometry().translate(deltaX, deltaY)\r\n        })\r\n\r\n        this.coordinate_ = evt.coordinate\r\n        this.dispatchEvent({\r\n          type: 'translating',\r\n          feature: this.selection_.item(0),\r\n          features: this.selection_,\r\n          delta: [deltaX, deltaY],\r\n          pixel: evt.pixel,\r\n          coordinate: evt.coordinate\r\n        })\r\n        break\r\n      }\r\n      case 'scale': {\r\n        var center = this.center_\r\n        if (this.get('modifyCenter')(evt)) {\r\n          var extentCoordinates = this.extent_\r\n          if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n            extentCoordinates = this.rotatedExtent_\r\n          }\r\n          center = extentCoordinates[(Number(this.opt_) + 2) % 4]\r\n        }\r\n        var keepRectangle = (this.geoms_.length == 1 && this._isRectangle(this.geoms_[0]))\r\n        var stretch = this.constraint_\r\n        var opt = this.opt_\r\n\r\n        var downCoordinate = this.coordinate_\r\n        var dragCoordinate = evt.coordinate\r\n        if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n          var downPoint = new ol_geom_Point(this.coordinate_)\r\n          downPoint.rotate(viewRotation * -1, center)\r\n          downCoordinate = downPoint.getCoordinates()\r\n\r\n          var dragPoint = new ol_geom_Point(evt.coordinate)\r\n          dragPoint.rotate(viewRotation * -1, center)\r\n          dragCoordinate = dragPoint.getCoordinates()\r\n        }\r\n\r\n        var scx = ((dragCoordinate)[0] - (center)[0]) / (downCoordinate[0] - (center)[0])\r\n        var scy = ((dragCoordinate)[1] - (center)[1]) / (downCoordinate[1] - (center)[1])\r\n        var displacementVector = [dragCoordinate[0] - downCoordinate[0], (dragCoordinate)[1] - downCoordinate[1]]\r\n\r\n        if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n          var centerPoint = new ol_geom_Point(center)\r\n          centerPoint.rotate(viewRotation * -1, this.getMap().getView().getCenter())\r\n          center = centerPoint.getCoordinates()\r\n        }\r\n\r\n        if (this.get('noFlip')) {\r\n          if (scx < 0)\r\n            scx = -scx\r\n          if (scy < 0)\r\n            scy = -scy\r\n        }\r\n\r\n        if (this.constraint_) {\r\n          if (this.constraint_ == \"h\")\r\n            scx = 1\r\n          else\r\n            scy = 1\r\n        } else {\r\n          if (this.get('keepAspectRatio')(evt)) {\r\n            scx = scy = Math.min(scx, scy)\r\n          }\r\n        }\r\n\r\n        for (i = 0, f; f = this.selection_.item(i); i++) {\r\n          geometry = (viewRotation === 0 || !this.get('enableRotatedTransform')) ? this.geoms_[i].clone() : this.rotatedGeoms_[i].clone()\r\n          geometry.applyTransform(function (g1, g2, dim) {\r\n            if (dim < 2) return g2\r\n\r\n            if (!keepRectangle) {\r\n              for (j = 0; j < g1.length; j += dim) {\r\n                if (scx != 1)\r\n                  g2[j] = center[0] + (g1[j] - center[0]) * scx\r\n                if (scy != 1)\r\n                  g2[j + 1] = center[1] + (g1[j + 1] - center[1]) * scy\r\n              }\r\n            } else {\r\n              var pointArray = [[6], [0, 8], [2], [4]]\r\n              var pointA = [g1[0], g1[1]]\r\n              var pointB = [g1[2], g1[3]]\r\n              var pointC = [g1[4], g1[5]]\r\n              var pointD = [g1[6], g1[7]]\r\n              var pointA1 = [g1[8], g1[9]]\r\n\r\n              if (stretch) {\r\n                var base = (opt % 2 === 0) ? this._countVector(pointA, pointB) : this._countVector(pointD, pointA)\r\n                var projectedVector = this._projectVectorOnVector(displacementVector, base)\r\n                var nextIndex = opt + 1 < pointArray.length ? opt + 1 : 0\r\n                var coordsToChange = [...pointArray[opt], ...pointArray[nextIndex]]\r\n\r\n                for (j = 0; j < g1.length; j += dim) {\r\n                  g2[j] = coordsToChange.includes(j) ? g1[j] + projectedVector[0] : g1[j]\r\n                  g2[j + 1] = coordsToChange.includes(j) ? g1[j + 1] + projectedVector[1] : g1[j + 1]\r\n                }\r\n              } else {\r\n                var projectedLeft, projectedRight\r\n                switch (opt) {\r\n                  case 0:\r\n                    displacementVector = this._countVector(pointD, dragCoordinate)\r\n                    projectedLeft = this._projectVectorOnVector(displacementVector, this._countVector(pointC, pointD))\r\n                    projectedRight = this._projectVectorOnVector(displacementVector, this._countVector(pointA, pointD));\r\n                    [g2[0], g2[1]] = this._movePoint(pointA, projectedLeft);\r\n                    [g2[4], g2[5]] = this._movePoint(pointC, projectedRight);\r\n                    [g2[6], g2[7]] = this._movePoint(pointD, displacementVector);\r\n                    [g2[8], g2[9]] = this._movePoint(pointA1, projectedLeft)\r\n                    break\r\n                  case 1:\r\n                    displacementVector = this._countVector(pointA, dragCoordinate)\r\n                    projectedLeft = this._projectVectorOnVector(displacementVector, this._countVector(pointD, pointA))\r\n                    projectedRight = this._projectVectorOnVector(displacementVector, this._countVector(pointB, pointA));\r\n                    [g2[0], g2[1]] = this._movePoint(pointA, displacementVector);\r\n                    [g2[2], g2[3]] = this._movePoint(pointB, projectedLeft);\r\n                    [g2[6], g2[7]] = this._movePoint(pointD, projectedRight);\r\n                    [g2[8], g2[9]] = this._movePoint(pointA1, displacementVector)\r\n                    break\r\n                  case 2:\r\n                    displacementVector = this._countVector(pointB, dragCoordinate)\r\n                    projectedLeft = this._projectVectorOnVector(displacementVector, this._countVector(pointA, pointB))\r\n                    projectedRight = this._projectVectorOnVector(displacementVector, this._countVector(pointC, pointB));\r\n                    [g2[0], g2[1]] = this._movePoint(pointA, projectedRight);\r\n                    [g2[2], g2[3]] = this._movePoint(pointB, displacementVector);\r\n                    [g2[4], g2[5]] = this._movePoint(pointC, projectedLeft);\r\n                    [g2[8], g2[9]] = this._movePoint(pointA1, projectedRight)\r\n                    break\r\n                  case 3:\r\n                    displacementVector = this._countVector(pointC, dragCoordinate)\r\n                    projectedLeft = this._projectVectorOnVector(displacementVector, this._countVector(pointB, pointC))\r\n                    projectedRight = this._projectVectorOnVector(displacementVector, this._countVector(pointD, pointC));\r\n                    [g2[2], g2[3]] = this._movePoint(pointB, projectedRight);\r\n                    [g2[4], g2[5]] = this._movePoint(pointC, displacementVector);\r\n                    [g2[6], g2[7]] = this._movePoint(pointD, projectedLeft)\r\n                    break\r\n                }\r\n              }\r\n            }\r\n\r\n            // bug: ol, bad calculation circle geom extent\r\n            if (geometry.getType() == 'Circle') geometry.setCenterAndRadius(geometry.getCenter(), geometry.getRadius())\r\n            return g2\r\n          }.bind(this))\r\n          if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n            //geometry.rotate(viewRotation, rotationCenter);\r\n            geometry.rotate(viewRotation, this.getMap().getView().getCenter())\r\n          }\r\n          f.setGeometry(geometry)\r\n        }\r\n        this.drawSketch_()\r\n        this.dispatchEvent({\r\n          type: 'scaling',\r\n          feature: this.selection_.item(0),\r\n          features: this.selection_,\r\n          scale: [scx, scy],\r\n          pixel: evt.pixel,\r\n          coordinate: evt.coordinate\r\n        })\r\n        break\r\n      }\r\n      default: break\r\n    }\r\n    this.isUpdating_ = false\r\n  }\r\n  /**\r\n   * @param {ol.MapBrowserEvent} evt Event.\r\n   * @private\r\n   */\r\n  handleMoveEvent_(evt) {\r\n    if (!this._handleEvent(evt, this.features_))\r\n      return\r\n    // console.log(\"handleMoveEvent\");\r\n    if (!this.mode_) {\r\n      var sel = this.getFeatureAtPixel_(evt.pixel)\r\n      var element = evt.map.getTargetElement()\r\n      if (sel.feature) {\r\n        var c = sel.handle ? this.Cursors[(sel.handle || 'default') + (sel.constraint || '') + (sel.option || '')] : this.Cursors.select\r\n\r\n        if (this.previousCursor_ === undefined) {\r\n          this.previousCursor_ = element.style.cursor\r\n        }\r\n        ol_ext_element.setCursor(element, c);\r\n      } else {\r\n        if (this.previousCursor_ !== undefined) {\r\n          ol_ext_element.setCursor(element, this.previousCursor_)\r\n        }\r\n        this.previousCursor_ = undefined\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * @param {ol.MapBrowserEvent} evt Map browser event.\r\n   * @return {boolean} `false` to stop the drag sequence.\r\n   */\r\n  handleUpEvent_(evt) {\r\n    // remove rotate0 cursor on Up event, otherwise it's stuck on grab/grabbing\r\n    if (this.mode_ === 'rotate') {\r\n      var element = evt.map.getTargetElement()\r\n      ol_ext_element.setCursor(element, this.Cursors.default)\r\n      this.previousCursor_ = undefined\r\n    }\r\n\r\n    //dispatchEvent\r\n    this.dispatchEvent({\r\n      type: this.mode_ + 'end',\r\n      feature: this.selection_.item(0),\r\n      features: this.selection_,\r\n      oldgeom: this.geoms_[0],\r\n      oldgeoms: this.geoms_\r\n    })\r\n\r\n    this.drawSketch_()\r\n    this.mode_ = null\r\n    return false\r\n  }\r\n  /** Set the point radius to calculate handles on points\r\n   *  @param {number|Array<number>|function} [pointRadius=0] radius for points or a function that takes a feature and returns the radius (or [radiusX, radiusY]). If not null show handles to transform the points\r\n   */\r\n  setPointRadius(pointRadius) {\r\n    if (typeof (pointRadius) === 'function') {\r\n      this._pointRadius = pointRadius\r\n    } else {\r\n      this._pointRadius = function () { return pointRadius }\r\n    }\r\n  }\r\n  /** Get the features that are selected for transform\r\n   * @return ol.Collection\r\n   */\r\n  getFeatures() {\r\n    return this.selection_;\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n  _projectVectorOnVector(displacement_vector, base) {\r\n    var k = (displacement_vector[0] * base[0] + displacement_vector[1] * base[1]) / (base[0] * base[0] + base[1] * base[1]);\r\n    return [base[0] * k, base[1] * k];\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n  _countVector(start, end) {\r\n    return [end[0] - start[0], end[1] - start[1]];\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n  _movePoint(point, displacementVector) {\r\n    return [point[0]+displacementVector[0], point[1]+displacementVector[1]];\r\n  }\r\n  \r\n  \r\n}\r\n\r\n/** Cursors for transform\r\n*/\r\nol_interaction_Transform.prototype.Cursors = {\r\n  'default': 'auto',\r\n  'select': 'pointer',\r\n  'translate': 'move',\r\n  'rotate': 'move',\r\n  'rotate0': 'move',\r\n  'scale': 'nesw-resize',\r\n  'scale1': 'nwse-resize',\r\n  'scale2': 'nesw-resize',\r\n  'scale3': 'nwse-resize',\r\n  'scalev': 'ew-resize',\r\n  'scaleh1': 'ns-resize',\r\n  'scalev2': 'ew-resize',\r\n  'scaleh3': 'ns-resize'\r\n};\r\n\r\nexport default ol_interaction_Transform\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}