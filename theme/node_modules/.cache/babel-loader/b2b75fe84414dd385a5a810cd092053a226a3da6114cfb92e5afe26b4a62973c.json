{"ast":null,"code":"import _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\n/**\n * @module ol/format/filter/IsBetween\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n * @api\n */\nvar IsBetween = /*#__PURE__*/function (_Comparison) {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} lowerBoundary The lower bound of the range.\n   * @param {!number} upperBoundary The upper bound of the range.\n   */\n  function IsBetween(propertyName, lowerBoundary, upperBoundary) {\n    var _this;\n    _classCallCheck(this, IsBetween);\n    _this = _callSuper(this, IsBetween, ['PropertyIsBetween', propertyName]);\n\n    /**\n     * @type {!number}\n     */\n    _this.lowerBoundary = lowerBoundary;\n\n    /**\n     * @type {!number}\n     */\n    _this.upperBoundary = upperBoundary;\n    return _this;\n  }\n  _inherits(IsBetween, _Comparison);\n  return _createClass(IsBetween);\n}(Comparison);\nexport default IsBetween;","map":{"version":3,"names":["Comparison","IsBetween","_Comparison","propertyName","lowerBoundary","upperBoundary","_this","_classCallCheck","_callSuper","_inherits","_createClass"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/format/filter/IsBetween.js"],"sourcesContent":["/**\n * @module ol/format/filter/IsBetween\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n * @api\n */\nclass IsBetween extends Comparison {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} lowerBoundary The lower bound of the range.\n   * @param {!number} upperBoundary The upper bound of the range.\n   */\n  constructor(propertyName, lowerBoundary, upperBoundary) {\n    super('PropertyIsBetween', propertyName);\n\n    /**\n     * @type {!number}\n     */\n    this.lowerBoundary = lowerBoundary;\n\n    /**\n     * @type {!number}\n     */\n    this.upperBoundary = upperBoundary;\n  }\n}\n\nexport default IsBetween;\n"],"mappings":";;;;AAAA;AACA;AACA;AACA,OAAOA,UAAU,MAAM,iBAAiB;;AAExC;AACA;AACA;AACA;AACA;AAJA,IAKMC,SAAS,0BAAAC,WAAA;EACb;AACF;AACA;AACA;AACA;EACE,SAAAD,UAAYE,YAAY,EAAEC,aAAa,EAAEC,aAAa,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAN,SAAA;IACtDK,KAAA,GAAAE,UAAA,OAAAP,SAAA,GAAM,mBAAmB,EAAEE,YAAY;;IAEvC;AACJ;AACA;IACIG,KAAA,CAAKF,aAAa,GAAGA,aAAa;;IAElC;AACJ;AACA;IACIE,KAAA,CAAKD,aAAa,GAAGA,aAAa;IAAC,OAAAC,KAAA;EACrC;EAACG,SAAA,CAAAR,SAAA,EAAAC,WAAA;EAAA,OAAAQ,YAAA,CAAAT,SAAA;AAAA,EAlBqBD,UAAU;AAqBlC,eAAeC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}