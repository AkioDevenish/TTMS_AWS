{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _superPropGet from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/superPropGet.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.push.js\";\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction } from './Instruction.js';\nimport { defaultLineDash, defaultLineDashOffset } from '../canvas.js';\nvar CanvasLineStringBuilder = /*#__PURE__*/function (_CanvasBuilder) {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n    _classCallCheck(this, CanvasLineStringBuilder);\n    return _callSuper(this, CanvasLineStringBuilder, [tolerance, maxExtent, resolution, pixelRatio]);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  _inherits(CanvasLineStringBuilder, _CanvasBuilder);\n  return _createClass(CanvasLineStringBuilder, [{\n    key: \"drawFlatCoordinates_\",\n    value: function drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      return end;\n    }\n\n    /**\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n  }, {\n    key: \"drawLineString\",\n    value: function drawLineString(lineStringGeometry, feature) {\n      var state = this.state;\n      var strokeStyle = state.strokeStyle;\n      var lineWidth = state.lineWidth;\n      if (strokeStyle === undefined || lineWidth === undefined) {\n        return;\n      }\n      this.updateStrokeStyle(state, this.applyStroke);\n      this.beginGeometry(lineStringGeometry, feature);\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, defaultLineDash, defaultLineDashOffset], beginPathInstruction);\n      var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n      var stride = lineStringGeometry.getStride();\n      this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n      this.hitDetectionInstructions.push(strokeInstruction);\n      this.endGeometry(feature);\n    }\n\n    /**\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n  }, {\n    key: \"drawMultiLineString\",\n    value: function drawMultiLineString(multiLineStringGeometry, feature) {\n      var state = this.state;\n      var strokeStyle = state.strokeStyle;\n      var lineWidth = state.lineWidth;\n      if (strokeStyle === undefined || lineWidth === undefined) {\n        return;\n      }\n      this.updateStrokeStyle(state, this.applyStroke);\n      this.beginGeometry(multiLineStringGeometry, feature);\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, defaultLineDash, defaultLineDashOffset], beginPathInstruction);\n      var ends = multiLineStringGeometry.getEnds();\n      var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n      var stride = multiLineStringGeometry.getStride();\n      var offset = 0;\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.drawFlatCoordinates_(flatCoordinates, offset, /** @type {number} */ends[i], stride);\n      }\n      this.hitDetectionInstructions.push(strokeInstruction);\n      this.endGeometry(feature);\n    }\n\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n  }, {\n    key: \"finish\",\n    value: function finish() {\n      var state = this.state;\n      if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n        this.instructions.push(strokeInstruction);\n      }\n      this.reverseHitDetectionInstructions();\n      this.state = null;\n      return _superPropGet(CanvasLineStringBuilder, \"finish\", this, 3)([]);\n    }\n\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n  }, {\n    key: \"applyStroke\",\n    value: function applyStroke(state) {\n      if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n        this.instructions.push(strokeInstruction);\n        state.lastStroke = this.coordinates.length;\n      }\n      state.lastStroke = 0;\n      _superPropGet(CanvasLineStringBuilder, \"applyStroke\", this, 3)([state]);\n      this.instructions.push(beginPathInstruction);\n    }\n  }]);\n}(CanvasBuilder);\nexport default CanvasLineStringBuilder;","map":{"version":3,"names":["CanvasBuilder","CanvasInstruction","beginPathInstruction","strokeInstruction","defaultLineDash","defaultLineDashOffset","CanvasLineStringBuilder","_CanvasBuilder","tolerance","maxExtent","resolution","pixelRatio","_classCallCheck","_callSuper","_inherits","_createClass","key","value","drawFlatCoordinates_","flatCoordinates","offset","end","stride","myBegin","coordinates","length","myEnd","appendFlatLineCoordinates","moveToLineToInstruction","MOVE_TO_LINE_TO","instructions","push","hitDetectionInstructions","drawLineString","lineStringGeometry","feature","state","strokeStyle","lineWidth","undefined","updateStrokeStyle","applyStroke","beginGeometry","SET_STROKE_STYLE","lineCap","lineJoin","miterLimit","getFlatCoordinates","getStride","endGeometry","drawMultiLineString","multiLineStringGeometry","ends","getEnds","i","ii","finish","lastStroke","reverseHitDetectionInstructions","_superPropGet"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/render/canvas/LineStringBuilder.js"],"sourcesContent":["/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}