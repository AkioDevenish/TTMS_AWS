{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _superPropGet from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/superPropGet.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _objectSpread from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\n/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLBaseTileLayerRenderer, { Uniforms as BaseUniforms, getCacheKey } from './TileLayerBase.js';\nimport { AttributeType } from '../../webgl/Helper.js';\nimport { ELEMENT_ARRAY_BUFFER, STATIC_DRAW } from '../../webgl.js';\nimport { apply as applyTransform } from '../../transform.js';\nimport { boundingExtent, containsCoordinate, getIntersection } from '../../extent.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { fromTransform as mat4FromTransform } from '../../vec/mat4.js';\nimport { toSize } from '../../size.js';\nexport var Uniforms = _objectSpread(_objectSpread({}, BaseUniforms), {}, {\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution',\n  // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX',\n  // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY' // map y coordinate of top edge of texture\n});\nexport var Attributes = {\n  TEXTURE_COORD: 'a_textureCoord'\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nvar attributeDescriptions = [{\n  name: Attributes.TEXTURE_COORD,\n  size: 2,\n  type: AttributeType.FLOAT\n}];\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").TileType} TileTextureType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").default} TileTextureRepresentation\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLBaseTileLayerRenderer<LayerType, TileTextureType, TileTextureRepresentation>}\n * @api\n */\nvar WebGLTileLayerRenderer = /*#__PURE__*/function (_WebGLBaseTileLayerRe) {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  function WebGLTileLayerRenderer(tileLayer, options) {\n    var _this;\n    _classCallCheck(this, WebGLTileLayerRenderer);\n    _this = _callSuper(this, WebGLTileLayerRenderer, [tileLayer, options]);\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    _this.program_;\n\n    /**\n     * @private\n     */\n    _this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    _this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    _this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    _this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    _this.paletteTextures_ = options.paletteTextures || [];\n    return _this;\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  _inherits(WebGLTileLayerRenderer, _WebGLBaseTileLayerRe);\n  return _createClass(WebGLTileLayerRenderer, [{\n    key: \"reset\",\n    value: function reset(options) {\n      _superPropGet(WebGLTileLayerRenderer, \"reset\", this, 3)([options]);\n      this.vertexShader_ = options.vertexShader;\n      this.fragmentShader_ = options.fragmentShader;\n      this.paletteTextures_ = options.paletteTextures || [];\n      if (this.helper) {\n        this.program_ = this.helper.getProgram(this.fragmentShader_, this.vertexShader_);\n      }\n    }\n  }, {\n    key: \"afterHelperCreated\",\n    value: function afterHelperCreated() {\n      this.program_ = this.helper.getProgram(this.fragmentShader_, this.vertexShader_);\n      this.helper.flushBufferData(this.indices_);\n    }\n  }, {\n    key: \"createTileRepresentation\",\n    value: function createTileRepresentation(options) {\n      return new TileTexture(options);\n    }\n  }, {\n    key: \"beforeTilesRender\",\n    value: function beforeTilesRender(frameState, tilesWithAlpha) {\n      _superPropGet(WebGLTileLayerRenderer, \"beforeTilesRender\", this, 3)([frameState, tilesWithAlpha]);\n      this.helper.useProgram(this.program_, frameState);\n    }\n  }, {\n    key: \"renderTile\",\n    value: function renderTile(tileTexture, tileTransform, frameState, renderExtent, tileResolution, tileSize, tileOrigin, tileExtent, depth, gutter, alpha) {\n      var gl = this.helper.getGL();\n      this.helper.bindBuffer(tileTexture.coords);\n      this.helper.bindBuffer(this.indices_);\n      this.helper.enableAttributes(attributeDescriptions);\n      var textureSlot = 0;\n      while (textureSlot < tileTexture.textures.length) {\n        var uniformName = \"\".concat(Uniforms.TILE_TEXTURE_ARRAY, \"[\").concat(textureSlot, \"]\");\n        this.helper.bindTexture(tileTexture.textures[textureSlot], textureSlot, uniformName);\n        ++textureSlot;\n      }\n      for (var paletteIndex = 0; paletteIndex < this.paletteTextures_.length; ++paletteIndex) {\n        var paletteTexture = this.paletteTextures_[paletteIndex];\n        var texture = paletteTexture.getTexture(gl);\n        this.helper.bindTexture(texture, textureSlot, paletteTexture.name);\n        ++textureSlot;\n      }\n      var viewState = frameState.viewState;\n      var tileWidthWithGutter = tileSize[0] + 2 * gutter;\n      var tileHeightWithGutter = tileSize[1] + 2 * gutter;\n      var tile = tileTexture.tile;\n      var tileCoord = tile.tileCoord;\n      var tileCenterI = tileCoord[1];\n      var tileCenterJ = tileCoord[2];\n      this.helper.setUniformMatrixValue(Uniforms.TILE_TRANSFORM, mat4FromTransform(this.tempMat4, tileTransform));\n      this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n      this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n      var gutterExtent = renderExtent;\n      if (gutter > 0) {\n        gutterExtent = tileExtent;\n        getIntersection(gutterExtent, renderExtent, gutterExtent);\n      }\n      this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n      this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n      this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n      this.helper.setUniformFloatValue(Uniforms.TEXTURE_PIXEL_WIDTH, tileWidthWithGutter);\n      this.helper.setUniformFloatValue(Uniforms.TEXTURE_PIXEL_HEIGHT, tileHeightWithGutter);\n      this.helper.setUniformFloatValue(Uniforms.TEXTURE_RESOLUTION, tileResolution);\n      this.helper.setUniformFloatValue(Uniforms.TEXTURE_ORIGIN_X, tileOrigin[0] + tileCenterI * tileSize[0] * tileResolution - gutter * tileResolution);\n      this.helper.setUniformFloatValue(Uniforms.TEXTURE_ORIGIN_Y, tileOrigin[1] - tileCenterJ * tileSize[1] * tileResolution + gutter * tileResolution);\n      this.helper.drawElements(0, this.indices_.getSize());\n    }\n\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n     */\n  }, {\n    key: \"getData\",\n    value: function getData(pixel) {\n      var gl = this.helper.getGL();\n      if (!gl) {\n        return null;\n      }\n      var frameState = this.frameState;\n      if (!frameState) {\n        return null;\n      }\n      var layer = this.getLayer();\n      var coordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n      var viewState = frameState.viewState;\n      var layerExtent = layer.getExtent();\n      if (layerExtent) {\n        if (!containsCoordinate(fromUserExtent(layerExtent, viewState.projection), coordinate)) {\n          return null;\n        }\n      }\n\n      // determine last source suitable for rendering at coordinate\n      var sources = layer.getSources(boundingExtent([coordinate]), viewState.resolution);\n      var i, source, tileGrid;\n      for (i = sources.length - 1; i >= 0; --i) {\n        source = sources[i];\n        if (source.getState() === 'ready') {\n          tileGrid = source.getTileGridForProjection(viewState.projection);\n          if (source.getWrapX()) {\n            break;\n          }\n          var gridExtent = tileGrid.getExtent();\n          if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n            break;\n          }\n        }\n      }\n      if (i < 0) {\n        return null;\n      }\n      var tileTextureCache = this.tileRepresentationCache;\n      for (var z = tileGrid.getZForResolution(viewState.resolution); z >= tileGrid.getMinZoom(); --z) {\n        var tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n        var cacheKey = getCacheKey(source, tileCoord);\n        if (!tileTextureCache.containsKey(cacheKey)) {\n          continue;\n        }\n        var tileTexture = tileTextureCache.get(cacheKey);\n        var tile = tileTexture.tile;\n        if ((tile instanceof ReprojTile || tile instanceof ReprojDataTile) && tile.getState() === TileState.EMPTY) {\n          return null;\n        }\n        if (!tileTexture.loaded) {\n          continue;\n        }\n        var tileOrigin = tileGrid.getOrigin(z);\n        var tileSize = toSize(tileGrid.getTileSize(z));\n        var tileResolution = tileGrid.getResolution(z);\n        var col = (coordinate[0] - tileOrigin[0]) / tileResolution - tileCoord[1] * tileSize[0];\n        var row = (tileOrigin[1] - coordinate[1]) / tileResolution - tileCoord[2] * tileSize[1];\n        return tileTexture.getPixelData(col, row);\n      }\n      return null;\n    }\n\n    /**\n     * Clean up.\n     */\n  }, {\n    key: \"disposeInternal\",\n    value: function disposeInternal() {\n      var helper = this.helper;\n      if (helper) {\n        var gl = helper.getGL();\n        gl.deleteProgram(this.program_);\n        delete this.program_;\n        helper.deleteBuffer(this.indices_);\n      }\n      _superPropGet(WebGLTileLayerRenderer, \"disposeInternal\", this, 3)([]);\n      delete this.indices_;\n    }\n  }]);\n}(WebGLBaseTileLayerRenderer);\nexport default WebGLTileLayerRenderer;","map":{"version":3,"names":["ReprojDataTile","ReprojTile","TileState","TileTexture","WebGLArrayBuffer","WebGLBaseTileLayerRenderer","Uniforms","BaseUniforms","getCacheKey","AttributeType","ELEMENT_ARRAY_BUFFER","STATIC_DRAW","apply","applyTransform","boundingExtent","containsCoordinate","getIntersection","fromUserExtent","fromTransform","mat4FromTransform","toSize","_objectSpread","TILE_TEXTURE_ARRAY","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","Attributes","TEXTURE_COORD","attributeDescriptions","name","size","type","FLOAT","WebGLTileLayerRenderer","_WebGLBaseTileLayerRe","tileLayer","options","_this","_classCallCheck","_callSuper","program_","vertexShader_","vertexShader","fragmentShader_","fragmentShader","indices_","fromArray","paletteTextures_","paletteTextures","_inherits","_createClass","key","value","reset","_superPropGet","helper","getProgram","afterHelperCreated","flushBufferData","createTileRepresentation","beforeTilesRender","frameState","tilesWithAlpha","useProgram","renderTile","tileTexture","tileTransform","renderExtent","tileResolution","tileSize","tileOrigin","tileExtent","depth","gutter","alpha","gl","getGL","bindBuffer","coords","enableAttributes","textureSlot","textures","length","uniformName","concat","bindTexture","paletteIndex","paletteTexture","texture","getTexture","viewState","tileWidthWithGutter","tileHeightWithGutter","tile","tileCoord","tileCenterI","tileCenterJ","setUniformMatrixValue","TILE_TRANSFORM","tempMat4","setUniformFloatValue","TRANSITION_ALPHA","DEPTH","gutterExtent","setUniformFloatVec4","RENDER_EXTENT","RESOLUTION","resolution","ZOOM","zoom","drawElements","getSize","getData","pixel","layer","getLayer","coordinate","pixelToCoordinateTransform","slice","layerExtent","getExtent","projection","sources","getSources","i","source","tileGrid","getState","getTileGridForProjection","getWrapX","gridExtent","tileTextureCache","tileRepresentationCache","z","getZForResolution","getMinZoom","getTileCoordForCoordAndZ","cacheKey","containsKey","get","EMPTY","loaded","getOrigin","getTileSize","getResolution","col","row","getPixelData","disposeInternal","deleteProgram","deleteBuffer"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/renderer/webgl/TileLayer.js"],"sourcesContent":["/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLBaseTileLayerRenderer, {\n  Uniforms as BaseUniforms,\n  getCacheKey,\n} from './TileLayerBase.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport {apply as applyTransform} from '../../transform.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {fromTransform as mat4FromTransform} from '../../vec/mat4.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  ...BaseUniforms,\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").TileType} TileTextureType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").default} TileTextureRepresentation\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLBaseTileLayerRenderer<LayerType, TileTextureType, TileTextureRepresentation>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLBaseTileLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, options);\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset(options);\n\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n    this.paletteTextures_ = options.paletteTextures || [];\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_\n      );\n    }\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  createTileRepresentation(options) {\n    return new TileTexture(options);\n  }\n\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    super.beforeTilesRender(frameState, tilesWithAlpha);\n    this.helper.useProgram(this.program_, frameState);\n  }\n\n  renderTile(\n    tileTexture,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha\n  ) {\n    const gl = this.helper.getGL();\n    this.helper.bindBuffer(tileTexture.coords);\n    this.helper.bindBuffer(this.indices_);\n    this.helper.enableAttributes(attributeDescriptions);\n\n    let textureSlot = 0;\n    while (textureSlot < tileTexture.textures.length) {\n      const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n      this.helper.bindTexture(\n        tileTexture.textures[textureSlot],\n        textureSlot,\n        uniformName\n      );\n      ++textureSlot;\n    }\n\n    for (\n      let paletteIndex = 0;\n      paletteIndex < this.paletteTextures_.length;\n      ++paletteIndex\n    ) {\n      const paletteTexture = this.paletteTextures_[paletteIndex];\n      const texture = paletteTexture.getTexture(gl);\n      this.helper.bindTexture(texture, textureSlot, paletteTexture.name);\n      ++textureSlot;\n    }\n\n    const viewState = frameState.viewState;\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const tile = tileTexture.tile;\n    const tileCoord = tile.tileCoord;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    this.helper.setUniformMatrixValue(\n      Uniforms.TILE_TRANSFORM,\n      mat4FromTransform(this.tempMat4, tileTransform)\n    );\n\n    this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n    this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n\n    let gutterExtent = renderExtent;\n    if (gutter > 0) {\n      gutterExtent = tileExtent;\n      getIntersection(gutterExtent, renderExtent, gutterExtent);\n    }\n    this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n\n    this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n    this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_WIDTH,\n      tileWidthWithGutter\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_HEIGHT,\n      tileHeightWithGutter\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_RESOLUTION,\n      tileResolution\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_X,\n      tileOrigin[0] +\n        tileCenterI * tileSize[0] * tileResolution -\n        gutter * tileResolution\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_Y,\n      tileOrigin[1] -\n        tileCenterJ * tileSize[1] * tileResolution +\n        gutter * tileResolution\n    );\n\n    this.helper.drawElements(0, this.indices_.getSize());\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileRepresentationCache;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n      helper.deleteBuffer(this.indices_);\n    }\n    super.disposeInternal();\n    delete this.indices_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}