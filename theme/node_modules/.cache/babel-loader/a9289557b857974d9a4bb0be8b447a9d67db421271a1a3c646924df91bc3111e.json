{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\n/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { all, focusWithTabindex, noModifierKeys, primaryAction } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport { rotate as rotateCoordinate, scale as scaleCoordinate } from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*#__PURE__*/function (_PointerInteraction) {\n  /**\n   * @param {Options} [options] Options.\n   */\n  function DragPan(options) {\n    var _this;\n    _classCallCheck(this, DragPan);\n    _this = _callSuper(this, DragPan, [{\n      stopDown: FALSE\n    }]);\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    _this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    _this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    _this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    _this.panning_ = false;\n    var condition = options.condition ? options.condition : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.condition_ = options.onFocusOnly ? all(focusWithTabindex, condition) : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.noKinetic_ = false;\n    return _this;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  _inherits(DragPan, _PointerInteraction);\n  return _createClass(DragPan, [{\n    key: \"handleDragEvent\",\n    value: function handleDragEvent(mapBrowserEvent) {\n      var map = mapBrowserEvent.map;\n      if (!this.panning_) {\n        this.panning_ = true;\n        map.getView().beginInteraction();\n      }\n      var targetPointers = this.targetPointers;\n      var centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n      if (targetPointers.length == this.lastPointersCount_) {\n        if (this.kinetic_) {\n          this.kinetic_.update(centroid[0], centroid[1]);\n        }\n        if (this.lastCentroid) {\n          var delta = [this.lastCentroid[0] - centroid[0], centroid[1] - this.lastCentroid[1]];\n          var _map = mapBrowserEvent.map;\n          var view = _map.getView();\n          scaleCoordinate(delta, view.getResolution());\n          rotateCoordinate(delta, view.getRotation());\n          view.adjustCenterInternal(delta);\n        }\n      } else if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger down, tiny drag, second finger down\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = centroid;\n      this.lastPointersCount_ = targetPointers.length;\n      mapBrowserEvent.originalEvent.preventDefault();\n    }\n\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n  }, {\n    key: \"handleUpEvent\",\n    value: function handleUpEvent(mapBrowserEvent) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      if (this.targetPointers.length === 0) {\n        if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n          var distance = this.kinetic_.getDistance();\n          var angle = this.kinetic_.getAngle();\n          var center = view.getCenterInternal();\n          var centerpx = map.getPixelFromCoordinateInternal(center);\n          var dest = map.getCoordinateFromPixelInternal([centerpx[0] - distance * Math.cos(angle), centerpx[1] - distance * Math.sin(angle)]);\n          view.animateInternal({\n            center: view.getConstrainedCenter(dest),\n            duration: 500,\n            easing: easeOut\n          });\n        }\n        if (this.panning_) {\n          this.panning_ = false;\n          view.endInteraction();\n        }\n        return false;\n      }\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n  }, {\n    key: \"handleDownEvent\",\n    value: function handleDownEvent(mapBrowserEvent) {\n      if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        this.lastCentroid = null;\n        // stop any current animation\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        if (this.kinetic_) {\n          this.kinetic_.begin();\n        }\n        // No kinetic as soon as more than one pointer on the screen is\n        // detected. This is to prevent nasty pans after pinch.\n        this.noKinetic_ = this.targetPointers.length > 1;\n        return true;\n      }\n      return false;\n    }\n  }]);\n}(PointerInteraction);\nexport default DragPan;","map":{"version":3,"names":["PointerInteraction","centroid","centroidFromPointers","FALSE","all","focusWithTabindex","noModifierKeys","primaryAction","easeOut","rotate","rotateCoordinate","scale","scaleCoordinate","DragPan","_PointerInteraction","options","_this","_classCallCheck","_callSuper","stopDown","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","_inherits","_createClass","key","value","handleDragEvent","mapBrowserEvent","map","getView","beginInteraction","targetPointers","getEventPixel","length","update","delta","view","getResolution","getRotation","adjustCenterInternal","begin","originalEvent","preventDefault","handleUpEvent","end","distance","getDistance","angle","getAngle","center","getCenterInternal","centerpx","getPixelFromCoordinateInternal","dest","getCoordinateFromPixelInternal","Math","cos","sin","animateInternal","getConstrainedCenter","duration","easing","endInteraction","handleDownEvent","getAnimating","cancelAnimations"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/interaction/DragPan.js"],"sourcesContent":["/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}