{"ast":null,"code":"import _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport var GroupEvent = /*#__PURE__*/function (_Event) {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  function GroupEvent(type, layer) {\n    var _this;\n    _classCallCheck(this, GroupEvent);\n    _this = _callSuper(this, GroupEvent, [type]);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    _this.layer = layer;\n    return _this;\n  }\n  _inherits(GroupEvent, _Event);\n  return _createClass(GroupEvent);\n}(Event);\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*#__PURE__*/function (_BaseLayer) {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  function LayerGroup(options) {\n    var _this2;\n    _classCallCheck(this, LayerGroup);\n    options = options || {};\n    var baseOptions = /** @type {Options} */Object.assign({}, options);\n    delete baseOptions.layers;\n    var layers = options.layers;\n    _this2 = _callSuper(this, LayerGroup, [baseOptions]);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this2.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this2.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    _this2.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    _this2.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    _this2.listenerKeys_ = {};\n    _this2.addChangeListener(Property.LAYERS, _this2.handleLayersChanged_);\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {\n          unique: true\n        });\n      } else {\n        assert(typeof (/** @type {?} */layers.getArray) === 'function', 'Expected `layers` to be an array or a `Collection`');\n      }\n    } else {\n      layers = new Collection(undefined, {\n        unique: true\n      });\n    }\n    _this2.setLayers(layers);\n    return _this2;\n  }\n\n  /**\n   * @private\n   */\n  _inherits(LayerGroup, _BaseLayer);\n  return _createClass(LayerGroup, [{\n    key: \"handleLayerChange_\",\n    value: function handleLayerChange_() {\n      this.changed();\n    }\n\n    /**\n     * @private\n     */\n  }, {\n    key: \"handleLayersChanged_\",\n    value: function handleLayersChanged_() {\n      this.layersListenerKeys_.forEach(unlistenByKey);\n      this.layersListenerKeys_.length = 0;\n      var layers = this.getLayers();\n      this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n      for (var id in this.listenerKeys_) {\n        this.listenerKeys_[id].forEach(unlistenByKey);\n      }\n      clear(this.listenerKeys_);\n      var layersArray = layers.getArray();\n      for (var i = 0, ii = layersArray.length; i < ii; i++) {\n        var layer = layersArray[i];\n        this.registerLayerListeners_(layer);\n        this.dispatchEvent(new GroupEvent('addlayer', layer));\n      }\n      this.changed();\n    }\n\n    /**\n     * @param {BaseLayer} layer The layer.\n     */\n  }, {\n    key: \"registerLayerListeners_\",\n    value: function registerLayerListeners_(layer) {\n      var listenerKeys = [listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this), listen(layer, EventType.CHANGE, this.handleLayerChange_, this)];\n      if (layer instanceof LayerGroup) {\n        listenerKeys.push(listen(layer, 'addlayer', this.handleLayerGroupAdd_, this), listen(layer, 'removelayer', this.handleLayerGroupRemove_, this));\n      }\n      this.listenerKeys_[getUid(layer)] = listenerKeys;\n    }\n\n    /**\n     * @param {GroupEvent} event The layer group event.\n     */\n  }, {\n    key: \"handleLayerGroupAdd_\",\n    value: function handleLayerGroupAdd_(event) {\n      this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n    }\n\n    /**\n     * @param {GroupEvent} event The layer group event.\n     */\n  }, {\n    key: \"handleLayerGroupRemove_\",\n    value: function handleLayerGroupRemove_(event) {\n      this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n    }\n\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n     * @private\n     */\n  }, {\n    key: \"handleLayersAdd_\",\n    value: function handleLayersAdd_(collectionEvent) {\n      var layer = collectionEvent.element;\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n      this.changed();\n    }\n\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n     * @private\n     */\n  }, {\n    key: \"handleLayersRemove_\",\n    value: function handleLayersRemove_(collectionEvent) {\n      var layer = collectionEvent.element;\n      var key = getUid(layer);\n      this.listenerKeys_[key].forEach(unlistenByKey);\n      delete this.listenerKeys_[key];\n      this.dispatchEvent(new GroupEvent('removelayer', layer));\n      this.changed();\n    }\n\n    /**\n     * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!Collection<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n     * @observable\n     * @api\n     */\n  }, {\n    key: \"getLayers\",\n    value: function getLayers() {\n      return /** @type {!Collection<import(\"./Base.js\").default>} */this.get(Property.LAYERS);\n    }\n\n    /**\n     * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n     * @observable\n     * @api\n     */\n  }, {\n    key: \"setLayers\",\n    value: function setLayers(layers) {\n      var collection = this.getLayers();\n      if (collection) {\n        var currentLayers = collection.getArray();\n        for (var i = 0, ii = currentLayers.length; i < ii; ++i) {\n          this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n        }\n      }\n      this.set(Property.LAYERS, layers);\n    }\n\n    /**\n     * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n  }, {\n    key: \"getLayersArray\",\n    value: function getLayersArray(array) {\n      array = array !== undefined ? array : [];\n      this.getLayers().forEach(function (layer) {\n        layer.getLayersArray(array);\n      });\n      return array;\n    }\n\n    /**\n     * Get the layer states list and use this groups z-index as the default\n     * for all layers in this and nested groups, if it is unset at this point.\n     * If dest is not provided and this group's z-index is undefined\n     * 0 is used a the default z-index.\n     * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n     * of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n  }, {\n    key: \"getLayerStatesArray\",\n    value: function getLayerStatesArray(dest) {\n      var states = dest !== undefined ? dest : [];\n      var pos = states.length;\n      this.getLayers().forEach(function (layer) {\n        layer.getLayerStatesArray(states);\n      });\n      var ownLayerState = this.getLayerState();\n      var defaultZIndex = ownLayerState.zIndex;\n      if (!dest && ownLayerState.zIndex === undefined) {\n        defaultZIndex = 0;\n      }\n      for (var i = pos, ii = states.length; i < ii; i++) {\n        var layerState = states[i];\n        layerState.opacity *= ownLayerState.opacity;\n        layerState.visible = layerState.visible && ownLayerState.visible;\n        layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n        layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n        layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n        layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n        if (ownLayerState.extent !== undefined) {\n          if (layerState.extent !== undefined) {\n            layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n          } else {\n            layerState.extent = ownLayerState.extent;\n          }\n        }\n        if (layerState.zIndex === undefined) {\n          layerState.zIndex = defaultZIndex;\n        }\n      }\n      return states;\n    }\n\n    /**\n     * @return {import(\"../source/Source.js\").State} Source state.\n     */\n  }, {\n    key: \"getSourceState\",\n    value: function getSourceState() {\n      return 'ready';\n    }\n  }]);\n}(BaseLayer);\nexport default LayerGroup;","map":{"version":3,"names":["BaseLayer","Collection","CollectionEventType","Event","EventType","ObjectEventType","assert","clear","getIntersection","getUid","listen","unlistenByKey","GroupEvent","_Event","type","layer","_this","_classCallCheck","_callSuper","_inherits","_createClass","Property","LAYERS","LayerGroup","_BaseLayer","options","_this2","baseOptions","Object","assign","layers","on","once","un","layersListenerKeys_","listenerKeys_","addChangeListener","handleLayersChanged_","Array","isArray","slice","unique","getArray","undefined","setLayers","key","value","handleLayerChange_","changed","forEach","length","getLayers","push","ADD","handleLayersAdd_","REMOVE","handleLayersRemove_","id","layersArray","i","ii","registerLayerListeners_","dispatchEvent","listenerKeys","PROPERTYCHANGE","CHANGE","handleLayerGroupAdd_","handleLayerGroupRemove_","event","collectionEvent","element","get","collection","currentLayers","set","getLayersArray","array","getLayerStatesArray","dest","states","pos","ownLayerState","getLayerState","defaultZIndex","zIndex","layerState","opacity","visible","maxResolution","Math","min","minResolution","max","minZoom","maxZoom","extent","getSourceState"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/layer/Group.js"],"sourcesContent":["/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}