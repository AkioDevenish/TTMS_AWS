{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\nimport ol_control_Control from 'ol/control/Control.js';\nimport ol_ext_element from '../util/element.js';\n\n/** \r\n * @classdesc\r\n * Application dialog\r\n * @extends {ol_control_Control}\r\n * @constructor\r\n * @param {*} options\r\n *  @param {string} options.className\r\n *  @param {ol.Map} options.map the map to place the dialog inside\r\n *  @param {Element} options.target target to place the dialog\r\n *  @param {boolean} options.fullscreen view dialog fullscreen (same as options.target = document.body)\r\n *  @param {boolean} options.zoom add a zoom effect\r\n *  @param {boolean} options.closeBox add a close button\r\n *  @param {number} options.max if not null add a progress bar to the dialog, default null\r\n *  @param {boolean} options.hideOnClick close dialog when click\r\n *  @param {boolean} options.hideOnBack close dialog when click the background\r\n *  @param {boolean} options.closeOnSubmit Prevent closing the dialog on submit\r\n */\nvar ol_control_Dialog = /*#__PURE__*/function (_ol_control_Control) {\n  function olcontrolDialog(options) {\n    var _this;\n    _classCallCheck(this, olcontrolDialog);\n    options = options || {};\n    if (options.fullscreen) options.target = document.body;\n    var element = ol_ext_element.create('DIV', {\n      className: ((options.className || '') + (options.zoom ? ' ol-zoom' : '') + ' ol-ext-dialog').trim()\n    });\n    _this = _callSuper(this, olcontrolDialog, [{\n      element: element,\n      target: options.target\n    }]);\n\n    // Constructor\n    element.addEventListener('click', function (e) {\n      if (this.get('hideOnBack') && e.target === element) this.close();\n      if (this.get('hideOnClick')) this.close();\n    }.bind(_this));\n    // form\n    var form = ol_ext_element.create('FORM', {\n      on: {\n        submit: _this._onButton('submit')\n      },\n      parent: element\n    });\n    // Title\n    ol_ext_element.create('H2', {\n      parent: form\n    });\n    // Close box\n    ol_ext_element.create('DIV', {\n      className: 'ol-closebox',\n      click: _this._onButton('cancel'),\n      parent: form\n    });\n    // Content\n    ol_ext_element.create('DIV', {\n      className: 'ol-content',\n      parent: form\n    });\n    // Progress\n    _this._progress = ol_ext_element.create('DIV', {\n      style: {\n        display: 'none'\n      },\n      parent: form\n    });\n    var bar = ol_ext_element.create('DIV', {\n      className: 'ol-progress-bar',\n      parent: _this._progress\n    });\n    _this._progressbar = ol_ext_element.create('DIV', {\n      parent: bar\n    });\n    _this._progressMessage = ol_ext_element.create('DIV', {\n      className: 'ol-progress-message',\n      parent: _this._progress\n    });\n    // Buttons\n    ol_ext_element.create('DIV', {\n      className: 'ol-buttons',\n      parent: form\n    });\n    _this.set('closeBox', options.closeBox !== false);\n    _this.set('zoom', !!options.zoom);\n    _this.set('hideOnClick', !!options.hideOnClick);\n    _this.set('hideOnBack', !!options.hideOnBack);\n    _this.set('className', element.className);\n    _this.set('closeOnSubmit', options.closeOnSubmit);\n    _this.set('buttons', options.buttons);\n    _this.setContent(options);\n    return _this;\n  }\n  /** Show a new dialog\r\n   * @param { * | Element | string } options options or a content to show\r\n   *  @param {Element | String} options.content dialog content\r\n   *  @param {string} options.title title of the dialog\r\n   *  @param {string} options.className dialog class name\r\n   *  @param {number} options.autoclose a delay in ms before auto close\r\n   *  @param {boolean} options.hideOnBack close dialog when click the background\r\n   *  @param {number} options.max if not null add a progress bar to the dialog\r\n   *  @param {number} options.progress set the progress bar value\r\n   *  @param {Object} options.buttons a key/value list of button to show\r\n   *  @param {function} [options.onButton] a function that takes the button id and a list of input by className\r\n   */\n  _inherits(olcontrolDialog, _ol_control_Control);\n  return _createClass(olcontrolDialog, [{\n    key: \"show\",\n    value: function show(options) {\n      if (options) {\n        if (options instanceof Element || typeof options === 'string') {\n          options = {\n            content: options\n          };\n        }\n        this.setContent(options);\n      }\n      this.element.classList.add('ol-visible');\n      this.element.setAttribute('aria-hidden', false);\n      var input = this.element.querySelector('input[type=\"text\"],input[type=\"search\"],input[type=\"number\"]');\n      if (input) input.focus();\n      this.dispatchEvent({\n        type: 'show'\n      });\n      if (options) {\n        // Auto close\n        if (options.autoclose) {\n          var listener = setTimeout(function () {\n            this.hide();\n          }.bind(this), options.autoclose);\n          this.once('hide', function () {\n            clearTimeout(listener);\n          });\n        }\n        // hideOnBack\n        if (options.hideOnBack) {\n          // save value\n          var value = this.get('hideOnBack');\n          this.set('hideOnBack', true);\n          this.once('hide', function () {\n            this.set('hideOnBack', value);\n          }.bind(this));\n        }\n      }\n    }\n    /** Open the dialog\r\n     */\n  }, {\n    key: \"open\",\n    value: function open() {\n      this.show();\n    }\n    /** Set the dialog content\r\n     * @param {Element | String} content dialog content\r\n     */\n  }, {\n    key: \"setContentMessage\",\n    value: function setContentMessage(content) {\n      if (content !== undefined) {\n        var elt = this.getContentElement();\n        if (content instanceof Element) ol_ext_element.setHTML(elt, '');\n        ol_ext_element.setHTML(elt, content || '');\n      }\n    }\n    /** Set the dialog title\r\n     * @param {Element | String} content dialog content\r\n     */\n  }, {\n    key: \"setTitle\",\n    value: function setTitle(title) {\n      var form = this.element.querySelector('form');\n      form.querySelector('h2').innerText = title || '';\n      if (title) {\n        form.classList.add('ol-title');\n      } else {\n        form.classList.remove('ol-title');\n      }\n    }\n    /** Set the dialog content\r\n     * @param {*} options\r\n     *  @param {Element | String} options.content dialog content\r\n     *  @param {string} options.title title of the dialog\r\n     *  @param {string} options.className dialog class name\r\n     *  @param {number} options.max if not null add a progress bar to the dialog\r\n     *  @param {number} options.progress set the progress bar value\r\n     *  @param {Object} options.buttons a key/value list of button to show\r\n     *  @param {function} [options.onButton] a function that takes the button id and a list of input by className\r\n     */\n  }, {\n    key: \"setContent\",\n    value: function setContent(options) {\n      if (!options) return;\n      this.element.className = this.get('className');\n      if (typeof options === 'string') options = {\n        content: options\n      };\n      options = options || {};\n      this.setProgress(false);\n      if (options.max) this.setProgress(0, options.max);\n      if (options.progress !== undefined) this.setProgress(options.progress);\n      //this.element.className = 'ol-ext-dialog' + (this.get('zoom') ? ' ol-zoom' : '');\n      if (this.get('zoom')) this.element.classList.add('ol-zoom');else this.element.classList.remove('ol-zoom');\n      if (options.className) {\n        options.className.split(' ').forEach(function (c) {\n          this.element.classList.add(c);\n        }.bind(this));\n      }\n      var form = this.element.querySelector('form');\n      // Content\n      if (options.content !== undefined) {\n        if (options.content instanceof Element) ol_ext_element.setHTML(form.querySelector('.ol-content'), '');\n        ol_ext_element.setHTML(form.querySelector('.ol-content'), options.content || '');\n      }\n      // Title\n      this.setTitle(options.title);\n      // Closebox\n      if (options.closeBox || this.get('closeBox') && options.closeBox !== false) {\n        form.classList.add('ol-closebox');\n      } else {\n        form.classList.remove('ol-closebox');\n      }\n      // Buttons\n      var buttons = this.element.querySelector('.ol-buttons');\n      buttons.innerHTML = '';\n      var btn = options.buttons || this.get('buttons');\n      if (btn) {\n        form.classList.add('ol-button');\n        for (var i in btn) {\n          ol_ext_element.create('INPUT', {\n            type: i === 'submit' ? 'submit' : 'button',\n            value: btn[i],\n            click: this._onButton(i, options.onButton),\n            parent: buttons\n          });\n        }\n      } else {\n        form.classList.remove('ol-button');\n      }\n    }\n    /** Get dialog content element\r\n     * @returns {Element}\r\n     */\n  }, {\n    key: \"getContentElement\",\n    value: function getContentElement() {\n      return this.element.querySelector('form .ol-content');\n    }\n    /** Set progress\r\n     * @param {number|boolean} val the progress value or false to hide the progressBar\r\n     * @param {number} max\r\n     * @param {string|element} message\r\n     */\n  }, {\n    key: \"setProgress\",\n    value: function setProgress(val, max, message) {\n      if (val === false) {\n        ol_ext_element.setStyle(this._progress, {\n          display: 'none'\n        });\n        return;\n      }\n      if (max > 0) {\n        this.set('max', Number(max));\n      } else {\n        max = this.get('max');\n      }\n      if (!max) {\n        ol_ext_element.setStyle(this._progress, {\n          display: 'none'\n        });\n      } else {\n        var p = Math.round(val / max * 100);\n        ol_ext_element.setStyle(this._progress, {\n          display: ''\n        });\n        this._progressbar.className = p ? '' : 'notransition';\n        ol_ext_element.setStyle(this._progressbar, {\n          width: p + '%'\n        });\n      }\n      this._progressMessage.innerHTML = '';\n      ol_ext_element.setHTML(this._progressMessage, message || '');\n    }\n    /** Returns a function to do something on button click\r\n     * @param {strnig} button button id\r\n     * @param {function} callback\r\n     * @returns {function}\r\n     * @private\r\n     */\n  }, {\n    key: \"_onButton\",\n    value: function _onButton(button, callback) {\n      // Dispatch a button event\n      var fn = function (e) {\n        e.preventDefault();\n        if (button !== 'submit' || this.get('closeOnSubmit') !== false) this.hide();\n        var inputs = this.getInputs();\n        this.dispatchEvent({\n          type: 'button',\n          button: button,\n          inputs: inputs\n        });\n        if (typeof callback === 'function') callback(button, inputs);\n      }.bind(this);\n      return fn;\n    }\n    /** Get inputs, textarea an select of the dialog by classname\r\n     * @return {Object} a {key:value} list of Elements by classname\r\n     */\n  }, {\n    key: \"getInputs\",\n    value: function getInputs() {\n      var inputs = {};\n      ['input', 'textarea', 'select'].forEach(function (type) {\n        this.element.querySelectorAll('form ' + type).forEach(function (input) {\n          if (input.className) {\n            input.className.split(' ').forEach(function (n) {\n              inputs[n] = input;\n            });\n          }\n        });\n      }.bind(this));\n      return inputs;\n    }\n    /** Close the dialog\r\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.element.classList.remove('ol-visible');\n      this.element.setAttribute('aria-hidden', true);\n      this.dispatchEvent({\n        type: 'hide'\n      });\n    }\n    /** Close the dialog \r\n     */\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.hide();\n    }\n    /** The dialog is shown\r\n     * @return {bool} true if a dialog is open\r\n     */\n  }, {\n    key: \"isOpen\",\n    value: function isOpen() {\n      return this.element.classList.contains('ol-visible');\n    }\n  }]);\n}(ol_control_Control);\nexport default ol_control_Dialog;","map":{"version":3,"names":["ol_control_Control","ol_ext_element","ol_control_Dialog","_ol_control_Control","olcontrolDialog","options","_this","_classCallCheck","fullscreen","target","document","body","element","create","className","zoom","trim","_callSuper","addEventListener","e","get","close","bind","form","on","submit","_onButton","parent","click","_progress","style","display","bar","_progressbar","_progressMessage","set","closeBox","hideOnClick","hideOnBack","closeOnSubmit","buttons","setContent","_inherits","_createClass","key","value","show","Element","content","classList","add","setAttribute","input","querySelector","focus","dispatchEvent","type","autoclose","listener","setTimeout","hide","once","clearTimeout","open","setContentMessage","undefined","elt","getContentElement","setHTML","setTitle","title","innerText","remove","setProgress","max","progress","split","forEach","c","innerHTML","btn","i","onButton","val","message","setStyle","Number","p","Math","round","width","button","callback","fn","preventDefault","inputs","getInputs","querySelectorAll","n","isOpen","contains"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol-ext/control/Dialog.js"],"sourcesContent":["import ol_control_Control from 'ol/control/Control.js'\r\nimport ol_ext_element from '../util/element.js'\r\n\r\n/** \r\n * @classdesc\r\n * Application dialog\r\n * @extends {ol_control_Control}\r\n * @constructor\r\n * @param {*} options\r\n *  @param {string} options.className\r\n *  @param {ol.Map} options.map the map to place the dialog inside\r\n *  @param {Element} options.target target to place the dialog\r\n *  @param {boolean} options.fullscreen view dialog fullscreen (same as options.target = document.body)\r\n *  @param {boolean} options.zoom add a zoom effect\r\n *  @param {boolean} options.closeBox add a close button\r\n *  @param {number} options.max if not null add a progress bar to the dialog, default null\r\n *  @param {boolean} options.hideOnClick close dialog when click\r\n *  @param {boolean} options.hideOnBack close dialog when click the background\r\n *  @param {boolean} options.closeOnSubmit Prevent closing the dialog on submit\r\n */\r\nvar ol_control_Dialog = class olcontrolDialog extends ol_control_Control {\r\n  constructor(options) {\r\n    options = options || {};\r\n    if (options.fullscreen) options.target = document.body;\r\n\r\n    var element = ol_ext_element.create('DIV', {\r\n      className: ((options.className || '') + (options.zoom ? ' ol-zoom' : '') + ' ol-ext-dialog').trim()\r\n    })\r\n    super({\r\n      element: element,\r\n      target: options.target\r\n    });\r\n\r\n    // Constructor\r\n    element.addEventListener('click', function (e) {\r\n      if (this.get('hideOnBack') && e.target === element) this.close();\r\n      if (this.get('hideOnClick')) this.close();\r\n    }.bind(this));\r\n    // form\r\n    var form = ol_ext_element.create('FORM', {\r\n      on: {\r\n        submit: this._onButton('submit')\r\n      },\r\n      parent: element\r\n    });\r\n    // Title\r\n    ol_ext_element.create('H2', {\r\n      parent: form\r\n    });\r\n    // Close box\r\n    ol_ext_element.create('DIV', {\r\n      className: 'ol-closebox',\r\n      click: this._onButton('cancel'),\r\n      parent: form\r\n    });\r\n    // Content\r\n    ol_ext_element.create('DIV', {\r\n      className: 'ol-content',\r\n      parent: form\r\n    });\r\n    // Progress\r\n    this._progress = ol_ext_element.create('DIV', {\r\n      style: { display: 'none' },\r\n      parent: form\r\n    });\r\n    var bar = ol_ext_element.create('DIV', {\r\n      className: 'ol-progress-bar',\r\n      parent: this._progress\r\n    });\r\n    this._progressbar = ol_ext_element.create('DIV', {\r\n      parent: bar\r\n    });\r\n    this._progressMessage = ol_ext_element.create('DIV', {\r\n      className: 'ol-progress-message',\r\n      parent: this._progress\r\n    });\r\n    // Buttons\r\n    ol_ext_element.create('DIV', {\r\n      className: 'ol-buttons',\r\n      parent: form\r\n    });\r\n\r\n    this.set('closeBox', options.closeBox !== false);\r\n    this.set('zoom', !!options.zoom);\r\n    this.set('hideOnClick', !!options.hideOnClick);\r\n    this.set('hideOnBack', !!options.hideOnBack);\r\n    this.set('className', element.className);\r\n    this.set('closeOnSubmit', options.closeOnSubmit);\r\n    this.set('buttons', options.buttons);\r\n    this.setContent(options);\r\n  }\r\n  /** Show a new dialog\r\n   * @param { * | Element | string } options options or a content to show\r\n   *  @param {Element | String} options.content dialog content\r\n   *  @param {string} options.title title of the dialog\r\n   *  @param {string} options.className dialog class name\r\n   *  @param {number} options.autoclose a delay in ms before auto close\r\n   *  @param {boolean} options.hideOnBack close dialog when click the background\r\n   *  @param {number} options.max if not null add a progress bar to the dialog\r\n   *  @param {number} options.progress set the progress bar value\r\n   *  @param {Object} options.buttons a key/value list of button to show\r\n   *  @param {function} [options.onButton] a function that takes the button id and a list of input by className\r\n   */\r\n  show(options) {\r\n    if (options) {\r\n      if (options instanceof Element || typeof (options) === 'string') {\r\n        options = { content: options };\r\n      }\r\n      this.setContent(options);\r\n    }\r\n    this.element.classList.add('ol-visible');\r\n    this.element.setAttribute('aria-hidden', false);\r\n    var input = this.element.querySelector('input[type=\"text\"],input[type=\"search\"],input[type=\"number\"]');\r\n    if (input)\r\n      input.focus();\r\n    this.dispatchEvent({ type: 'show' });\r\n    if (options) {\r\n      // Auto close\r\n      if (options.autoclose) {\r\n        var listener = setTimeout(function () { this.hide(); }.bind(this), options.autoclose);\r\n        this.once('hide', function () {\r\n          clearTimeout(listener);\r\n        });\r\n      }\r\n      // hideOnBack\r\n      if (options.hideOnBack) {\r\n        // save value\r\n        var value = this.get('hideOnBack');\r\n        this.set('hideOnBack', true);\r\n        this.once('hide', function () {\r\n          this.set('hideOnBack', value);\r\n        }.bind(this));\r\n      }\r\n    }\r\n  }\r\n  /** Open the dialog\r\n   */\r\n  open() {\r\n    this.show();\r\n  }\r\n  /** Set the dialog content\r\n   * @param {Element | String} content dialog content\r\n   */\r\n  setContentMessage(content) {\r\n    if (content !== undefined) {\r\n      var elt = this.getContentElement();\r\n      if (content instanceof Element)\r\n        ol_ext_element.setHTML(elt, '');\r\n      ol_ext_element.setHTML(elt, content || '');\r\n    }\r\n  }\r\n  /** Set the dialog title\r\n   * @param {Element | String} content dialog content\r\n   */\r\n  setTitle(title) {\r\n    var form = this.element.querySelector('form');\r\n    form.querySelector('h2').innerText = title || '';\r\n    if (title) {\r\n      form.classList.add('ol-title');\r\n    } else {\r\n      form.classList.remove('ol-title');\r\n    }\r\n  }\r\n  /** Set the dialog content\r\n   * @param {*} options\r\n   *  @param {Element | String} options.content dialog content\r\n   *  @param {string} options.title title of the dialog\r\n   *  @param {string} options.className dialog class name\r\n   *  @param {number} options.max if not null add a progress bar to the dialog\r\n   *  @param {number} options.progress set the progress bar value\r\n   *  @param {Object} options.buttons a key/value list of button to show\r\n   *  @param {function} [options.onButton] a function that takes the button id and a list of input by className\r\n   */\r\n  setContent(options) {\r\n    if (!options)\r\n      return;\r\n    this.element.className = this.get('className');\r\n    if (typeof (options) === 'string')\r\n      options = { content: options };\r\n    options = options || {};\r\n    this.setProgress(false);\r\n    if (options.max)\r\n      this.setProgress(0, options.max);\r\n    if (options.progress !== undefined)\r\n      this.setProgress(options.progress);\r\n    //this.element.className = 'ol-ext-dialog' + (this.get('zoom') ? ' ol-zoom' : '');\r\n    if (this.get('zoom'))\r\n      this.element.classList.add('ol-zoom');\r\n    else\r\n      this.element.classList.remove('ol-zoom');\r\n    if (options.className) {\r\n      options.className.split(' ').forEach(function (c) {\r\n        this.element.classList.add(c);\r\n      }.bind(this));\r\n    }\r\n    var form = this.element.querySelector('form');\r\n    // Content\r\n    if (options.content !== undefined) {\r\n      if (options.content instanceof Element)\r\n        ol_ext_element.setHTML(form.querySelector('.ol-content'), '');\r\n      ol_ext_element.setHTML(form.querySelector('.ol-content'), options.content || '');\r\n    }\r\n    // Title\r\n    this.setTitle(options.title);\r\n    // Closebox\r\n    if (options.closeBox || (this.get('closeBox') && options.closeBox !== false)) {\r\n      form.classList.add('ol-closebox');\r\n    } else {\r\n      form.classList.remove('ol-closebox');\r\n    }\r\n    // Buttons\r\n    var buttons = this.element.querySelector('.ol-buttons');\r\n    buttons.innerHTML = '';\r\n    var btn = options.buttons || this.get('buttons');\r\n    if (btn) {\r\n      form.classList.add('ol-button');\r\n      for (var i in btn) {\r\n        ol_ext_element.create('INPUT', {\r\n          type: (i === 'submit' ? 'submit' : 'button'),\r\n          value: btn[i],\r\n          click: this._onButton(i, options.onButton),\r\n          parent: buttons\r\n        });\r\n      }\r\n    } else {\r\n      form.classList.remove('ol-button');\r\n    }\r\n  }\r\n  /** Get dialog content element\r\n   * @returns {Element}\r\n   */\r\n  getContentElement() {\r\n    return this.element.querySelector('form .ol-content');\r\n  }\r\n  /** Set progress\r\n   * @param {number|boolean} val the progress value or false to hide the progressBar\r\n   * @param {number} max\r\n   * @param {string|element} message\r\n   */\r\n  setProgress(val, max, message) {\r\n    if (val === false) {\r\n      ol_ext_element.setStyle(this._progress, { display: 'none' });\r\n      return;\r\n    }\r\n    if (max > 0) {\r\n      this.set('max', Number(max));\r\n    } else {\r\n      max = this.get('max');\r\n    }\r\n    if (!max) {\r\n      ol_ext_element.setStyle(this._progress, { display: 'none' });\r\n    } else {\r\n      var p = Math.round(val / max * 100);\r\n      ol_ext_element.setStyle(this._progress, { display: '' });\r\n      this._progressbar.className = p ? '' : 'notransition';\r\n      ol_ext_element.setStyle(this._progressbar, { width: p + '%' });\r\n    }\r\n    this._progressMessage.innerHTML = '';\r\n    ol_ext_element.setHTML(this._progressMessage, message || '');\r\n  }\r\n  /** Returns a function to do something on button click\r\n   * @param {strnig} button button id\r\n   * @param {function} callback\r\n   * @returns {function}\r\n   * @private\r\n   */\r\n  _onButton(button, callback) {\r\n    // Dispatch a button event\r\n    var fn = function (e) {\r\n      e.preventDefault();\r\n      if (button !== 'submit' || this.get('closeOnSubmit') !== false) this.hide();\r\n      var inputs = this.getInputs();\r\n      this.dispatchEvent({ type: 'button', button: button, inputs: inputs });\r\n      if (typeof (callback) === 'function') callback(button, inputs);\r\n    }.bind(this);\r\n    return fn;\r\n  }\r\n  /** Get inputs, textarea an select of the dialog by classname\r\n   * @return {Object} a {key:value} list of Elements by classname\r\n   */\r\n  getInputs() {\r\n    var inputs = {};\r\n    ['input', 'textarea', 'select'].forEach(function (type) {\r\n      this.element.querySelectorAll('form ' + type).forEach(function (input) {\r\n        if (input.className) {\r\n          input.className.split(' ').forEach(function (n) {\r\n            inputs[n] = input;\r\n          });\r\n        }\r\n      });\r\n    }.bind(this));\r\n    return inputs;\r\n  }\r\n  /** Close the dialog\r\n   */\r\n  hide() {\r\n    this.element.classList.remove('ol-visible');\r\n    this.element.setAttribute('aria-hidden', true)\r\n    this.dispatchEvent({ type: 'hide' });\r\n  }\r\n  /** Close the dialog \r\n   */\r\n  close() {\r\n    this.hide();\r\n  }\r\n  /** The dialog is shown\r\n   * @return {bool} true if a dialog is open\r\n   */\r\n  isOpen() {\r\n    return (this.element.classList.contains('ol-visible'));\r\n  }\r\n}\r\n\r\nexport default ol_control_Dialog\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}