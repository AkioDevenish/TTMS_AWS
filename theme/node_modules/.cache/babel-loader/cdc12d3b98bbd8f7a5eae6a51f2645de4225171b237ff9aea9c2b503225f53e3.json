{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _superPropGet from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/superPropGet.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /*#__PURE__*/function (_MapEvent) {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  function MapBrowserEvent(type, map, originalEvent, dragging, frameState, activePointers) {\n    var _this;\n    _classCallCheck(this, MapBrowserEvent);\n    _this = _callSuper(this, MapBrowserEvent, [type, map, frameState]);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    _this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    _this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    _this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    _this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    _this.activePointers = activePointers;\n    return _this;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  _inherits(MapBrowserEvent, _MapEvent);\n  return _createClass(MapBrowserEvent, [{\n    key: \"pixel\",\n    get: function get() {\n      if (!this.pixel_) {\n        this.pixel_ = this.map.getEventPixel(this.originalEvent);\n      }\n      return this.pixel_;\n    },\n    set: function set(pixel) {\n      this.pixel_ = pixel;\n    }\n\n    /**\n     * The coordinate corresponding to the original browser event.  This will be in the user\n     * projection if one is set.  Otherwise it will be in the view projection.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n  }, {\n    key: \"coordinate\",\n    get: function get() {\n      if (!this.coordinate_) {\n        this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n      }\n      return this.coordinate_;\n    },\n    set: function set(coordinate) {\n      this.coordinate_ = coordinate;\n    }\n\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n  }, {\n    key: \"preventDefault\",\n    value: function preventDefault() {\n      _superPropGet(MapBrowserEvent, \"preventDefault\", this, 3)([]);\n      if ('preventDefault' in this.originalEvent) {\n        /** @type {UIEvent} */this.originalEvent.preventDefault();\n      }\n    }\n\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n  }, {\n    key: \"stopPropagation\",\n    value: function stopPropagation() {\n      _superPropGet(MapBrowserEvent, \"stopPropagation\", this, 3)([]);\n      if ('stopPropagation' in this.originalEvent) {\n        /** @type {UIEvent} */this.originalEvent.stopPropagation();\n      }\n    }\n  }]);\n}(MapEvent);\nexport default MapBrowserEvent;","map":{"version":3,"names":["MapEvent","MapBrowserEvent","_MapEvent","type","map","originalEvent","dragging","frameState","activePointers","_this","_classCallCheck","_callSuper","pixel_","coordinate_","undefined","_inherits","_createClass","key","get","getEventPixel","set","pixel","getCoordinateFromPixel","coordinate","value","preventDefault","_superPropGet","stopPropagation"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/MapBrowserEvent.js"],"sourcesContent":["/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,OAAOA,QAAQ,MAAM,eAAe;;AAEpC;AACA;AACA;AACA;AACA;AACA;AALA,IAMMC,eAAe,0BAAAC,SAAA;EACnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAAD,gBAAYE,IAAI,EAAEC,GAAG,EAAEC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,cAAc,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAT,eAAA;IAC1EQ,KAAA,GAAAE,UAAA,OAAAV,eAAA,GAAME,IAAI,EAAEC,GAAG,EAAEG,UAAU;;IAE3B;AACJ;AACA;AACA;AACA;AACA;IACIE,KAAA,CAAKJ,aAAa,GAAGA,aAAa;;IAElC;AACJ;AACA;AACA;IACII,KAAA,CAAKG,MAAM,GAAG,IAAI;;IAElB;AACJ;AACA;AACA;IACIH,KAAA,CAAKI,WAAW,GAAG,IAAI;;IAEvB;AACJ;AACA;AACA;AACA;AACA;AACA;IACIJ,KAAA,CAAKH,QAAQ,GAAGA,QAAQ,KAAKQ,SAAS,GAAGR,QAAQ,GAAG,KAAK;;IAEzD;AACJ;AACA;IACIG,KAAA,CAAKD,cAAc,GAAGA,cAAc;IAAC,OAAAC,KAAA;EACvC;;EAEA;AACF;AACA;AACA;AACA;EAJEM,SAAA,CAAAd,eAAA,EAAAC,SAAA;EAAA,OAAAc,YAAA,CAAAf,eAAA;IAAAgB,GAAA;IAAAC,GAAA,EAKA,SAAAA,IAAA,EAAY;MACV,IAAI,CAAC,IAAI,CAACN,MAAM,EAAE;QAChB,IAAI,CAACA,MAAM,GAAG,IAAI,CAACR,GAAG,CAACe,aAAa,CAAC,IAAI,CAACd,aAAa,CAAC;MAC1D;MACA,OAAO,IAAI,CAACO,MAAM;IACpB,CAAC;IAAAQ,GAAA,EACD,SAAAA,IAAUC,KAAK,EAAE;MACf,IAAI,CAACT,MAAM,GAAGS,KAAK;IACrB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAJ,GAAA;IAAAC,GAAA,EAMA,SAAAA,IAAA,EAAiB;MACf,IAAI,CAAC,IAAI,CAACL,WAAW,EAAE;QACrB,IAAI,CAACA,WAAW,GAAG,IAAI,CAACT,GAAG,CAACkB,sBAAsB,CAAC,IAAI,CAACD,KAAK,CAAC;MAChE;MACA,OAAO,IAAI,CAACR,WAAW;IACzB,CAAC;IAAAO,GAAA,EACD,SAAAA,IAAeG,UAAU,EAAE;MACzB,IAAI,CAACV,WAAW,GAAGU,UAAU;IAC/B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAN,GAAA;IAAAO,KAAA,EAKA,SAAAC,cAAcA,CAAA,EAAG;MACfC,aAAA,CAAAzB,eAAA;MACA,IAAI,gBAAgB,IAAI,IAAI,CAACI,aAAa,EAAE;QAC1C,sBAAwB,IAAI,CAACA,aAAa,CAAEoB,cAAc,CAAC,CAAC;MAC9D;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAR,GAAA;IAAAO,KAAA,EAKA,SAAAG,eAAeA,CAAA,EAAG;MAChBD,aAAA,CAAAzB,eAAA;MACA,IAAI,iBAAiB,IAAI,IAAI,CAACI,aAAa,EAAE;QAC3C,sBAAwB,IAAI,CAACA,aAAa,CAAEsB,eAAe,CAAC,CAAC;MAC/D;IACF;EAAC;AAAA,EApG2B3B,QAAQ;AAuGtC,eAAeC,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}