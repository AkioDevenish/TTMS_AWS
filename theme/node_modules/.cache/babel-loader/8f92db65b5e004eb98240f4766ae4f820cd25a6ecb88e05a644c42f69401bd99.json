{"ast":null,"code":"import _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\n/**\n * @module ol/format/filter/LogicalNary\n */\nimport Filter from './Filter.js';\nimport { assert } from '../../asserts.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nvar LogicalNary = /*#__PURE__*/function (_Filter) {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n   */\n  function LogicalNary(tagName, conditions) {\n    var _this;\n    _classCallCheck(this, LogicalNary);\n    _this = _callSuper(this, LogicalNary, [tagName]);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    _this.conditions = conditions;\n    assert(_this.conditions.length >= 2, 'At least 2 conditions are required');\n    return _this;\n  }\n  _inherits(LogicalNary, _Filter);\n  return _createClass(LogicalNary);\n}(Filter);\nexport default LogicalNary;","map":{"version":3,"names":["Filter","assert","LogicalNary","_Filter","tagName","conditions","_this","_classCallCheck","_callSuper","length","_inherits","_createClass"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/format/filter/LogicalNary.js"],"sourcesContent":["/**\n * @module ol/format/filter/LogicalNary\n */\nimport Filter from './Filter.js';\nimport {assert} from '../../asserts.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nclass LogicalNary extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n   */\n  constructor(tagName, conditions) {\n    super(tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 'At least 2 conditions are required');\n  }\n}\n\nexport default LogicalNary;\n"],"mappings":";;;;AAAA;AACA;AACA;AACA,OAAOA,MAAM,MAAM,aAAa;AAChC,SAAQC,MAAM,QAAO,kBAAkB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAOMC,WAAW,0BAAAC,OAAA;EACf;AACF;AACA;AACA;EACE,SAAAD,YAAYE,OAAO,EAAEC,UAAU,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAL,WAAA;IAC/BI,KAAA,GAAAE,UAAA,OAAAN,WAAA,GAAME,OAAO;;IAEb;AACJ;AACA;IACIE,KAAA,CAAKD,UAAU,GAAGA,UAAU;IAC5BJ,MAAM,CAACK,KAAA,CAAKD,UAAU,CAACI,MAAM,IAAI,CAAC,EAAE,oCAAoC,CAAC;IAAC,OAAAH,KAAA;EAC5E;EAACI,SAAA,CAAAR,WAAA,EAAAC,OAAA;EAAA,OAAAQ,YAAA,CAAAT,WAAA;AAAA,EAbuBF,MAAM;AAgBhC,eAAeE,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}