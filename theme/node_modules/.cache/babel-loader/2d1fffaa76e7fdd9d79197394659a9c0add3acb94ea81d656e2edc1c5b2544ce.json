{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\n/*\tCopyright (c) 2016 Jean-Marc VIGLINO,\r\n  released under the CeCILL-B license (French BSD license)\r\n  (http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.txt).\r\n*/\nimport ol_control_Control from 'ol/control/Control.js';\nimport ol_ext_element from '../util/element.js';\n\n/** A simple push button control\r\n * @constructor\r\n * @extends {ol_control_Control}\r\n * @param {Object=} options Control options.\r\n *  @param {String} options.className class of the control\r\n *  @param {String} options.title title of the control\r\n *  @param {String} options.name an optional name, default none\r\n *  @param {String} options.html html to insert in the control\r\n *  @param {function} options.handleClick callback when control is clicked (or use change:active event)\r\n */\nvar ol_control_Button = /*#__PURE__*/function (_ol_control_Control) {\n  function olcontrolButton(options) {\n    var _this;\n    _classCallCheck(this, olcontrolButton);\n    options = options || {};\n    var element = document.createElement('div');\n    element.className = (options.className || '') + \" ol-button ol-unselectable ol-control\";\n    _this = _callSuper(this, olcontrolButton, [{\n      element: element,\n      target: options.target\n    }]);\n    var self = _this;\n    var bt = _this.button_ = document.createElement(/ol-text-button/.test(options.className) ? \"div\" : \"button\");\n    bt.type = \"button\";\n    if (options.title) bt.title = options.title;\n    if (options.name) bt.name = options.name;\n    if (options.html instanceof Element) bt.appendChild(options.html);else bt.innerHTML = options.html || \"\";\n    var evtFunction = function evtFunction(e) {\n      if (e && e.preventDefault) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      if (options.handleClick) {\n        options.handleClick.call(self, e);\n      }\n    };\n    bt.addEventListener(\"click\", evtFunction);\n    // bt.addEventListener(\"touchstart\", evtFunction);\n    element.appendChild(bt);\n\n    // Try to get a title in the button content\n    if (!options.title && bt.firstElementChild) {\n      bt.title = bt.firstElementChild.title;\n    }\n    if (options.title) {\n      _this.set(\"title\", options.title);\n    }\n    if (options.title) _this.set(\"title\", options.title);\n    if (options.name) _this.set(\"name\", options.name);\n    return _this;\n  }\n  /** Set the control visibility\r\n  * @param {boolean} b\r\n  */\n  _inherits(olcontrolButton, _ol_control_Control);\n  return _createClass(olcontrolButton, [{\n    key: \"setVisible\",\n    value: function setVisible(val) {\n      if (val) ol_ext_element.show(this.element);else ol_ext_element.hide(this.element);\n    }\n    /**\r\n     * Test if the control is disabled.\r\n     * @return {bool}\r\n     * @api stable\r\n     */\n  }, {\n    key: \"getDisable\",\n    value: function getDisable() {\n      var button = this.element.querySelector('button');\n      return button && button.disabled;\n    }\n    /** Disable the control button. \r\n     * @param {bool} b disable (or enable) the control, default false (enable)\r\n     * @api stable\r\n     */\n  }, {\n    key: \"setDisable\",\n    value: function setDisable(b) {\n      if (this.getDisable() == b) return;\n      this.element.querySelector('button').disabled = b;\n    }\n    /**\r\n     * Set the button title\r\n     * @param {string} title\r\n     */\n  }, {\n    key: \"setTitle\",\n    value: function setTitle(title) {\n      this.button_.setAttribute('title', title);\n    }\n    /**\r\n     * Set the button html\r\n     * @param {string} html\r\n     */\n  }, {\n    key: \"setHtml\",\n    value: function setHtml(html) {\n      ol_ext_element.setHTML(this.button_, html);\n    }\n    /**\r\n     * Get the button element\r\n     * @returns {Element}\r\n     */\n  }, {\n    key: \"getButtonElement\",\n    value: function getButtonElement() {\n      return this.button_;\n    }\n  }]);\n}(ol_control_Control);\nexport default ol_control_Button;","map":{"version":3,"names":["ol_control_Control","ol_ext_element","ol_control_Button","_ol_control_Control","olcontrolButton","options","_this","_classCallCheck","element","document","createElement","className","_callSuper","target","self","bt","button_","test","type","title","name","html","Element","appendChild","innerHTML","evtFunction","e","preventDefault","stopPropagation","handleClick","call","addEventListener","firstElementChild","set","_inherits","_createClass","key","value","setVisible","val","show","hide","getDisable","button","querySelector","disabled","setDisable","b","setTitle","setAttribute","setHtml","setHTML","getButtonElement"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol-ext/control/Button.js"],"sourcesContent":["/*\tCopyright (c) 2016 Jean-Marc VIGLINO,\r\n  released under the CeCILL-B license (French BSD license)\r\n  (http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.txt).\r\n*/\r\nimport ol_control_Control from 'ol/control/Control.js'\r\n\r\nimport ol_ext_element from '../util/element.js'\r\n\r\n/** A simple push button control\r\n * @constructor\r\n * @extends {ol_control_Control}\r\n * @param {Object=} options Control options.\r\n *  @param {String} options.className class of the control\r\n *  @param {String} options.title title of the control\r\n *  @param {String} options.name an optional name, default none\r\n *  @param {String} options.html html to insert in the control\r\n *  @param {function} options.handleClick callback when control is clicked (or use change:active event)\r\n */\r\nvar ol_control_Button = class olcontrolButton extends ol_control_Control {\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    var element = document.createElement('div');\r\n    element.className = (options.className || '') + \" ol-button ol-unselectable ol-control\";\r\n    super({\r\n      element: element,\r\n      target: options.target\r\n    });\r\n\r\n    var self = this;\r\n\r\n    var bt = this.button_ = document.createElement(/ol-text-button/.test(options.className) ? \"div\" : \"button\");\r\n    bt.type = \"button\";\r\n    if (options.title)\r\n      bt.title = options.title;\r\n    if (options.name)\r\n      bt.name = options.name;\r\n    if (options.html instanceof Element)\r\n      bt.appendChild(options.html);\r\n    else\r\n      bt.innerHTML = options.html || \"\";\r\n    var evtFunction = function (e) {\r\n      if (e && e.preventDefault) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n      if (options.handleClick) {\r\n        options.handleClick.call(self, e);\r\n      }\r\n    };\r\n    bt.addEventListener(\"click\", evtFunction);\r\n    // bt.addEventListener(\"touchstart\", evtFunction);\r\n    element.appendChild(bt);\r\n\r\n    // Try to get a title in the button content\r\n    if (!options.title && bt.firstElementChild) {\r\n      bt.title = bt.firstElementChild.title;\r\n    }\r\n\r\n    if (options.title) {\r\n      this.set(\"title\", options.title);\r\n    }\r\n    if (options.title)\r\n      this.set(\"title\", options.title);\r\n    if (options.name)\r\n      this.set(\"name\", options.name);\r\n  }\r\n  /** Set the control visibility\r\n  * @param {boolean} b\r\n  */\r\n  setVisible(val) {\r\n    if (val)\r\n      ol_ext_element.show(this.element);\r\n    else\r\n      ol_ext_element.hide(this.element);\r\n  }\r\n  /**\r\n   * Test if the control is disabled.\r\n   * @return {bool}\r\n   * @api stable\r\n   */\r\n  getDisable() {\r\n    var button = this.element.querySelector('button');\r\n    return button && button.disabled;\r\n  }\r\n  /** Disable the control button. \r\n   * @param {bool} b disable (or enable) the control, default false (enable)\r\n   * @api stable\r\n   */\r\n  setDisable(b) {\r\n    if (this.getDisable() == b) return;\r\n    this.element.querySelector('button').disabled = b;\r\n  }\r\n  /**\r\n   * Set the button title\r\n   * @param {string} title\r\n   */\r\n  setTitle(title) {\r\n    this.button_.setAttribute('title', title);\r\n  }\r\n  /**\r\n   * Set the button html\r\n   * @param {string} html\r\n   */\r\n  setHtml(html) {\r\n    ol_ext_element.setHTML(this.button_, html);\r\n  }\r\n  /**\r\n   * Get the button element\r\n   * @returns {Element}\r\n   */\r\n  getButtonElement() {\r\n    return this.button_;\r\n  }\r\n}\r\n\r\nexport default ol_control_Button\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}