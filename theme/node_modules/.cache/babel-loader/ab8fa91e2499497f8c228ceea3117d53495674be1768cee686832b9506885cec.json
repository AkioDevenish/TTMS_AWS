{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _superPropGet from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/superPropGet.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.is-array.js\";\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\nimport { flatStylesToStyleFunction, rulesToStyleFunction } from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nvar BaseVectorLayer = /*#__PURE__*/function (_Layer) {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  function BaseVectorLayer(options) {\n    var _this;\n    _classCallCheck(this, BaseVectorLayer);\n    options = options ? options : {};\n    var baseOptions = Object.assign({}, options);\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    _this = _callSuper(this, BaseVectorLayer, [baseOptions]);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    _this.renderBuffer_ = options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    _this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    _this.styleFunction_ = undefined;\n    _this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ? options.updateWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ? options.updateWhileInteracting : false;\n    return _this;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  _inherits(BaseVectorLayer, _Layer);\n  return _createClass(BaseVectorLayer, [{\n    key: \"getDeclutter\",\n    value: function getDeclutter() {\n      return this.declutter_;\n    }\n\n    /**\n     * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n     * that resolves with an array of features. The array will either contain the topmost feature\n     * when a hit was detected, or it will be empty.\n     *\n     * The hit detection algorithm used for this method is optimized for performance, but is less\n     * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n     * Text is not considered, and icons are only represented by their bounding box instead of the exact\n     * image.\n     *\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n     * @api\n     */\n  }, {\n    key: \"getFeatures\",\n    value: function getFeatures(pixel) {\n      return _superPropGet(BaseVectorLayer, \"getFeatures\", this, 3)([pixel]);\n    }\n\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n  }, {\n    key: \"getRenderBuffer\",\n    value: function getRenderBuffer() {\n      return this.renderBuffer_;\n    }\n\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n  }, {\n    key: \"getRenderOrder\",\n    value: function getRenderOrder() {\n      return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */this.get(Property.RENDER_ORDER);\n    }\n\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n     * @api\n     */\n  }, {\n    key: \"getStyle\",\n    value: function getStyle() {\n      return this.style_;\n    }\n\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n  }, {\n    key: \"getStyleFunction\",\n    value: function getStyleFunction() {\n      return this.styleFunction_;\n    }\n\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n  }, {\n    key: \"getUpdateWhileAnimating\",\n    value: function getUpdateWhileAnimating() {\n      return this.updateWhileAnimating_;\n    }\n\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n  }, {\n    key: \"getUpdateWhileInteracting\",\n    value: function getUpdateWhileInteracting() {\n      return this.updateWhileInteracting_;\n    }\n\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n     */\n  }, {\n    key: \"renderDeclutter\",\n    value: function renderDeclutter(frameState) {\n      if (!frameState.declutterTree) {\n        frameState.declutterTree = new RBush(9);\n      }\n      /** @type {*} */\n      this.getRenderer().renderDeclutter(frameState);\n    }\n\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n  }, {\n    key: \"setRenderOrder\",\n    value: function setRenderOrder(renderOrder) {\n      this.set(Property.RENDER_ORDER, renderOrder);\n    }\n\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If set to `null`, the layer has no style (a `null` style),\n     * so only features that have their own styles will be rendered in the layer. Call\n     * `setStyle()` without arguments to reset to the default style. See\n     * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n     *\n     * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n     * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n     * ```js\n     * vectorLayer.setStyle({\n     *   \"fill-color\": \"yellow\",\n     *   \"stroke-color\": \"black\",\n     *   \"stroke-width\": 4\n     * })\n     * ```\n     *\n     * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n     * @api\n     */\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(style) {\n      this.style_ = toStyleLike(style);\n      this.styleFunction_ = style === null ? undefined : toStyleFunction(this.style_);\n      this.changed();\n    }\n  }]);\n}(Layer);\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n  var length = style.length;\n  var first = style[0];\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles = new Array(length);\n    for (var i = 0; i < length; ++i) {\n      var candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    var rules = new Array(length);\n    for (var _i = 0; _i < length; ++_i) {\n      var _candidate = style[_i];\n      if (!('style' in _candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[_i] = _candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n  var flatStyles = /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */style;\n  return flatStylesToStyleFunction(flatStyles);\n}\nexport default BaseVectorLayer;","map":{"version":3,"names":["Layer","RBush","Style","createDefaultStyle","toFunction","toStyleFunction","flatStylesToStyleFunction","rulesToStyleFunction","Property","RENDER_ORDER","BaseVectorLayer","_Layer","options","_this","_classCallCheck","baseOptions","Object","assign","style","renderBuffer","updateWhileAnimating","updateWhileInteracting","_callSuper","declutter_","declutter","undefined","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","_inherits","_createClass","key","value","getDeclutter","getFeatures","pixel","_superPropGet","getRenderBuffer","getRenderOrder","get","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","frameState","declutterTree","getRenderer","setRenderOrder","renderOrder","set","toStyleLike","changed","Array","isArray","length","first","styles","i","candidate","Error","rules","flatStyles"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/layer/BaseVector.js"],"sourcesContent":["/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}