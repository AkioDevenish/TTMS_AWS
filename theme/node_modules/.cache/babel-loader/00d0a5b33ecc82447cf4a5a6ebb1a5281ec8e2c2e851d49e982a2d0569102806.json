{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\n/**\n * @module ol/layer/Heatmap\n */\nimport BaseVector from './BaseVector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport { ShaderBuilder } from '../webgl/ShaderBuilder.js';\nimport { clamp } from '../math.js';\nimport { createCanvasContext2D } from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {BaseVector<import(\"../source/Vector.js\").default, WebGLPointsLayerRenderer>}\n * @api\n */\nvar Heatmap = /*#__PURE__*/function (_BaseVector) {\n  /**\n   * @param {Options} [options] Options.\n   */\n  function Heatmap(options) {\n    var _this;\n    _classCallCheck(this, Heatmap);\n    options = options ? options : {};\n    var baseOptions = Object.assign({}, options);\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    _this = _callSuper(this, Heatmap, [baseOptions]);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    _this.gradient_ = null;\n    _this.addChangeListener(Property.GRADIENT, _this.handleGradientChanged_);\n    _this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n    _this.setBlur(options.blur !== undefined ? options.blur : 15);\n    _this.setRadius(options.radius !== undefined ? options.radius : 8);\n    var weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      _this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      _this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    _this.setRenderOrder(null);\n    return _this;\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  _inherits(Heatmap, _BaseVector);\n  return _createClass(Heatmap, [{\n    key: \"getBlur\",\n    value: function getBlur() {\n      return /** @type {number} */this.get(Property.BLUR);\n    }\n\n    /**\n     * Return the gradient colors as array of strings.\n     * @return {Array<string>} Colors.\n     * @api\n     * @observable\n     */\n  }, {\n    key: \"getGradient\",\n    value: function getGradient() {\n      return /** @type {Array<string>} */this.get(Property.GRADIENT);\n    }\n\n    /**\n     * Return the size of the radius in pixels.\n     * @return {number} Radius size in pixel.\n     * @api\n     * @observable\n     */\n  }, {\n    key: \"getRadius\",\n    value: function getRadius() {\n      return /** @type {number} */this.get(Property.RADIUS);\n    }\n\n    /**\n     * @private\n     */\n  }, {\n    key: \"handleGradientChanged_\",\n    value: function handleGradientChanged_() {\n      this.gradient_ = createGradient(this.getGradient());\n    }\n\n    /**\n     * Set the blur size in pixels.\n     * @param {number} blur Blur size in pixels.\n     * @api\n     * @observable\n     */\n  }, {\n    key: \"setBlur\",\n    value: function setBlur(blur) {\n      this.set(Property.BLUR, blur);\n    }\n\n    /**\n     * Set the gradient colors as array of strings.\n     * @param {Array<string>} colors Gradient.\n     * @api\n     * @observable\n     */\n  }, {\n    key: \"setGradient\",\n    value: function setGradient(colors) {\n      this.set(Property.GRADIENT, colors);\n    }\n\n    /**\n     * Set the size of the radius in pixels.\n     * @param {number} radius Radius size in pixel.\n     * @api\n     * @observable\n     */\n  }, {\n    key: \"setRadius\",\n    value: function setRadius(radius) {\n      this.set(Property.RADIUS, radius);\n    }\n  }, {\n    key: \"createRenderer\",\n    value: function createRenderer() {\n      var _this2 = this;\n      var builder = new ShaderBuilder().addAttribute('float a_prop_weight').addVarying('v_prop_weight', 'float', 'a_prop_weight').addUniform('float u_size').addUniform('float u_blurSlope').setSymbolSizeExpression('vec2(u_size)').setSymbolColorExpression('vec4(smoothstep(0., 1., (1. - length(coordsPx * 2. / v_quadSizePx)) * u_blurSlope) * v_prop_weight)');\n      return new WebGLPointsLayerRenderer(this, {\n        className: this.getClassName(),\n        attributes: [{\n          name: 'weight',\n          callback: function callback(feature) {\n            var weight = _this2.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          }\n        }],\n        uniforms: {\n          u_size: function u_size() {\n            return (_this2.get(Property.RADIUS) + _this2.get(Property.BLUR)) * 2;\n          },\n          u_blurSlope: function u_blurSlope() {\n            return _this2.get(Property.RADIUS) / Math.max(1, _this2.get(Property.BLUR));\n          }\n        },\n        hitDetectionEnabled: true,\n        vertexShader: builder.getSymbolVertexShader(),\n        fragmentShader: builder.getSymbolFragmentShader(),\n        postProcesses: [{\n          fragmentShader: \"\\n            precision mediump float;\\n\\n            uniform sampler2D u_image;\\n            uniform sampler2D u_gradientTexture;\\n            uniform float u_opacity;\\n\\n            varying vec2 v_texCoord;\\n\\n            void main() {\\n              vec4 color = texture2D(u_image, v_texCoord);\\n              gl_FragColor.a = color.a * u_opacity;\\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\\n              gl_FragColor.rgb *= gl_FragColor.a;\\n            }\",\n          uniforms: {\n            u_gradientTexture: function u_gradientTexture() {\n              return _this2.gradient_;\n            },\n            u_opacity: function u_opacity() {\n              return _this2.getOpacity();\n            }\n          }\n        }]\n      });\n    }\n  }, {\n    key: \"renderDeclutter\",\n    value: function renderDeclutter() {}\n  }]);\n}(BaseVector);\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  var width = 1;\n  var height = 256;\n  var context = createCanvasContext2D(width, height);\n  var gradient = context.createLinearGradient(0, 0, width, height);\n  var step = 1 / (colors.length - 1);\n  for (var i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n  return context.canvas;\n}\nexport default Heatmap;","map":{"version":3,"names":["BaseVector","WebGLPointsLayerRenderer","ShaderBuilder","clamp","createCanvasContext2D","Property","BLUR","GRADIENT","RADIUS","DEFAULT_GRADIENT","Heatmap","_BaseVector","options","_this","_classCallCheck","baseOptions","Object","assign","gradient","radius","blur","weight","_callSuper","gradient_","addChangeListener","handleGradientChanged_","setGradient","setBlur","undefined","setRadius","weightFunction_","feature","get","setRenderOrder","_inherits","_createClass","key","value","getBlur","getGradient","getRadius","createGradient","set","colors","createRenderer","_this2","builder","addAttribute","addVarying","addUniform","setSymbolSizeExpression","setSymbolColorExpression","className","getClassName","attributes","name","callback","uniforms","u_size","u_blurSlope","Math","max","hitDetectionEnabled","vertexShader","getSymbolVertexShader","fragmentShader","getSymbolFragmentShader","postProcesses","u_gradientTexture","u_opacity","getOpacity","renderDeclutter","width","height","context","createLinearGradient","step","length","i","ii","addColorStop","fillStyle","fillRect","canvas"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/layer/Heatmap.js"],"sourcesContent":["/**\n * @module ol/layer/Heatmap\n */\nimport BaseVector from './BaseVector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {ShaderBuilder} from '../webgl/ShaderBuilder.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {BaseVector<import(\"../source/Vector.js\").default, WebGLPointsLayerRenderer>}\n * @api\n */\nclass Heatmap extends BaseVector {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  createRenderer() {\n    const builder = new ShaderBuilder()\n      .addAttribute('float a_prop_weight')\n      .addVarying('v_prop_weight', 'float', 'a_prop_weight')\n      .addUniform('float u_size')\n      .addUniform('float u_blurSlope')\n      .setSymbolSizeExpression('vec2(u_size)')\n      .setSymbolColorExpression(\n        'vec4(smoothstep(0., 1., (1. - length(coordsPx * 2. / v_quadSizePx)) * u_blurSlope) * v_prop_weight)'\n      );\n\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: (feature) => {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          },\n        },\n      ],\n      uniforms: {\n        u_size: () => {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        },\n        u_blurSlope: () => {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        },\n      },\n      hitDetectionEnabled: true,\n      vertexShader: builder.getSymbolVertexShader(),\n      fragmentShader: builder.getSymbolFragmentShader(),\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: () => this.gradient_,\n            u_opacity: () => this.getOpacity(),\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}