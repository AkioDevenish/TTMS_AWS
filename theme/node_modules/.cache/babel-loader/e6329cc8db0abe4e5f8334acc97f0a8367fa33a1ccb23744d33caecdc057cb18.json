{"ast":null,"code":"import _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.function.bind.js\";\n/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport { DECIMALS } from './common.js';\nimport { ceil } from '../math.js';\nimport { containsExtent, equals, getCenter, getForViewAndSize, getHeight, getWidth } from '../extent.js';\nimport { equivalent } from '../proj.js';\nimport { fromResolutionLike } from '../resolution.js';\nimport { linearFindNearest } from '../array.js';\n\n/**\n * @enum {string}\n */\nexport var ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport var ImageSourceEvent = /*#__PURE__*/function (_Event) {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  function ImageSourceEvent(type, image) {\n    var _this;\n    _classCallCheck(this, ImageSourceEvent);\n    _this = _callSuper(this, ImageSourceEvent, [type]);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    _this.image = image;\n    return _this;\n  }\n  _inherits(ImageSourceEvent, _Event);\n  return _createClass(ImageSourceEvent);\n}(Event);\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource = /*#__PURE__*/function (_Source) {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  function ImageSource(options) {\n    var _this2;\n    _classCallCheck(this, ImageSource);\n    _this2 = _callSuper(this, ImageSource, [{\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate: options.interpolate !== undefined ? options.interpolate : true\n    }]);\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this2.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this2.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    _this2.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    _this2.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    _this2.resolutions_ = options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    _this2.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this2.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    _this2.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    _this2.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this2.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this2.static_ = options.loader ? options.loader.length === 0 : false;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    _this2.wantedProjection_ = null;\n    return _this2;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  _inherits(ImageSource, _Source);\n  return _createClass(ImageSource, [{\n    key: \"getResolutions\",\n    value: function getResolutions() {\n      return this.resolutions_;\n    }\n\n    /**\n     * @param {Array<number>|null} resolutions Resolutions.\n     */\n  }, {\n    key: \"setResolutions\",\n    value: function setResolutions(resolutions) {\n      this.resolutions_ = resolutions;\n    }\n\n    /**\n     * @protected\n     * @param {number} resolution Resolution.\n     * @return {number} Resolution.\n     */\n  }, {\n    key: \"findNearestResolution\",\n    value: function findNearestResolution(resolution) {\n      var resolutions = this.getResolutions();\n      if (resolutions) {\n        var idx = linearFindNearest(resolutions, resolution, 0);\n        resolution = resolutions[idx];\n      }\n      return resolution;\n    }\n\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../Image.js\").default} Single image.\n     */\n  }, {\n    key: \"getImage\",\n    value: function getImage(extent, resolution, pixelRatio, projection) {\n      var _this3 = this;\n      var sourceProjection = this.getProjection();\n      if (!sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n        return this.getImageInternal(extent, resolution, pixelRatio, projection);\n      }\n      if (this.reprojectedImage_) {\n        if (this.reprojectedRevision_ == this.getRevision() && equivalent(this.reprojectedImage_.getProjection(), projection) && this.reprojectedImage_.getResolution() == resolution && equals(this.reprojectedImage_.getExtent(), extent)) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n      this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n        return _this3.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n      }, this.getInterpolate());\n      this.reprojectedRevision_ = this.getRevision();\n      return this.reprojectedImage_;\n    }\n\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../Image.js\").default} Single image.\n     * @protected\n     */\n  }, {\n    key: \"getImageInternal\",\n    value: function getImageInternal(extent, resolution, pixelRatio, projection) {\n      if (this.loader) {\n        var requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n        var requestResolution = this.findNearestResolution(resolution);\n        if (this.image && (this.static_ || this.wantedProjection_ === projection && (this.wantedExtent_ && containsExtent(this.wantedExtent_, requestExtent) || containsExtent(this.image.getExtent(), requestExtent)) && (this.wantedResolution_ && fromResolutionLike(this.wantedResolution_) === requestResolution || fromResolutionLike(this.image.getResolution()) === requestResolution))) {\n          return this.image;\n        }\n        this.wantedProjection_ = projection;\n        this.wantedExtent_ = requestExtent;\n        this.wantedResolution_ = requestResolution;\n        this.image = new ImageWrapper(requestExtent, requestResolution, pixelRatio, this.loader);\n        this.image.addEventListener(EventType.CHANGE, this.handleImageChange.bind(this));\n      }\n      return this.image;\n    }\n\n    /**\n     * Handle image change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n  }, {\n    key: \"handleImageChange\",\n    value: function handleImageChange(event) {\n      var image = /** @type {import(\"../Image.js\").default} */event.target;\n      var type;\n      switch (image.getState()) {\n        case ImageState.LOADING:\n          this.loading = true;\n          type = ImageSourceEventType.IMAGELOADSTART;\n          break;\n        case ImageState.LOADED:\n          this.loading = false;\n          type = ImageSourceEventType.IMAGELOADEND;\n          break;\n        case ImageState.ERROR:\n          this.loading = false;\n          type = ImageSourceEventType.IMAGELOADERROR;\n          break;\n        default:\n          return;\n      }\n      if (this.hasListener(type)) {\n        this.dispatchEvent(new ImageSourceEvent(type, image));\n      }\n    }\n  }]);\n}(Source);\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */image.getImage().src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  var imageResolution = resolution / pixelRatio;\n  var center = getCenter(extent);\n  var viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  var viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  var marginWidth = ceil((ratio - 1) * viewWidth / 2, DECIMALS);\n  var requestWidth = viewWidth + 2 * marginWidth;\n  var marginHeight = ceil((ratio - 1) * viewHeight / 2, DECIMALS);\n  var requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [requestWidth, requestHeight]);\n}\nexport default ImageSource;","map":{"version":3,"names":["Event","EventType","ImageState","ImageWrapper","ReprojImage","Source","DECIMALS","ceil","containsExtent","equals","getCenter","getForViewAndSize","getHeight","getWidth","equivalent","fromResolutionLike","linearFindNearest","ImageSourceEventType","IMAGELOADSTART","IMAGELOADEND","IMAGELOADERROR","ImageSourceEvent","_Event","type","image","_this","_classCallCheck","_callSuper","_inherits","_createClass","ImageSource","_Source","options","_this2","attributions","projection","state","interpolate","undefined","on","once","un","loader","resolutions_","resolutions","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","static_","length","wantedProjection_","key","value","getResolutions","setResolutions","findNearestResolution","resolution","idx","getImage","extent","pixelRatio","_this3","sourceProjection","getProjection","getImageInternal","getRevision","getResolution","getExtent","dispose","getInterpolate","requestExtent","getRequestExtent","requestResolution","addEventListener","CHANGE","handleImageChange","bind","event","target","getState","LOADING","loading","LOADED","ERROR","hasListener","dispatchEvent","defaultImageLoadFunction","src","ratio","imageResolution","center","viewWidth","viewHeight","marginWidth","requestWidth","marginHeight","requestHeight"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/source/Image.js"],"sourcesContent":["/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\nimport {ceil} from '../math.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.wantedProjection_ = null;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate()\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (this.wantedProjection_ === projection &&\n            ((this.wantedExtent_ &&\n              containsExtent(this.wantedExtent_, requestExtent)) ||\n              containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedProjection_ = projection;\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this)\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}