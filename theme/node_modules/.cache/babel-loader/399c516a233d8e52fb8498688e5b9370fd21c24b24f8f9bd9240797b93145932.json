{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _superPropGet from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/superPropGet.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.function.bind.js\";\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /*#__PURE__*/function (_PriorityQueue) {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n    var _this;\n    _classCallCheck(this, TileQueue);\n    _this = _callSuper(this, TileQueue, [\n    /**\n     * @param {Array} element Element.\n     * @return {number} Priority.\n     */\n    function (element) {\n      return tilePriorityFunction.apply(null, element);\n    },\n    /**\n     * @param {Array} element Element.\n     * @return {string} Key.\n     */\n    function (element) {\n      return /** @type {import(\"./Tile.js\").default} */element[0].getKey();\n    }]);\n\n    /** @private */\n    _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    _this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    _this.tilesLoadingKeys_ = {};\n    return _this;\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  _inherits(TileQueue, _PriorityQueue);\n  return _createClass(TileQueue, [{\n    key: \"enqueue\",\n    value: function enqueue(element) {\n      var added = _superPropGet(TileQueue, \"enqueue\", this, 3)([element]);\n      if (added) {\n        var tile = element[0];\n        tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      return added;\n    }\n\n    /**\n     * @return {number} Number of tiles loading.\n     */\n  }, {\n    key: \"getTilesLoading\",\n    value: function getTilesLoading() {\n      return this.tilesLoading_;\n    }\n\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n  }, {\n    key: \"handleTileChange\",\n    value: function handleTileChange(event) {\n      var tile = /** @type {import(\"./Tile.js\").default} */event.target;\n      var state = tile.getState();\n      if (state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\n        if (state !== TileState.ERROR) {\n          tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        var tileKey = tile.getKey();\n        if (tileKey in this.tilesLoadingKeys_) {\n          delete this.tilesLoadingKeys_[tileKey];\n          --this.tilesLoading_;\n        }\n        this.tileChangeCallback_();\n      }\n    }\n\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n  }, {\n    key: \"loadMoreTiles\",\n    value: function loadMoreTiles(maxTotalLoading, maxNewLoads) {\n      var newLoads = 0;\n      var state, tile, tileKey;\n      while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads && this.getCount() > 0) {\n        tile = /** @type {import(\"./Tile.js\").default} */this.dequeue()[0];\n        tileKey = tile.getKey();\n        state = tile.getState();\n        if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n          this.tilesLoadingKeys_[tileKey] = true;\n          ++this.tilesLoading_;\n          ++newLoads;\n          tile.load();\n        }\n      }\n    }\n  }]);\n}(PriorityQueue);\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  var center = frameState.viewState.center;\n  var deltaX = tileCenter[0] - center[0];\n  var deltaY = tileCenter[1] - center[1];\n  return 65536 * Math.log(tileResolution) + Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n}","map":{"version":3,"names":["EventType","PriorityQueue","DROP","TileState","TileQueue","_PriorityQueue","tilePriorityFunction","tileChangeCallback","_this","_classCallCheck","_callSuper","element","apply","getKey","boundHandleTileChange_","handleTileChange","bind","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","_inherits","_createClass","key","value","enqueue","added","_superPropGet","tile","addEventListener","CHANGE","getTilesLoading","event","target","state","getState","LOADED","ERROR","EMPTY","removeEventListener","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getCount","dequeue","IDLE","load","getTilePriority","frameState","tileSourceKey","tileCenter","tileResolution","wantedTiles","center","viewState","deltaX","deltaY","Math","log","sqrt"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/TileQueue.js"],"sourcesContent":["/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}