{"ast":null,"code":"import _objectSpread from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\n/**\n * @module ol/layer/WebGLPoints\n */\nimport Layer from './Layer.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport { parseLiteralStyle } from '../webgl/styleparser.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {import('../style/webgl.js').WebGLStyle} style Literal style to apply to the layer features.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {VectorSourceType} [source] Point source.\n * @property {boolean} [disableHitDetection=false] Setting this to true will provide a slight performance boost, but will\n * prevent all hit detection on the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer optimized for rendering large point datasets. Takes a `style` property which\n * is a serializable JSON object describing how the layer should be rendered.\n *\n * Here are a few samples of literal style objects:\n * ```js\n * const style = {\n *   'circle-radius': 8,\n *   'circle-fill-color': '#33AAFF',\n *   'circle-opacity': 0.9\n * }\n * ```\n *\n * ```js\n * const style = {\n *   'icon-src': '../static/exclamation-mark.png',\n *   'icon-offset': [0, 12],\n *   'icon-width': 4,\n *   'icon-height': 8\n * }\n * ```\n *\n * **Important: a `WebGLPoints` layer must be manually disposed when removed, otherwise the underlying WebGL context\n * will not be garbage collected.**\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType, WebGLPointsLayerRenderer>}\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar WebGLPointsLayer = /*#__PURE__*/function (_Layer) {\n  /**\n   * @param {Options<VectorSourceType>} options Options.\n   */\n  function WebGLPointsLayer(options) {\n    var _this;\n    _classCallCheck(this, WebGLPointsLayer);\n    var baseOptions = Object.assign({}, options);\n    _this = _callSuper(this, WebGLPointsLayer, [baseOptions]);\n\n    /**\n     * @private\n     * @type {import('../webgl/styleparser.js').StyleParseResult}\n     */\n    _this.parseResult_ = parseLiteralStyle(options.style);\n\n    /**\n     * @type {Object<string, (string|number|Array<number>|boolean)>}\n     * @private\n     */\n    _this.styleVariables_ = options.style.variables || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.hitDetectionDisabled_ = !!options.disableHitDetection;\n    return _this;\n  }\n  _inherits(WebGLPointsLayer, _Layer);\n  return _createClass(WebGLPointsLayer, [{\n    key: \"createRenderer\",\n    value: function createRenderer() {\n      var _this2 = this;\n      var attributes = Object.keys(this.parseResult_.attributes).map(function (name) {\n        return _objectSpread({\n          name: name\n        }, _this2.parseResult_.attributes[name]);\n      });\n      return new WebGLPointsLayerRenderer(this, {\n        vertexShader: this.parseResult_.builder.getSymbolVertexShader(),\n        fragmentShader: this.parseResult_.builder.getSymbolFragmentShader(),\n        hitDetectionEnabled: !this.hitDetectionDisabled_,\n        uniforms: this.parseResult_.uniforms,\n        attributes: (/** @type {Array<import('../renderer/webgl/PointsLayer.js').CustomAttribute>} */\n        attributes)\n      });\n    }\n\n    /**\n     * Update any variables used by the layer style and trigger a re-render.\n     * @param {Object<string, number>} variables Variables to update.\n     */\n  }, {\n    key: \"updateStyleVariables\",\n    value: function updateStyleVariables(variables) {\n      Object.assign(this.styleVariables_, variables);\n      this.changed();\n    }\n  }]);\n}(Layer);\nexport default WebGLPointsLayer;","map":{"version":3,"names":["Layer","WebGLPointsLayerRenderer","parseLiteralStyle","WebGLPointsLayer","_Layer","options","_this","_classCallCheck","baseOptions","Object","assign","_callSuper","parseResult_","style","styleVariables_","variables","hitDetectionDisabled_","disableHitDetection","_inherits","_createClass","key","value","createRenderer","_this2","attributes","keys","map","name","_objectSpread","vertexShader","builder","getSymbolVertexShader","fragmentShader","getSymbolFragmentShader","hitDetectionEnabled","uniforms","updateStyleVariables","changed"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/layer/WebGLPoints.js"],"sourcesContent":["/**\n * @module ol/layer/WebGLPoints\n */\nimport Layer from './Layer.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {parseLiteralStyle} from '../webgl/styleparser.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {import('../style/webgl.js').WebGLStyle} style Literal style to apply to the layer features.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {VectorSourceType} [source] Point source.\n * @property {boolean} [disableHitDetection=false] Setting this to true will provide a slight performance boost, but will\n * prevent all hit detection on the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer optimized for rendering large point datasets. Takes a `style` property which\n * is a serializable JSON object describing how the layer should be rendered.\n *\n * Here are a few samples of literal style objects:\n * ```js\n * const style = {\n *   'circle-radius': 8,\n *   'circle-fill-color': '#33AAFF',\n *   'circle-opacity': 0.9\n * }\n * ```\n *\n * ```js\n * const style = {\n *   'icon-src': '../static/exclamation-mark.png',\n *   'icon-offset': [0, 12],\n *   'icon-width': 4,\n *   'icon-height': 8\n * }\n * ```\n *\n * **Important: a `WebGLPoints` layer must be manually disposed when removed, otherwise the underlying WebGL context\n * will not be garbage collected.**\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType, WebGLPointsLayerRenderer>}\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nclass WebGLPointsLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} options Options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {import('../webgl/styleparser.js').StyleParseResult}\n     */\n    this.parseResult_ = parseLiteralStyle(options.style);\n\n    /**\n     * @type {Object<string, (string|number|Array<number>|boolean)>}\n     * @private\n     */\n    this.styleVariables_ = options.style.variables || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hitDetectionDisabled_ = !!options.disableHitDetection;\n  }\n\n  createRenderer() {\n    const attributes = Object.keys(this.parseResult_.attributes).map(\n      (name) => ({\n        name,\n        ...this.parseResult_.attributes[name],\n      })\n    );\n    return new WebGLPointsLayerRenderer(this, {\n      vertexShader: this.parseResult_.builder.getSymbolVertexShader(),\n      fragmentShader: this.parseResult_.builder.getSymbolFragmentShader(),\n      hitDetectionEnabled: !this.hitDetectionDisabled_,\n      uniforms: this.parseResult_.uniforms,\n      attributes:\n        /** @type {Array<import('../renderer/webgl/PointsLayer.js').CustomAttribute>} */ (\n          attributes\n        ),\n    });\n  }\n\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {Object<string, number>} variables Variables to update.\n   */\n  updateStyleVariables(variables) {\n    Object.assign(this.styleVariables_, variables);\n    this.changed();\n  }\n}\n\nexport default WebGLPointsLayer;\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,YAAY;AAC9B,OAAOC,wBAAwB,MAAM,kCAAkC;AACvE,SAAQC,iBAAiB,QAAO,yBAAyB;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA,IAkCMC,gBAAgB,0BAAAC,MAAA;EACpB;AACF;AACA;EACE,SAAAD,iBAAYE,OAAO,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAJ,gBAAA;IACnB,IAAMK,WAAW,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEL,OAAO,CAAC;IAE9CC,KAAA,GAAAK,UAAA,OAAAR,gBAAA,GAAMK,WAAW;;IAEjB;AACJ;AACA;AACA;IACIF,KAAA,CAAKM,YAAY,GAAGV,iBAAiB,CAACG,OAAO,CAACQ,KAAK,CAAC;;IAEpD;AACJ;AACA;AACA;IACIP,KAAA,CAAKQ,eAAe,GAAGT,OAAO,CAACQ,KAAK,CAACE,SAAS,IAAI,CAAC,CAAC;;IAEpD;AACJ;AACA;AACA;IACIT,KAAA,CAAKU,qBAAqB,GAAG,CAAC,CAACX,OAAO,CAACY,mBAAmB;IAAC,OAAAX,KAAA;EAC7D;EAACY,SAAA,CAAAf,gBAAA,EAAAC,MAAA;EAAA,OAAAe,YAAA,CAAAhB,gBAAA;IAAAiB,GAAA;IAAAC,KAAA,EAED,SAAAC,cAAcA,CAAA,EAAG;MAAA,IAAAC,MAAA;MACf,IAAMC,UAAU,GAAGf,MAAM,CAACgB,IAAI,CAAC,IAAI,CAACb,YAAY,CAACY,UAAU,CAAC,CAACE,GAAG,CAC9D,UAACC,IAAI;QAAA,OAAAC,aAAA;UACHD,IAAI,EAAJA;QAAI,GACDJ,MAAI,CAACX,YAAY,CAACY,UAAU,CAACG,IAAI,CAAC;MAAA,CAEzC,CAAC;MACD,OAAO,IAAI1B,wBAAwB,CAAC,IAAI,EAAE;QACxC4B,YAAY,EAAE,IAAI,CAACjB,YAAY,CAACkB,OAAO,CAACC,qBAAqB,CAAC,CAAC;QAC/DC,cAAc,EAAE,IAAI,CAACpB,YAAY,CAACkB,OAAO,CAACG,uBAAuB,CAAC,CAAC;QACnEC,mBAAmB,EAAE,CAAC,IAAI,CAAClB,qBAAqB;QAChDmB,QAAQ,EAAE,IAAI,CAACvB,YAAY,CAACuB,QAAQ;QACpCX,UAAU,GACR;QACEA,UAAU;MAEhB,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;EAHE;IAAAJ,GAAA;IAAAC,KAAA,EAIA,SAAAe,oBAAoBA,CAACrB,SAAS,EAAE;MAC9BN,MAAM,CAACC,MAAM,CAAC,IAAI,CAACI,eAAe,EAAEC,SAAS,CAAC;MAC9C,IAAI,CAACsB,OAAO,CAAC,CAAC;IAChB;EAAC;AAAA,EAtD4BrC,KAAK;AAyDpC,eAAeG,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}