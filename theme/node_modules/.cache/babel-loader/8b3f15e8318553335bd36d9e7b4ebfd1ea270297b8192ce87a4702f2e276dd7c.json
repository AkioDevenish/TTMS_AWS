{"ast":null,"code":"import _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\n/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { disable } from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*#__PURE__*/function (_PointerInteraction) {\n  /**\n   * @param {Options} [options] Options.\n   */\n  function PinchRotate(options) {\n    var _this;\n    _classCallCheck(this, PinchRotate);\n    options = options ? options : {};\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */\n    options;\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n    _this = _callSuper(this, PinchRotate, [pointerOptions]);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    _this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.duration_ = options.duration !== undefined ? options.duration : 250;\n    return _this;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  _inherits(PinchRotate, _PointerInteraction);\n  return _createClass(PinchRotate, [{\n    key: \"handleDragEvent\",\n    value: function handleDragEvent(mapBrowserEvent) {\n      var rotationDelta = 0.0;\n      var touch0 = this.targetPointers[0];\n      var touch1 = this.targetPointers[1];\n\n      // angle between touches\n      var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n      if (this.lastAngle_ !== undefined) {\n        var delta = angle - this.lastAngle_;\n        this.rotationDelta_ += delta;\n        if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n          this.rotating_ = true;\n        }\n        rotationDelta = delta;\n      }\n      this.lastAngle_ = angle;\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      if (view.getConstraints().rotation === disable) {\n        return;\n      }\n\n      // rotate anchor point.\n      // FIXME: should be the intersection point between the lines:\n      //     touch0,touch1 and previousTouch0,previousTouch1\n      this.anchor_ = map.getCoordinateFromPixelInternal(map.getEventPixel(centroidFromPointers(this.targetPointers)));\n\n      // rotate\n      if (this.rotating_) {\n        map.render();\n        view.adjustRotationInternal(rotationDelta, this.anchor_);\n      }\n    }\n\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n  }, {\n    key: \"handleUpEvent\",\n    value: function handleUpEvent(mapBrowserEvent) {\n      if (this.targetPointers.length < 2) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n      }\n      return true;\n    }\n\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n  }, {\n    key: \"handleDownEvent\",\n    value: function handleDownEvent(mapBrowserEvent) {\n      if (this.targetPointers.length >= 2) {\n        var map = mapBrowserEvent.map;\n        this.anchor_ = null;\n        this.lastAngle_ = undefined;\n        this.rotating_ = false;\n        this.rotationDelta_ = 0.0;\n        if (!this.handlingDownUpSequence) {\n          map.getView().beginInteraction();\n        }\n        return true;\n      }\n      return false;\n    }\n  }]);\n}(PointerInteraction);\nexport default PinchRotate;","map":{"version":3,"names":["PointerInteraction","centroid","centroidFromPointers","FALSE","disable","PinchRotate","_PointerInteraction","options","_this","_classCallCheck","pointerOptions","stopDown","_callSuper","anchor_","lastAngle_","undefined","rotating_","rotationDelta_","threshold_","threshold","duration_","duration","_inherits","_createClass","key","value","handleDragEvent","mapBrowserEvent","rotationDelta","touch0","targetPointers","touch1","angle","Math","atan2","clientY","clientX","delta","abs","map","view","getView","getConstraints","rotation","getCoordinateFromPixelInternal","getEventPixel","render","adjustRotationInternal","handleUpEvent","length","endInteraction","handleDownEvent","handlingDownUpSequence","beginInteraction"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/interaction/PinchRotate.js"],"sourcesContent":["/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}