{"ast":null,"code":"import _createClass from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _callSuper from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/@babel/runtime/helpers/esm/inherits.js\";\n/**\n * @module ol/format/filter/EqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n * @api\n */\nvar EqualTo = /*#__PURE__*/function (_ComparisonBinary) {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean} [matchCase] Case-sensitive?\n   */\n  function EqualTo(propertyName, expression, matchCase) {\n    _classCallCheck(this, EqualTo);\n    return _callSuper(this, EqualTo, ['PropertyIsEqualTo', propertyName, expression, matchCase]);\n  }\n  _inherits(EqualTo, _ComparisonBinary);\n  return _createClass(EqualTo);\n}(ComparisonBinary);\nexport default EqualTo;","map":{"version":3,"names":["ComparisonBinary","EqualTo","_ComparisonBinary","propertyName","expression","matchCase","_classCallCheck","_callSuper","_inherits","_createClass"],"sources":["/Users/akio/Downloads/themeforest-veRyTIGn-mofi-vue-js-admin-template/theme/node_modules/ol/format/filter/EqualTo.js"],"sourcesContent":["/**\n * @module ol/format/filter/EqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n * @api\n */\nclass EqualTo extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean} [matchCase] Case-sensitive?\n   */\n  constructor(propertyName, expression, matchCase) {\n    super('PropertyIsEqualTo', propertyName, expression, matchCase);\n  }\n}\n\nexport default EqualTo;\n"],"mappings":";;;;AAAA;AACA;AACA;AACA,OAAOA,gBAAgB,MAAM,uBAAuB;;AAEpD;AACA;AACA;AACA;AACA;AAJA,IAKMC,OAAO,0BAAAC,iBAAA;EACX;AACF;AACA;AACA;AACA;EACE,SAAAD,QAAYE,YAAY,EAAEC,UAAU,EAAEC,SAAS,EAAE;IAAAC,eAAA,OAAAL,OAAA;IAAA,OAAAM,UAAA,OAAAN,OAAA,GACzC,mBAAmB,EAAEE,YAAY,EAAEC,UAAU,EAAEC,SAAS;EAChE;EAACG,SAAA,CAAAP,OAAA,EAAAC,iBAAA;EAAA,OAAAO,YAAA,CAAAR,OAAA;AAAA,EARmBD,gBAAgB;AAWtC,eAAeC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}